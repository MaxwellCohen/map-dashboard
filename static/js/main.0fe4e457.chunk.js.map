{"version":3,"sources":["components/Grid.js","utils/queryUtils.js","store/mapOptions/mapOptions.actions.js","components/Chart.js","sections/ChartSection.js","components/common/DropDown.js","store/csvData/csvData.actions.js","utils/Calculations.js","components/mapSelector.js","store/mapSettings/mapSettings.actions.js","components/DataSelector.js","components/common/DatePicker.js","components/fitlers/DatesFilter.js","components/fitlers/DateFilter.js","components/common/BasicTextFields.js","components/fitlers/SingleValueFilter.js","utils/Filters.js","components/fitlers/FilterItem.js","components/fitlers/FilterList.js","components/UrlSelector.js","components/cellEditors/NumericEditor.js","components/cellEditors/ColorEditor.js","components/chartSettings/useChartSettings.js","components/chartSettings/ChartSettings.js","sections/SettingSection.js","App.js","serviceWorker.js","store/csvData/csvData.reducer.js","store/mapOptions/mapOptions.reducer.js","api/api.js","store/csvData/csvDataTools.js","store/sagas.js","store/mapSettings/mapSettings.reducer.js","index.js"],"names":["Grid","useState","gridApi","setGridApi","cb","columnOrderRef","useRef","onDragStarted","e","current","columnApi","getColumnState","map","c","colId","onDragStopped","newColumnOrder","every","i","useDragColumnChange","gridColumnApi","setGridColumnApi","useSelector","data","filteredData","titles","className","style","height","width","marginRight","onGridReady","params","api","onRowDataChanged","allColumnIds","getAllColumns","forEach","column","push","autoSizeColumns","defaultColDef","initialWidth","sortable","resizable","columnDefs","v","headerName","field","rowData","getQueryVariable","variable","pairs","window","location","search","substring","split","decodeURIComponent","parseQueryUrlArr","qvm","Object","fromEntries","x","val","includes","updateQuery","key","value","Array","isArray","join","queryParams","URLSearchParams","set","history","replaceState","toString","setTitle","text","type","payload","setColorAxisMin","min","setColorAxisMax","max","setColorAxisStops","stops","sort","a","b","setMapData","name","series","colorAxis","proj4","Highcharts","Chart","groupData","displayField","processing","loading","options","dispatch","useDispatch","useEffect","length","Actions","display","immutable","highcharts","constructorType","ChartSection","padding","border","DropDown","values","onChange","label","getOptionLabel","getOptionSelected","Autocomplete","event","newValue","fullWidth","autoComplete","includeInputInList","renderInput","TextField","margin","defaultProps","option","startCase","loadData","url","updateFilters","filteringFuncitons","updateDisplay","aggregationAction","Calculations","arr","this","cache","newKey","toFixed","average","count","sum","range","numberData","parseFloat","filter","isNaN","_numberData","undefined","Math","reduce","listOfMaps","entries","mapDataIndex","flatMap","mapGroup","maps","MapSelector","mapInfo","mapSettings","loadNewMap","aggerationOptions","getOwnPropertyNames","prototype","k","startsWith","DataSelector","stateKey","flexDirection","justifyContent","flex","df","useStyles","makeStyles","theme","container","flexWrap","textField","marginLeft","spacing","DatePickers","props","classes","labelid","InputLabelProps","shrink","InputProps","inputProps","dateArr","d","Date","getTime","dateFormat","date","format","DatesFilter","dataField","filterValues","startDate","endDate","onFilterValueChange","rawData","minDate","setMinDate","maxDate","setMaxDate","updateFilter","useCallback","minVal","maxVal","minDateValue","calcMin","maxDateValue","addDays","calcMax","target","SingleValueFilter","internalUrl","setInternalUrl","BasicTextFields","internalVal","setInternalVal","onBlur","determinType","memoize","numberValue","dateValue","valueOf","alwaysTruefn","baseCompare","numCompare","dateCompare","defaultCompare","item","userValue","iv","parseData","equals","isSameDay","greater","isAfter","less","isBefore","filterObject","dayOf","dateAfter","dateBefore","dateBetween","isWithinInterval","start","end","makeFitler","fnMaker","filterOptions","keys","FilterItem","filterSettings","onFilterChange","onDelete","filterType","setFilterType","setDataField","setFilterValues","iFilterType","iDataFilter","iFieldValues","alignContent","paddingBottom","flexGrow","newFilter","alignItems","marginBottom","onDataFieldChange","DateFilter","displayfilterOptions","Button","onClick","FilterList","internalFilters","setInternalFilters","dispach","index","f","cf","filterChangeHandler","splice","alignSelf","UrlSelector","loadedURL","urlChangeHandler","newUrl","KEY_BACKSPACE","KEY_DELETE","getCharCodeFromEvent","which","keyCode","onKeyDown","indexOf","isLeftOrRight","deleteOrBackspace","stopPropagation","charCode","finishedEditingPressed","charStr","String","fromCharCode","test","isCharNumeric","isKeyPressedNumeric","preventDefault","NumericEditor","forwardRef","ref","initialState","startValue","highlightAllOnFocus","keyPress","charPress","createInitialState","setValue","setHighlightAllOnFocus","refInput","cancelBeforeStart","addEventListener","removeEventListener","useImperativeHandle","afterGuiAttached","eInput","focus","select","setSelectionRange","getValue","isCancelBeforeStart","isCancelAfterEnd","ColorEditor","isPopup","color","onChangeComplete","hex","stopObjToArr","stop","getTableData","rd","forEachNode","node","ChartSettings","chartTitle","title","stopData","_id","applyTransaction","remove","useChartSettings","onCellValueChanged","addStop","deleteRow","setTitleHandle","setMinHandle","setMaxHandle","minWidth","editable","singleClickEdit","frameworkComponents","numericEditor","colorEditor","deleteButton","immutableData","getRowNodeId","cellEditor","cellStyle","prams","backgroundColor","textShadow","letterSpacing","cellRenderer","onCellClicked","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","DataSourceAccordion","Accordion","AccordionSummary","aria-controls","id","Typography","AccordionDetails","ChartSettingsAccordion","FiltersAccordion","defaultExpanded","AggregationSettingsAccordion","SettingSection","overflow","App","textAlign","Boolean","hostname","match","inital_state","stateMap","updateState","is","p","initial_state","chart","borderWidth","animation","duration","legend","layout","align","floating","mapNavigation","enabled","plotOptions","mapline","showInLegend","enableMouseTracking","makeColorAxis","stateColorAxis","payloadColorAxis","makeSeries","seriesPayload","dataLabels","joinBy","tooltip","headerFormat","pointFormatter","calc","_display","mapData","getCSV","string","URL","_","protocol","isValidHttpUrl","axios","get","headers","Promise","reject","cleanStateVal","replace","toUpperCase","buildStateVal","features","properties","obj","hckey","idx","acc","normalizeState","_addValue","state","filterData","filters","fd","fn","processToDisplay","groupedData","camelCase","_changeKey","strCleanup","str","convertCSVToJSON","delimiter","slice","rows","row","object","curr","updateUrlLoadData","getfigureOutStateInfo","groupAndDisplayData","fetchData","groupDataSaga","setDisplay","loadFromURLSetings","mySaga","require","getData","getMapName","s","put","find","t","call","gd","action","response","console","log","apiData","message","loadMapScript","mapNameJSFile","resolve","script","document","createElement","src","onload","body","appendChild","newStateMap","queryURL","lastItem","pop","mapOptionsActions","all","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","path","applyMiddleware","run","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0fe4e457.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useSelector } from 'react-redux';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction useDragColumnChange(cb) {\n  const columnOrderRef = useRef([]);\n  const onDragStarted = (e) => {\n    columnOrderRef.current = e.columnApi.getColumnState().map((c) => c.colId);\n  };\n  const onDragStopped = (e) => {\n    const newColumnOrder = e.columnApi.getColumnState().map((c) => c.colId);\n    const sameOrder = columnOrderRef.current.every(\n      (c, i) => c === newColumnOrder[i],\n    );\n\n    if (!sameOrder) {\n      cb(e);\n    }\n  };\n\n  return { onDragStarted, onDragStopped };\n}\n\nconst Grid = () => {\n  const [gridApi, setGridApi] = useState(null);\n  const { onDragStarted, onDragStopped } = useDragColumnChange((e) => {});\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const { filteredData, titles } = useSelector(({ data }) => data);\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  const updateRows = () => {\n    if (gridApi) {\n      // gridApi.autoSizeColumns()();\n\n      var allColumnIds = [];\n      gridColumnApi.getAllColumns().forEach(function (column) {\n        allColumnIds.push(column.colId);\n      });\n      gridColumnApi.autoSizeColumns(allColumnIds, false);\n    }\n  };\n\n  return (\n    <div\n      className='ag-theme-alpine'\n      style={{ height: 400, width: '100%', marginRight: '' }}>\n      <AgGridReact\n        onGridReady={onGridReady}\n        onRowDataChanged={updateRows}\n        onDragStarted={onDragStarted}\n        onDragStopped={onDragStopped}\n        defaultColDef={{\n          initialWidth: 100,\n          sortable: true,\n          resizable: true,\n        }}\n        columnDefs={titles.map((v) => ({\n          headerName: v,\n          field: v,\n        }))}\n        rowData={filteredData}>\n      </AgGridReact>\n    </div>\n  );\n};\n\nexport default Grid;\n","const DELEM = '|#|';\n\nexport const getQueryVariable = (variable) => {\n  const query = window.location.search.substring(1);\n  const vars = query.split('&');\n  const pairs = vars\n    .map((e) => e.split('=').map(decodeURIComponent))\n    .map(parseQueryUrlArr);\n  const qvm = Object.fromEntries(pairs);\n  if (!variable) return qvm;\n  return qvm[variable];\n};\n\nconst parseQueryUrlArr = ([x, val = '']) => {\n  if (val.includes(DELEM) || val.includes(',')) {\n    val = val.split(DELEM).map((v) => v.split(','));\n  }\n  return [x, val];\n}\n\nexport const updateQuery = (key, value) => {\n  if (Array.isArray(value)) {\n    value = value.join(DELEM);\n  }\n  const queryParams = new URLSearchParams(window.location.search);\n  queryParams.set(key, value);\n  window.history.replaceState(null, null, '?' + queryParams.toString());\n};\n\nexport const clearQueryUrl = () => {\n  updateQuery('df', '')\n  updateQuery('a', '')\n  updateQuery('f', [])\n  updateQuery('s', '')\n \n};\n","import { updateQuery } from '../../utils/queryUtils';\n\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_COLOR_AXIS_MIN = 'SET_COLOR_AXIS_MIN';\nexport const SET_COLOR_AXIS_MAX = 'SET_COLOR_AXIS_MAX';\nexport const SET_COLOR_AXIS_STOPS = 'SET_COLOR_AXIS_STOPS';\nexport const SET_MAP_DATA = 'SET_MAP_DATA';\nexport const setTitle = (text) => {\n  updateQuery('t', text)\n  return {\n    type: SET_TITLE,\n    payload: {\n      text,\n    },\n  };\n};\nexport const setColorAxisMin = (min) => {\n  updateQuery('mi', min)\n  return {\n    type: SET_COLOR_AXIS_MIN,\n    payload: {\n      min,\n    },\n  };\n};\nexport const setColorAxisMax = (max) => {\n  updateQuery('ma', max)\n  return {\n    type: SET_COLOR_AXIS_MAX,\n    payload: {\n      max,\n    },\n  };\n};\nexport const setColorAxisStops = (stops) => {\n  stops = stops.sort((a, b) => (+a[0] > +b[0]) ? 1 : -1)\n  updateQuery('st', stops)\n  return {\n    type: SET_COLOR_AXIS_STOPS,\n    payload: {\n      stops: [...stops],\n    },\n  };\n};\n\nexport const setMapData = (data = [], name = null) => {\n  return {\n    type: SET_MAP_DATA,\n    payload: {\n      series: {\n        data:[...data],\n        name,\n      },\n      colorAxis: {\n        // min,\n        // max\n      },\n    },\n  };\n};\n","import React, { useEffect } from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport * as Actions from '../store/mapOptions/mapOptions.actions';\nimport proj4 from 'proj4';\nimport { useSelector, useDispatch } from 'react-redux';\n\nif (typeof window !== 'undefined') {\n  window.proj4 = window.proj4 || proj4;\n}\nconst Highcharts = window.Highcharts;\n\nconst Chart = () => {\n  const { groupData, displayField, processing, loading } = useSelector(({ data }) => data);\n  const options  = useSelector(({ options }) => options);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (groupData.length !== 0) {\n\n      dispatch(Actions.setMapData(groupData, displayField));\n    } else {\n      dispatch(Actions.setMapData());\n    }\n  }, [groupData, displayField, dispatch]);\n  return (\n    <div>\n      {( loading) ? <div >downloading data</div> : null}\n      {(processing) ? <div >processing data</div> : null}\n      <div style={{ display: (processing || loading) ? \"none\" : \"block\" }}>\n        <HighchartsReact\n          immutable={true}\n          highcharts={Highcharts}\n          options={options}\n          constructorType={'mapChart'}\n        />\n        </div>\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../components/Chart';\n\nconst ChartSection = () => {\n  return (<div\n    style={{\n      width: '50%',\n      padding: '10px',\n      border: '1px solid #c4c4c4',\n    }}>\n    <div style={{ width: '600', height: '400px' }}>\n      <Chart />\n    </div>\n  </div>);\n};\n\n\n\nexport default ChartSection;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { startCase } from 'lodash';\n\nexport default function DropDown({ values, onChange, label, value, getOptionLabel, getOptionSelected }) {\n  return (\n    <>\n      <Autocomplete\n        options={values}\n        getOptionLabel={getOptionLabel}\n        getOptionSelected={getOptionSelected}\n        value={value}\n        onChange={(event, newValue) => {\n          onChange(newValue);\n        }}\n        fullWidth={true}\n        autoComplete\n        includeInputInList\n        renderInput={(params) => (\n          <TextField {...params} label={label} margin='normal' />\n        )}\n      />\n    </>\n  );\n}\n\nDropDown.defaultProps = {\n  getOptionLabel: (option) => startCase(option),\n  getOptionSelected: (option) => startCase(option)\n}\n","export const REQUEST_DATA = 'REQUEST_DATA';\nexport const LOAD_DATA_SAGA = 'LOAD_DATA_SAGA';\nexport const LOAD_DATA_SUCCESS = 'LOAD_DATA_SUCCESS';\nexport const LOAD_DATA_FAILURE = 'LOAD_DATA_FAILURE';\n\nexport const SET_STATE_AND_GROUP_SAGA = 'SET_STATE_AND_GROUP_SAGA';\nexport const SET_STATE_AND_GROUP = 'SET_STATE_AND_GROUP';\nexport const SET_DISPLAY = 'SET_DISPLAY_FIELD';\nexport const SET_DISPLAY_SAGA = 'SET_DISPLAY_FIELD_SAGA';\nexport const SET_AGGREGATION_TYPE = 'SET_AGGREGATION_TYPE';\nexport const SET_DISPLAY_FN = 'SET_DISPLAY_FN';\nexport const ADD_FILTER_FN = 'ADD_FILTER_FN';\nexport const ADD_FILTERS = 'ADD_FILTERS';\nexport const APPLY_FILTERS_SAGA = 'APPLY_FILTERS_SAGA';\nexport const UPDATE_DISPLAY_VALUES ='UPDATE_DISPLAY_VALUES' \nexport const UPDATE_STATE_MAP = 'UPDATE_STATE_MAP';\nexport const LOAD_FROM_URL = 'LOAD_FROM_URL' \n\nexport const loadData = (url) => ({\n  type: LOAD_DATA_SAGA,\n  payload: {\n    url,\n  },\n});\n\nexport const updateFilters = (filteringFuncitons) => ({\n  type: APPLY_FILTERS_SAGA,\n  payload: {\n    filteringFuncitons,\n  },\n});\n\nexport const groupData = (stateKey) => ({\n  type: SET_STATE_AND_GROUP_SAGA,\n  payload: {\n    stateKey,\n  },\n});\n\nexport const updateDisplay = (displayField, aggregationAction) => ({\n  type: SET_DISPLAY_SAGA,\n  payload: {\n    displayField,\n    aggregationAction,\n  },\n});\n\nexport const loadFromURLSetings = () => ({\n  type: LOAD_FROM_URL\n})","export default class Calculations {\n  constructor(arr, key) {\n    this.arr = arr ?? [];\n    this.key = key ?? '';\n    this.cache = {};\n  }\n\n  _changeKey(newKey) {\n    if (newKey !== this.key) {\n      this.cache = {};\n      this.key = newKey;\n    }\n  }\n\n  _addValue(val) {\n    this.arr.push(val)\n    this.cache = {};\n  }\n\n  get _numberData() {\n    if (this.cache.numberData) {\n      return this.cache.numberData;\n    }\n    this.cache.numberData = this.arr\n      .map((a) => parseFloat(a[this.key]))\n      .filter((a) => !isNaN(a));\n    return this.cache.numberData;\n  }\n\n  get value() {\n    if (this.arr.length === 1 && !isNaN(parseFloat(this.arr[0][this.key]))) {\n      return parseFloat(this.arr[0][this.key])\n    }\n    return this.average;\n  }\n\n  get average() {\n    if (!this.count) {\n      return 0;\n    }\n    return this.sum / this.count;\n  }\n\n  get count() {\n    return this.arr.length;\n  }\n\n  get _countOfNumbers() {\n    return this._numberData.length;\n  }\n\n  get max() {\n    if (this.cache.max !== undefined) {\n      return this.cache.max;\n    }\n    this.cache.max = Math.max(...this._numberData);\n    return this.cache.max;\n  }\n\n  get min() {\n    if (this.cache.min !== undefined) {\n      return this.cache.min;\n    }\n    this.cache.min = Math.min(...this._numberData);\n    return this.cache.min;\n  }\n\n  get sum() {\n    if (this.cache.sum !== undefined) {\n      return this.cache.sum;\n    }\n    this.cache.sum = this._numberData.reduce((a, b) => a + b, 0);\n    return this.cache.sum;\n  }\n\n  get range() {\n    return this.max - this.min;\n  }\n\n  _display() {\n    if (this.arr.length === 1) {\n      return `<br>${this.value.toFixed(2)}`\n    }\n\n    return `\n    <br>Average: ${this.average.toFixed(2)}\n    <br>Count: ${this.count} \n    <br>Sum: ${this.sum.toFixed(2)}\n    <br>Min: ${this.min.toFixed(2)}\n    <br>Max: ${this.max.toFixed(2)}\n    <br>Range: ${this.range.toFixed(2)}\n    `;\n  }\n}\n","\nimport { startCase } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadNewMap } from '../store/mapSettings/mapSettings.actions';\nimport DropDown from './common/DropDown';\nconst Highcharts = window.Highcharts;\nconst listOfMaps = Object.entries(Highcharts.mapDataIndex).flatMap(([mapGroup, maps]) => {\n  if (mapGroup !== 'version') {\n    return Object.entries(maps);\n  }\n  return [];\n});\n\nconst MapSelector = () => {\n  const {mapInfo} = useSelector(({mapSettings}) => mapSettings);\n  const dispatch = useDispatch();\n  const updateMap = (v) => {\n    dispatch(loadNewMap(v));\n  }\n  const displayfn = (option) => startCase(option[0])\n  const matchfn = (option) => startCase(option[1])\n\n  return <DropDown \n    value={mapInfo}\n    values={listOfMaps}\n    label='Map'\n    onChange={updateMap}\n    getOptionLabel={displayfn}\n    getOptionSelected={matchfn}\n  />\n};\n\nexport default MapSelector;\n\n","export const LOAD_NEW_MAP_SAGA = 'CHANGE_MAP_SAGA';\nexport const CHANGE_MAP = 'CHANGE_MAP';\n\nexport const loadNewMap = (mapInfo) => ({\n  type: LOAD_NEW_MAP_SAGA,\n  payload: {\n    mapInfo\n  }\n})","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DropDown from './common/DropDown';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport Calculations from '../utils/Calculations';\nimport MapSelector from './mapSelector';\n\nconst aggerationOptions = Object.getOwnPropertyNames(\n  Calculations.prototype,\n).filter((k) => k !== 'constructor' && !k.startsWith('_'));\n\nconst DataSelector = () => {\n  const { titles, stateKey, displayField, aggregationAction } = useSelector(\n    ({ data }) => data,\n  );\n  const dispatch = useDispatch();\n\n  const onStateChange = (v) => {\n    dispatch(Actions.groupData(v));\n  };\n  const onDisplayFieldChange = (df) => {\n    dispatch(Actions.updateDisplay(df, aggregationAction));\n  };\n  const onAggregationActionChange = (a) => {\n    dispatch(Actions.updateDisplay(displayField, a));\n  };\n\n  return (\n    <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n      <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n        <MapSelector />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          flex: 1,\n        }}>\n        {titles?.length ? (\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={stateKey}\n              values={titles}\n              onChange={onStateChange}\n              label='Location Key'\n            />\n          </div>\n        ) : null}\n        {stateKey ? (\n          <>\n            <div style={{ width: '30%' }}>\n              <DropDown\n                value={displayField}\n                values={titles}\n                onChange={onDisplayFieldChange}\n                label='Display Field'\n              />\n            </div>\n            <div style={{ width: '30%' }}>\n              <DropDown\n                value={aggregationAction}\n                values={aggerationOptions}\n                onChange={onAggregationActionChange}\n                label='Aggregation'\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default DataSelector;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function DatePickers(props) {\n  const classes = useStyles();\n  return (\n    < >\n      <TextField\n        labelid={'date-picker-' +props.label }\n        type=\"date\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        InputProps={{ inputProps: { ...props } }}\n        {...props}\n      />\n    </>\n  );\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport min from 'date-fns/min';\nimport max from 'date-fns/max';\nimport format from 'date-fns/format';\nimport { useSelector } from 'react-redux';\nimport DatePicker from '../common/DatePicker';\nimport {addDays} from 'date-fns'\n\n\nconst dateArr = (data, field) => {\n  return data.map((d) => new Date(d[field])).filter((v) => !isNaN(v.getTime()));\n};\n\nconst calcMin = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(min(arr));\n};\nconst calcMax = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(addDays(max(arr), 1));\n};\n\nconst dateFormat = (date) => {\n  return format(date, 'yyyy-MM-dd');\n};\n\nconst DatesFilter = ({ dataField, filterValues:[startDate = '', endDate = ''], onFilterValueChange }) => {\n  const { rawData } = useSelector(({ data }) => data);\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n\n  const updateFilter = useCallback(( minVal, maxVal) => {\n    const f = [minVal, maxVal];\n    onFilterValueChange(f)\n  }, [onFilterValueChange]);\n\n  useEffect(() => {\n    try {\n      const minDateValue = calcMin(rawData, dataField);\n      const maxDateValue = calcMax(rawData, dataField);\n      setMinDate(minDateValue);\n      setMaxDate(maxDateValue);\n      if (!startDate || !endDate) {\n        updateFilter(minDateValue, maxDateValue);\n      }\n    } catch (e) {\n      setMinDate('');\n      setMaxDate('');\n    }\n  }, [dataField, setMinDate, setMaxDate, rawData, updateFilter, startDate,  endDate]);\n\n  if (!dataField) {\n    return null;\n  }\n\n  const onStartDateChange = (e) => {\n    const date = e.target.value;\n    updateFilter(date, endDate);\n  };\n\n  const onEndDateChange = (e) => {\n    const date = e.target.value;\n    updateFilter( startDate, date);\n  };\n\n  return (\n    <>\n      <DatePicker\n        label='From'\n        min={minDate}\n        max={endDate}\n        value={startDate}\n        onChange={onStartDateChange}\n      />\n      <DatePicker\n        label='To'\n        min={startDate}\n        max={maxDate}\n        value={endDate}\n        onChange={onEndDateChange}\n      />\n    </>\n  );\n};\n\nDatesFilter.defaultProps = {\n  filterValues: []\n};\n\nexport default DatesFilter;\n","import React, { useEffect, useState } from 'react';\nimport DatePicker from '../common/DatePicker';\n\nconst SingleValueFilter = ({ filterValues: [value = ''], onFilterValueChange }) => {\n  const [internalUrl, setInternalUrl] = useState(value);\n  useEffect(() => {\n    setInternalUrl(value);\n  }, [value]);\n\n  const setValue = (newValue) => {\n    if (newValue === value) {\n      return;\n    }\n    setInternalUrl(value);\n    onFilterValueChange([newValue]);\n  };\n\n  return (\n    <DatePicker\n      label='value'\n      value={internalUrl}\n      onChange={(e) => setValue(e.target.value)}\n    />\n  );\n};\n\nexport default SingleValueFilter;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function BasicTextFields(props) {\n\n  return (\n    <TextField fullWidth {...props} />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport BasicTextFields from '../common/BasicTextFields';\n\nconst SingleValueFilter = ({ filterValues: [value = ''], onFilterValueChange }) => {\n  const [internalVal, setInternalVal] = useState(value);\n  useEffect(() => {\n    setInternalVal(value);\n  }, [value]);\n\n  const setValue = (newValue) => {\n    setInternalVal(newValue);\n  };\n\n  const updateFilter = () => {\n    onFilterValueChange([internalVal]);\n  };\n\n  return (\n    <BasicTextFields\n      label='value'\n      value={internalVal}\n      onChange={(e) => setValue(e.target.value)}\n      onBlur={updateFilter}\n    />\n  );\n};\n\nexport default SingleValueFilter;\n","import { isSameDay, isWithinInterval, isBefore, isAfter } from 'date-fns';\nimport { memoize } from 'lodash';\n\nconst determinType = memoize((value) => {\n  let type = 'string';\n  const numberValue = parseFloat(value);\n  const dateValue = new Date(value);\n\n  if (numberValue.toString() === value.toString()) {\n    type = 'number';\n    value = numberValue;\n  } else if (!isNaN(dateValue.valueOf())) {\n    type = 'date';\n    value = dateValue;\n  }\n  return [type, value];\n});\n\nconst parseData = (type, value) => {\n  switch (type) {\n    case 'string':\n      return '' + value;\n    case 'date':\n      return new Date(value);\n    case 'number':\n      return parseFloat(value);\n    default:\n      return value;\n  }\n};\n\nconst alwaysTruefn = () => true\n\nconst baseCompare = (value, field, numCompare, dateCompare, defaultCompare) => (\n  item,\n) => {\n  if (!value) {\n    return alwaysTruefn;\n  }\n  const [type, userValue] = determinType(value);\n  const iv = parseData(type, item[field]);\n  switch (type) {\n    case 'number':\n      return numCompare(iv, userValue);\n    case 'date':\n      return dateCompare(iv, userValue);\n    default:\n      return defaultCompare(iv, userValue);\n  }\n};\n\nconst dateBetween = (field, startDate, endDate) => {\n  if( !startDate || !endDate) {\n    return alwaysTruefn\n  }\n\n  startDate = new Date(startDate);\n  endDate = new Date(endDate);\n  return (item) => {\n    const date = new Date(item[field]);\n    if (isNaN(date.getTime())) {\n      return false;\n    }\n    return isWithinInterval(date, { start: startDate, end: endDate });\n  };\n};\n\nconst equals = (field, value) => {\n  if(!value) {\n    return alwaysTruefn\n  }\n  const numCompare = memoize((iv, v) => iv === v);\n  const dateCompare = memoize((iv, v) => isSameDay(new Date(iv), v));\n  const defaultCompare = memoize((iv, v) => iv === v);\n  return baseCompare(value, field, numCompare, dateCompare, defaultCompare);\n};\nconst greater = (field, value) => {\n  if(!value) {\n    return alwaysTruefn\n  }\n  const numCompare = memoize((iv, v) => iv >= v);\n  const dateCompare = memoize((iv, v) => isAfter(new Date(iv), v));\n  const defaultCompare = memoize((iv, v) => iv >= v);\n  return baseCompare(value, field, numCompare, dateCompare, defaultCompare);\n};\n\nconst less = (field, value) => {\n  if(!value) {\n    return alwaysTruefn\n  }\n  const numCompare = memoize((iv, v) => iv <= v);\n  const dateCompare = memoize((iv, v) => isBefore(new Date(iv), v));\n  const defaultCompare = memoize((iv, v) => iv <= v);\n  return baseCompare(value, field, numCompare, dateCompare, defaultCompare);\n};\n\nexport const filterObject = {\n  equals,\n  greater,\n  less,\n  dayOf: equals,\n  dateAfter: greater,\n  dateBefore: less,\n  dateBetween,\n};\n\nexport const makeFitler = (name, ...props) => {\n  const fnMaker = filterObject[name];\n  if (fnMaker) {\n    return fnMaker(...props);\n  }\n  return null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport DropDown from '../common/DropDown';\nimport DatesFilter from './DatesFilter';\nimport DateFilter from './DateFilter';\nimport SingleValueFilter from './SingleValueFilter';\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\nimport { Button } from '@material-ui/core';\nimport { filterObject } from '../../utils/Filters';\nconst filterOptions = Object.keys(filterObject);\n\nconst displayfilterOptions = (\n  dataField,\n  filterType,\n  filterValues,\n  setDataField,\n  onFilterValueChange,\n) => {\n  if (!dataField) {\n    return null;\n  }\n  switch (filterType) {\n    case 'dateBetween':\n      return (\n        <DatesFilter\n          dataField={dataField}\n          filterValues={filterValues}\n          onDataFieldChange={setDataField}\n          onFilterValueChange={onFilterValueChange}\n        />\n      );\n    case 'equals':\n    case 'greater':\n    case 'less':\n      return (\n        <div\n          style={{\n            margin: '0px 8px 0 15px ',\n            flex: 1,\n            alignContent: 'flex-end',\n          }}>\n          <SingleValueFilter\n            filterValues={filterValues}\n            onFilterValueChange={onFilterValueChange}\n          />\n        </div>\n      );\n    case 'dayOf':\n    case 'dateAfter':\n    case 'dateBefore':\n      return (\n        <div style={{ margin: '0px 8px 0 15px ', flex: 1 }}>\n          <DateFilter\n            filterValues={filterValues}\n            onFilterValueChange={onFilterValueChange}\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nconst FilterItem = ({ filterSettings, onFilterChange, onDelete }) => {\n  const { titles } = useSelector(({ data }) => data);\n  const [filterType, setFilterType] = useState('');\n  const [dataField, setDataField] = useState('');\n  const [filterValues, setFilterValues] = useState('');\n\n  useEffect(() => {\n    const [\n      iFilterType = '',\n      iDataFilter = '',\n      ...iFieldValues\n    ] = filterSettings;\n    setFilterType(iFilterType);\n    setDataField(iDataFilter);\n    setFilterValues(iFieldValues);\n  }, [filterSettings]);\n\n  const filterTypeChangeHandler = (v) => {\n    setFilterType(v);\n    if (v !== filterSettings[0]) {\n      const newFilter = [...filterSettings];\n      newFilter[0] = v;\n      onFilterChange(newFilter);\n    }\n  };\n\n  const dataFieldChangeHandler = (v) => {\n    setDataField(v);\n    if (v !== filterSettings[1]) {\n      const newFilter = [...filterSettings];\n      newFilter[1] = v;\n      onFilterChange(newFilter);\n    }\n  };\n\n  const onFilterValueChange = (v) => {\n    if (v.toString() !== filterValues.toString()) {\n      setFilterValues(v);\n      onFilterChange([filterType, dataField, ...v]);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'flex-start',\n        flex: 1,\n        paddingBottom: 10,\n      }}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flex: 3,\n          flexGrow: 3,\n          marginRight: 8,\n        }}>\n        <DropDown\n          value={filterType}\n          values={filterOptions}\n          onChange={filterTypeChangeHandler}\n          label='Type'\n        />\n        <DropDown\n          value={dataField}\n          values={titles}\n          onChange={dataFieldChangeHandler}\n          label='Field'\n        />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flex: 2,\n          flexGrow: 2,\n          alignItems: 'flex-end',\n          justifyContent: 'flex-end',\n          marginBottom: '8px',\n        }}>\n        {displayfilterOptions(\n          dataField,\n          filterType,\n          filterValues,\n          setDataField,\n          onFilterValueChange,\n        )}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'flex-end',\n        }}>\n        <Button onClick={() => onDelete()} style={{ marginBottom: '-8px' }}>\n          <DeleteOutlineRoundedIcon  />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterItem;\n","import { Button } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FilterItem from './FilterItem';\nimport * as Actions from '../../store/csvData/csvData.actions';\n\n\nconst FilterList = () => {\n  const { filteringFuncitons } = useSelector(({ data }) => data);\n  const [internalFilters, setInternalFilters] = useState(filteringFuncitons || []);\n  const dispach = useDispatch();\n\n  useEffect(() => {\n    setInternalFilters(filteringFuncitons || [])\n  }, [filteringFuncitons])\n\n  const addFitler = () => {\n    setInternalFilters((c) => [...c, []]);\n  }\n\n  const filterChangeHandler = (index, f) => {\n    const cf = [...internalFilters]\n    cf[index] = f;\n    dispach(Actions.updateFilters(cf));\n  }\n\n  const onDelete = (index) => {\n    const cf = [...internalFilters]\n    cf.splice(index, 1)\n    dispach(Actions.updateFilters(cf));\n  }\n\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\n      {\n        internalFilters.map((filter, index) => {\n          return <FilterItem key={index} filterSettings={filter} onFilterChange={(f) => filterChangeHandler(index, f)} onDelete={() => onDelete(index)} />\n        })\n      }\n      <div style={{ alignSelf:'flex-end', flex: 1 }}>\n        <Button onClick={addFitler}>add filter</Button>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default FilterList;\n","import React, { useEffect, useState } from 'react';\nimport BasicTextFields from './common/BasicTextFields';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport { clearQueryUrl } from '../utils/queryUtils';\n\n//'http://d14wlfuexuxgcm.cloudfront.net/covid/rt.csv'\nconst UrlSelector = () => {\n  const dispatch = useDispatch();\n  const loadedURL = useSelector(({ data }) => data?.url);\n  const [internalUrl, setInternalUrl] = useState(loadedURL);\n  useEffect(() => {\n    if (loadedURL) {\n      setInternalUrl(loadedURL);\n    }\n  }, [loadedURL]);\n\n  const urlChangeHandler = (v) => {\n    setInternalUrl(v);\n    clearQueryUrl();\n    dispatch(Actions.loadData(''));\n  } \n\n  const setURL = (newUrl) => {\n    if (newUrl === loadedURL) {\n      return;\n    }\n    dispatch(Actions.loadData(newUrl));\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <BasicTextFields\n        label='CSV Url'\n        value={internalUrl}\n        onChange={(e) => urlChangeHandler(e.target.value)}\n        onBlur={(e) => setURL(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default UrlSelector;\n","import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_F2 = 113;\nconst KEY_ENTER = 13;\nconst KEY_TAB = 9;\n\nconst isLeftOrRight = (event) => {\n  return [37, 39].indexOf(event.keyCode) > -1;\n};\n\nconst getCharCodeFromEvent = (event) => {\n  event = event || window.event;\n  return typeof event.which === 'undefined' ? event.keyCode : event.which;\n};\n\nconst isCharNumeric = (charStr) => {\n  return !!/[0-9]*\\.?[0-9]+/.test(charStr);\n};\n\nconst isKeyPressedNumeric = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  const charStr = event.key ? event.key : String.fromCharCode(charCode);\n  const newVal = event.target.value + charStr;\n  return isCharNumeric(newVal);\n};\n\nconst deleteOrBackspace = (event) => {\n  return [KEY_DELETE, KEY_BACKSPACE].indexOf(event.keyCode) > -1;\n};\n\nconst finishedEditingPressed = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  return charCode === KEY_ENTER || charCode === KEY_TAB;\n};\nconst onKeyDown = (event) => {\n  if (isLeftOrRight(event) || deleteOrBackspace(event)) {\n    event.stopPropagation();\n    return;\n  }\n\n  if (!finishedEditingPressed(event) && !isKeyPressedNumeric(event)) {\n    if (event.preventDefault) event.preventDefault();\n  }\n};\n\nconst NumericEditor = forwardRef((props, ref) => {\n  const createInitialState = () => {\n    let startValue;\n    let highlightAllOnFocus = true;\n\n    if (props.keyPress === KEY_BACKSPACE || props.keyPress === KEY_DELETE) {\n      // if backspace or delete pressed, we clear the cell\n      startValue = '';\n    } else if (props.charPress) {\n      // if a letter was pressed, we start with the letter\n      startValue = props.charPress;\n      highlightAllOnFocus = false;\n    } else {\n      // otherwise we start with the current value\n      startValue = props.value;\n      if (props.keyPress === KEY_F2) {\n        highlightAllOnFocus = false;\n      }\n    }\n\n    return {\n      value: startValue,\n      highlightAllOnFocus,\n    };\n  };\n\n  const initialState = createInitialState();\n\n  const [value, setValue] = useState(initialState.value);\n  const [highlightAllOnFocus, setHighlightAllOnFocus] = useState(\n    initialState.highlightAllOnFocus,\n  );\n  const refInput = useRef(null);\n  const cancelBeforeStart =\n    props.charPress && '1234567890.'.indexOf(props.charPress) < 0;\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      afterGuiAttached() {\n        // get ref from React component\n        const eInput = refInput.current;\n        eInput.focus();\n        if (highlightAllOnFocus) {\n          eInput.select();\n\n          setHighlightAllOnFocus(false);\n        } else {\n          // when we started editing, we want the carot at the end, not the start.\n          // comes into play in two scenarios: a) when user hits F2 and b)\n          // when user hits a printable charac ter, then on IE (and only IE) the carot\n          // was placed after the first character, thus 'apply' would end up as 'pplea'\n          const length = eInput.value ? eInput.value.length : 0;\n          if (length > 0) {\n            eInput.setSelectionRange(length, length);\n          }\n        }\n      },\n\n      getValue() {\n        return value;\n      },\n\n      isCancelBeforeStart() {\n        return cancelBeforeStart;\n      },\n\n      // will reject the number if it greater than 1,000,000\n      // not very practical, but demonstrates the method.\n      isCancelAfterEnd() {\n        return value > 1000000;\n      },\n    };\n  });\n\n  return (\n    <input\n      ref={refInput}\n      value={value}\n      onChange={(event) => setValue(event.target.value)}\n      style={{ width: '95%' }}\n    />\n  );\n});\n\nexport default NumericEditor;\n","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { SketchPicker } from 'react-color'\n\nconst ColorEditor = forwardRef((props, ref) => {\n  const [value, setValue] = useState(props.value);\n  const refInput = useRef(null);\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      getValue() {\n        return value;\n      },\n      isPopup() {\n        return true;\n      },\n    };\n  });\n\n  return (\n    <div ref={refInput} style={{ padding: '10px' }}>\n      <SketchPicker\n        color={value}\n        onChangeComplete={({hex}) => {\n          if (hex) {\n            setValue(hex);\n          }\n        }}\n      />\n    </div>\n  );\n});\n\nexport default ColorEditor;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as Actions from '../../store/mapOptions/mapOptions.actions';\n\n\nexport function stopObjToArr({ stop, color }) {\n  return [stop, color];\n}\n\nconst getTableData = (rowData) => {\n  let rd = [];\n  rowData.api.forEachNode(node => rd.push(node.data));\n  return rd.map(stopObjToArr);\n}\n\n\nexport default () => {\n\n  const dispatch = useDispatch();\n  const stopData = useSelector(({ options }) =>\n    options.colorAxis.stops.map(([stop, color], i) => ({\n      stop,\n      color,\n      _id: i + stop + color,\n    })),\n  );\n\n  const onCellValueChanged = (rowData) => {\n    const data = getTableData(rowData);\n    dispatch(Actions.setColorAxisStops(data));\n  };\n\n  const addStop = () => {\n    const data = [...stopData.map(stopObjToArr), [0, '#000']];\n    dispatch(Actions.setColorAxisStops(data));\n  };\n  const deleteRow = (rowData) => {\n    rowData.api.applyTransaction({ remove: [rowData.data] })\n    const data = getTableData(rowData);\n    dispatch(Actions.setColorAxisStops(data));\n  };\n\n  const setTitleHandle = (v) => {\n    dispatch(Actions.setTitle(v));\n  };\n\n  const setMinHandle = (v) => {\n    dispatch(Actions.setColorAxisMin(v));\n  };\n\n  const setMaxHandle = (v) => {\n    dispatch(Actions.setColorAxisMax(v));\n  };\n\n  return [onCellValueChanged, addStop, deleteRow, setTitleHandle, setMinHandle, setMaxHandle];\n\n}","import React from 'react';\nimport BasicTextField from '../common/BasicTextFields';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport NumericEditor from '../cellEditors/NumericEditor';\nimport ColorEditor from '../cellEditors/ColorEditor';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport useChartSettings from './useChartSettings';\n\nconst ChartSettings = () => {\n  // const [gridApi, setGridApi] = useState(null);\n  // const [gridColumnApi, setGridColumnApi] = useState(null);\n  const chartTitle = useSelector(({ options }) => options.title.text);\n  const min = useSelector(({ options }) => options.colorAxis.min);\n  const max = useSelector(({ options }) => options.colorAxis.max);\n  const stopData = useSelector(({ options }) =>\n    options.colorAxis.stops.map(([stop, color], i) => ({\n      stop,\n      color,\n      _id: i + stop + color,\n    })),\n  );\n\n  const [\n    onCellValueChanged,\n    addStop,\n    deleteRow,\n    setTitleHandle,\n    setMinHandle,\n    setMaxHandle,\n  ] = useChartSettings();\n\n\n\n  function onGridReady(params) {\n    // setGridApi(params.api);\n    // setGridColumnApi(params.columnApi);\n  }\n\n  const DeleteButton = () => {\n    return <Button style={{ width: '100%' }}>Delete</Button>;\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n      <BasicTextField\n        label='title'\n        value={chartTitle}\n        onChange={(e) => setTitleHandle(e.target.value)}\n      />\n      <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n        <BasicTextField\n          label='Color Axis Min'\n          value={min}\n          onChange={(e) => setMinHandle(e.target.value)}\n        />\n        <BasicTextField\n          label='Color Axis Max'\n          value={max}\n          onChange={(e) => setMaxHandle(e.target.value)}\n        />\n        <Button style={{ width: '33%' }} onClick={addStop}>\n          Add stop\n        </Button>\n      </div>\n      <div style={{ width: '100%' }}>\n        <div className='ag-theme-alpine' style={{ height: 300, width: '100%' }}>\n          <AgGridReact\n            defaultColDef={{\n              flex: 1,\n              minWidth: 100,\n              filter: true,\n              editable: true,\n            }}\n            onGridReady={onGridReady}\n            onCellValueChanged={onCellValueChanged}\n            singleClickEdit={true}\n            frameworkComponents={{\n              numericEditor: NumericEditor,\n              colorEditor: ColorEditor,\n              deleteButton: DeleteButton,\n            }}\n            immutableData\n            getRowNodeId={(data) => data._id}\n            rowData={stopData}>\n            <AgGridColumn\n              field='stop'\n              sortable={true}\n              editable={true}\n              cellEditor='numericEditor'></AgGridColumn>\n            <AgGridColumn\n              flex={2}\n              field='color'\n              editable={true}\n              cellEditor='colorEditor'\n              cellStyle={(prams) => {\n                return {\n                  backgroundColor: prams?.value,\n                  color: 'white',\n                  textShadow:\n                    '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\n                  letterSpacing: '2px',\n                };\n              }}></AgGridColumn>\n            <AgGridColumn\n              headerName='Delete'\n              cellRenderer='deleteButton'\n              onCellClicked={deleteRow}\n              editable={false}></AgGridColumn>\n          </AgGridReact>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartSettings;\n","import React from 'react';\nimport DataSelector from '../components/DataSelector';\nimport FilterList from '../components/fitlers/FilterList';\nimport UrlSelector from '../components/UrlSelector';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ChartSettings from '../components/chartSettings/ChartSettings';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst DataSourceAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\n        <Typography className={classes.heading}>Data Source</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <UrlSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst ChartSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel4a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>Chart Settings</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <ChartSettings />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst FiltersAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion defaultExpanded={true}>\n      <AccordionSummary aria-controls='panel2a-content' id='panel3a-header' >\n        <Typography className={classes.heading}>Filters</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <FilterList />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst AggregationSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion defaultExpanded={true}>\n      <AccordionSummary aria-controls='panel3a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>\n          Aggregation Settings\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <DataSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nconst SettingSection = () => {\n  const { loading, titles } = useSelector(({ data }) => data);\n\n  return (\n    <div\n      style={{\n        width: '50%',\n        padding: '10px',\n        border: '1px solid #c4c4c4',\n        overflow: 'scroll',\n      }}>\n      <DataSourceAccordion />\n      {loading ? 'loading...' : null}\n      {!loading && titles.length ? <ChartSettingsAccordion /> : null}\n      {titles.length ? (\n        <>\n          <FiltersAccordion />\n          <AggregationSettingsAccordion />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SettingSection;\n","import React, { useEffect } from 'react';\nimport Grid from './components/Grid';\nimport ChartSection from './sections/ChartSection';\nimport SettingSection from './sections/SettingSection';\nimport * as Actions from './store/csvData/csvData.actions';\nimport { useDispatch} from 'react-redux';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(Actions.loadFromURLSetings());\n  }, [dispatch]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div style={{textAlign: 'center'}}> \n      <h1>Data Mapping Tool</h1>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          padding: '10px',\n          justifyContent: 'space-between',\n          height: '422px'\n        }}>\n        <SettingSection />\n        <ChartSection />\n      </div>\n      <div style={{ flex: 1, padding: '10px' }}>\n        <Grid />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Actions from './csvData.actions';\n\n\n\nconst inital_state = {\n  url: '',\n  titles: [], // list of keys that can be selected\n  rawData: [], // the parsed CSV file\n  filteredData: [], // any filters run on the data (using filter funciton) also showen in table//\n  stateKey: '',\n  stateMap: {},\n  groupData: [],\n  displayField: '',\n  aggregationAction: '',\n  filteringFuncitons: [],\n  loading: false,\n  processing: false,\n};\n\nexport default (state = inital_state, { type, payload }) => {\n  switch (type) {\n    case Actions.REQUEST_DATA:\n      return updateState(inital_state, {}, true);\n    case Actions.LOAD_DATA_SUCCESS:\n      return updateState(inital_state, payload, false);\n    case Actions.LOAD_DATA_FAILURE:\n      return updateState(inital_state, {}, false);\n    case Actions.SET_STATE_AND_GROUP:\n      return updateState(state, payload);\n    case Actions.SET_DISPLAY:\n      return updateState(state, payload);\n    case Actions.ADD_FILTERS:\n      return updateState(state, payload);\n    case Actions.UPDATE_DISPLAY_VALUES: \n      return updateState(state, payload, state.loading, true);\n    case Actions.UPDATE_STATE_MAP: \n      return updateState(state, payload);\n    default:\n      return state;\n  }\n};\n\nconst updateState = (is = {}, p = {}, loading = false, processing = false) => {\n  return {\n    ...is,\n    ...p,\n    loading,\n    processing\n  };\n};\n","import * as mapSettingsActions  from '../mapSettings/mapSettings.actions';\nimport * as Actions from './mapOptions.actions';\nconst initial_state = {\n  chart: {\n    map: 'countries/us/us-all',\n    borderWidth: 1,\n  },\n  animation: {\n    duration: 1000\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    floating: true,\n  },\n  title: {\n    text: '',\n  },\n  mapNavigation: {\n    enabled: true,\n  },\n  colorAxis: {\n    min: 0,\n    max: 1,\n    stops: [\n      [0, '#00FF00'],\n      [0.5, '#FFF'],\n      [1, '#C40401'],\n    ],\n  },\n  plotOptions: {\n    mapline: {\n      showInLegend: false,\n      enableMouseTracking: false,\n    },\n  },\n  series: [],\n};\n\nexport default (state = initial_state, {type, payload}) => {\n  switch (type) {\n    case mapSettingsActions.CHANGE_MAP:\n      const data = (state?.series[0]?.data || []).filter(({path}) => !path)\n      return {\n        ...state,\n        chart: {\n          ...state.chart,\n          ...payload.chart\n        },\n        series: makeSeries({...state.series[0], data}, payload.chart || state.chart)\n      }\n\n    case Actions.SET_TITLE:\n      return {\n        ...state,\n        title: payload,\n      };\n    case Actions.SET_COLOR_AXIS_MAX:\n      return {\n        ...state,\n        colorAxis: makeColorAxis(state.colorAxis, payload),\n      };\n    case Actions.SET_COLOR_AXIS_MIN:\n      return {\n        ...state,\n        colorAxis: makeColorAxis(state.colorAxis, payload),\n      };\n    case Actions.SET_COLOR_AXIS_STOPS:\n      return {\n        ...state,\n        colorAxis: makeColorAxis(state.colorAxis, payload),\n      };\n    case Actions.SET_MAP_DATA:\n      return {\n        ...state,\n        colorAxis: makeColorAxis(state.colorAxis, payload.colorAxis),\n        series: makeSeries(payload.series, state.chart),\n      };\n    default:\n      return state;\n  }\n};\n\nconst makeColorAxis = (stateColorAxis, payloadColorAxis) => {\n  return {\n    ...stateColorAxis,\n    ...payloadColorAxis,\n  };\n}\n\nconst makeSeries = (seriesPayload, chart) => {\n  return [\n    {\n      dataLabels: {\n        enabled: true,\n        format: '{point.name}',\n      },\n      keys: ['hc-key', 'value', 'calc'],\n      joinBy:'hc-key',\n      tooltip: {\n        headerFormat: '',\n        pointFormatter: function () {\n          return `<h2>${this.name}</h2><br>${this.calc._display()}`;\n        },\n      },\n      ...seriesPayload,\n      mapData: chart.map && window.Highcharts.maps[chart.map],\n    },\n  ];\n};\n","import axios from 'axios';\n\n\nexport const getCSV = (url) => {\n  const validURL = isValidHttpUrl(url);\n  if (!validURL) {\n    return Promise.reject('invalid url' + url );\n  }\n  return axios.get(\n     `https://map-dashboard-cors.herokuapp.com/${url}`,\n    //  `http://localhost:8080/${url}`,\n    {\n      headers: {'Access-Control-Allow-Origin': '*', \"Access-Control-Allow-Headers\":\"Access-Control-Allow-Headers\"}\n    },\n  );\n};\n\n\nfunction isValidHttpUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;  \n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}","\nimport Calculations from '../../utils/Calculations';\nimport { camelCase } from 'lodash';\nimport { makeFitler } from '../../utils/Filters';\n\nexport const cleanStateVal = (v) => ('' + v).replace(/[^a-z0-9]/gim, '').toUpperCase();\n//.replace(/COUNTY|CITYOF|CITY/gmi, '');\nexport const buildStateVal = (mapData) => {\n  const properties = mapData.features.map(({ properties }) => properties);\n  const hcMap = properties.reduce((obj, item) => {\n    const hckey = item['hc-key'];\n    if (!hckey) return obj;\n    const entries = Object.entries(item);\n    entries.forEach(([k, i],idx) => {\n      if (\n        [\n          'labelrank',\n          'longitude',\n          'latitude',\n          'hc-middle-x',\n          'hc-middle-x',\n          'hc-middle-x',\n        ].includes(k)\n      )\n        return obj;\n      i = cleanStateVal(i);\n      if (obj[i] === undefined) {\n        obj[i] = hckey;\n        if(k === 'name' && item['hc-group'] === 'admin2') {\n          obj[i + 'COUNTY'] = hckey;\n        }\n      } else if (obj[i] !== hckey) {\n        obj[i] = null;\n      }\n    });\n    return obj;\n  }, {});\n  return hcMap;\n};\n\n\nexport const groupData = (stateMap, stateKey, data) => {\n  if (!stateKey) {\n    return [];\n  }\n  const obj = data.reduce((acc, item) => {\n    const key = normalizeState(stateMap, item[stateKey]);\n    if (!key) {\n      return acc;\n    }\n    if (!acc[key]) {\n      acc[key] = [key,null, new Calculations()];\n    }\n    acc[key][2]._addValue(item);\n    return acc;\n  }, {});\n  return Object.values(obj);\n};\n\nexport const normalizeState = (stateMap, state) => {\n  try {\n    return stateMap[cleanStateVal(state)] || null;\n  } catch {\n    return null;\n  }\n};\n\nexport const filterData = (rawData, filterData) => {\n  if (filterData.length === 0) {\n    return rawData;\n  }\n  const filters = filterData.map((fd) => makeFitler(...fd)).filter(Boolean)\n  if (filters.length === 0) {\n    return rawData;\n  }\n  return rawData.filter((value) => filters.every((fn) => fn(value)));\n};\n\nexport const processToDisplay = (\n  displayField,\n  aggregationAction,\n  groupedData,\n) => {\n  aggregationAction = camelCase(aggregationAction);\n  return groupedData.map(([key, ov, calc]) => {\n    if (aggregationAction && displayField) {\n      calc._changeKey(displayField)\n      return [key, calc[aggregationAction], calc];\n    } else {\n      return [key, null, calc];\n    }\n  });\n  \n};\n\nexport const strCleanup = str => str.replace(/^\"(.+(?=\"$))\"$/, '$1')\n\nexport const convertCSVToJSON = (str = '', delimiter = /\\t|,/) => {\n  const titles = str.slice(0, str.indexOf('\\n')).split(delimiter).map(strCleanup);\n  const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n  return [\n    titles,\n    rows.map((row) => {\n      const values = row.split(delimiter);\n      return titles.reduce((object, curr, i) => {\n        if(values[i]) {\n          object[curr] = strCleanup(values[i])\n        }\n        return object;\n      }, {});\n    }),\n  ];\n};\n\n\n","import { getCSV } from '../api/api';\nimport {\n  call,\n  put,\n  takeLatest,\n  all,\n  select,\n  takeEvery,\n} from 'redux-saga/effects';\nimport * as csvDataActions from './csvData/csvData.actions';\nimport * as mapSettingActions from './mapSettings/mapSettings.actions';\nimport * as mapOptionsActions from './mapOptions/mapOptions.actions';\nimport {\n  groupData as gd,\n  normalizeState,\n  convertCSVToJSON,\n  buildStateVal,\n  processToDisplay,\n  filterData,\n} from './csvData/csvDataTools';\nimport { updateQuery, getQueryVariable } from '../utils/queryUtils';\n\nrequire('@highcharts/map-collection/countries/us/us-all');\n\nconst getData = (state) => state.data;\nconst getMapName = (state) => state.mapSettings.chart.map;\n\nfunction* updateUrlLoadData(url) {\n  let {\n    df: displayField = '',\n    a: aggregationAction = '',\n    f: filteringFuncitons = [],\n    s: stateKey = '',\n  } = getQueryVariable();\n  updateQuery('url', url);\n  yield put({\n    type: csvDataActions.UPDATE_DISPLAY_VALUES,\n    payload: {\n      url,\n      displayField,\n      aggregationAction,\n      filteringFuncitons,\n      stateKey,\n    },\n  });\n\n  return [displayField, aggregationAction, filteringFuncitons, stateKey];\n}\n\nfunction* getfigureOutStateInfo(rawData, titles, stateKey) {\n  const map = yield select(getMapName);\n  const stateMap = buildStateVal(window.Highcharts.maps[map]);\n  if (!stateKey) {\n    stateKey =\n      titles.find((t) => normalizeState(stateMap, rawData[0][t])) || '';\n  }\n  yield put({\n    type: csvDataActions.UPDATE_DISPLAY_VALUES,\n    payload: {\n      stateMap,\n      stateKey,\n    },\n  });\n  return [stateKey, stateMap];\n}\n\nfunction* groupAndDisplayData(filteredData, displayField, aggregationAction) {\n  const { stateMap, stateKey } = yield select(getData);\n  let groupData = yield call(gd, stateMap, stateKey, filteredData);\n\n  groupData = yield call(\n    processToDisplay,\n    displayField,\n    aggregationAction,\n    groupData,\n  );\n  return groupData;\n}\n\nfunction* fetchData(action) {\n  try {\n    yield put({ type: csvDataActions.REQUEST_DATA });\n    const url = action.payload.url;\n    if (!url) {\n      yield put({ type: csvDataActions.LOAD_DATA_SUCCESS, payload: {} });\n    }\n    let [\n      displayField,\n      aggregationAction,\n      filteringFuncitons,\n      stateKey,\n    ] = yield updateUrlLoadData(url);\n\n    let stateMap;\n    const response = yield call(getCSV, url);\n    console.log(response);\n    const apiData = response.data;\n    let titles, rawData;\n\n    if (Array.isArray(apiData)) {\n      rawData = apiData;\n      titles = Object.keys(rawData[0]);\n    } else {\n      [titles, rawData] = yield call(convertCSVToJSON, apiData);\n    }\n\n    [stateKey, stateMap] = yield getfigureOutStateInfo(\n      rawData,\n      titles,\n      stateKey,\n    );\n    const filteredData = yield call(filterData, rawData, filteringFuncitons);\n    const groupData = yield groupAndDisplayData(\n      filteredData,\n      displayField,\n      aggregationAction,\n    );\n    yield put({\n      type: csvDataActions.LOAD_DATA_SUCCESS,\n      payload: {\n        url,\n        titles,\n        displayField,\n        rawData,\n        filteredData,\n        filteringFuncitons,\n        aggregationAction,\n        groupData,\n        stateKey,\n        stateMap,\n      },\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({ type: csvDataActions.LOAD_DATA_FAILURE, message: e.message });\n  }\n}\n\nfunction* updateFilters(action) {\n  try {\n    const filteringFuncitons = action.payload.filteringFuncitons;\n\n    const state = yield select(getData);\n    if (state.filteringFuncitons.toString() === filteringFuncitons.toString()) {\n      return;\n    }\n    updateQuery('f', filteringFuncitons);\n    yield put({\n      type: csvDataActions.UPDATE_DISPLAY_VALUES,\n      payload: { filteringFuncitons },\n    });\n    const filteredData = yield call(\n      filterData,\n      state.rawData,\n      filteringFuncitons,\n    );\n\n    const groupData = yield groupAndDisplayData(\n      filteredData,\n      state.displayField,\n      state.aggregationAction,\n    );\n\n    yield put({\n      type: csvDataActions.ADD_FILTERS,\n      payload: {\n        filteringFuncitons,\n        filteredData,\n        groupData,\n      },\n    });\n  } catch {}\n}\n\nfunction* groupDataSaga(action) {\n  try {\n    const stateKey = action.payload.stateKey;\n\n    updateQuery('s', stateKey);\n    yield put({\n      type: csvDataActions.UPDATE_DISPLAY_VALUES,\n      payload: {\n        stateKey,\n      },\n    });\n\n    const { filteredData, displayField, aggregationAction } = yield select(\n      getData,\n    );\n    const groupData = yield groupAndDisplayData(\n      filteredData,\n      displayField,\n      aggregationAction,\n    );\n\n    yield put({\n      type: csvDataActions.SET_STATE_AND_GROUP,\n      payload: {\n        stateKey,\n        groupData,\n      },\n    });\n  } catch {}\n}\n\nfunction* setDisplay(action) {\n  try {\n    const { displayField, aggregationAction } = action.payload;\n    yield call(updateQuery, 'df', displayField);\n    yield call(updateQuery, 'a', aggregationAction);\n    const state = yield select(getData);\n\n    yield put({\n      type: csvDataActions.UPDATE_DISPLAY_VALUES,\n      payload: {\n        displayField,\n        aggregationAction,\n      },\n    });\n\n    let groupData;\n    if (state.groupData.length > 0) {\n      groupData = yield call(\n        processToDisplay,\n        displayField,\n        aggregationAction,\n        state.groupData,\n      );\n    } else {\n      groupData = yield groupAndDisplayData(\n        state.filteredData,\n        displayField,\n        aggregationAction,\n      );\n    }\n\n    yield put({\n      type: csvDataActions.SET_DISPLAY,\n      payload: {\n        displayField,\n        aggregationAction,\n        groupData,\n      },\n    });\n  } catch {}\n}\n\nfunction loadMapScript(mapNameJSFile) {\n  return new Promise((resolve) => {\n    const script = document.createElement('script');\n    script.src = `https://code.highcharts.com/mapdata/${mapNameJSFile}`;\n    script.onload = resolve;\n    document.body.appendChild(script);\n  });\n}\n\nfunction* loadNewMap(action) {\n  const mapInfo = action.payload.mapInfo;\n  if (!mapInfo) {\n    yield put({ type: mapSettingActions.CHANGE_MAP, payload: { mapInfo } });\n    return;\n  }\n  updateQuery('map', mapInfo);\n  const map = mapInfo[1].replace('.js', '');\n  const chart = {\n    map,\n  };\n\n  if (!window.Highcharts.maps[map]) {\n    // need to load map first\n    yield call(loadMapScript, mapInfo[1]);\n  }\n  const newStateMap = buildStateVal(window.Highcharts.maps[map]);\n  yield put({\n    type: csvDataActions.UPDATE_STATE_MAP,\n    payload: { stateMap: newStateMap },\n  });\n  yield put({\n    type: mapSettingActions.CHANGE_MAP,\n    payload: { mapInfo, chart },\n  });\n  const { stateKey } = yield select(getData);\n  yield put({\n    type: csvDataActions.SET_STATE_AND_GROUP_SAGA,\n    payload: { stateKey },\n  });\n}\n\nfunction* loadFromURLSetings(action) {\n  console.log(getQueryVariable());\n  let mapInfo = getQueryVariable('map');\n  const queryURL = getQueryVariable('url');\n  const min = getQueryVariable('mi');\n  const max = getQueryVariable('ma');\n  console.log(max);\n  const title = getQueryVariable('t');\n  const s = getQueryVariable('st');\n  if (mapInfo) {\n    yield put({ type: csvDataActions.REQUEST_DATA });\n    mapInfo = mapInfo.flatMap((i) => i);\n    const lastItem = mapInfo.pop();\n    mapInfo = [mapInfo.join(','), lastItem];\n    yield put({\n      type: mapSettingActions.LOAD_NEW_MAP_SAGA,\n      payload: { mapInfo },\n    });\n  }\n\n  if (queryURL) {\n    yield put({\n      type: csvDataActions.LOAD_DATA_SAGA,\n      payload: { url: queryURL },\n    });\n\n    if (min) {\n      yield put(mapOptionsActions.setColorAxisMin(min));\n    }\n    if (max) {\n      console.log('update Max', max)\n      yield put(mapOptionsActions.setColorAxisMax(max));\n    }\n\n    if (title) {\n      yield put(mapOptionsActions.setTitle(title));\n    }\n    if (s) {\n      console.log(s);\n      yield put(mapOptionsActions.setColorAxisStops(s));\n    }\n  }\n}\n\nfunction* mySaga() {\n  yield all([\n    takeLatest(csvDataActions.LOAD_DATA_SAGA, fetchData),\n    takeLatest(csvDataActions.LOAD_FROM_URL, loadFromURLSetings),\n    takeEvery(csvDataActions.SET_DISPLAY_SAGA, setDisplay),\n    takeEvery(csvDataActions.APPLY_FILTERS_SAGA, updateFilters),\n    takeEvery(csvDataActions.SET_STATE_AND_GROUP_SAGA, groupDataSaga),\n    takeEvery(mapSettingActions.LOAD_NEW_MAP_SAGA, loadNewMap),\n  ]);\n}\n\nexport default mySaga;\n","import * as Actions from './mapSettings.actions';\n\nconst initial_state = {\n  chart: {\n    map: 'countries/us/us-all',\n    borderWidth: 1,\n  },\n  mapInfo:  [\"United States of America\", \"countries/us/us-all.js\"],\n\n}\n\nexport default (state = initial_state, {type, payload}) => {\n  switch(type) {\n    case Actions.CHANGE_MAP: \n    return {\n      ...state,\n      mapInfo: payload.mapInfo,\n      chart: {\n        ...state.chart,\n        ...payload.chart\n      }\n    }\n    default:\n      return state;\n  }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport csvDataReducer from './store/csvData/csvData.reducer';\nimport mapOptions from './store/mapOptions/mapOptions.reducer';\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from './store/sagas';\nimport mapSettingsReducer from './store/mapSettings/mapSettings.reducer';\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(combineReducers({\n  data: csvDataReducer,\n  options: mapOptions,\n  mapSettings: mapSettingsReducer,\n}), applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}