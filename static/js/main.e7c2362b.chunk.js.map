{"version":3,"sources":["components/Grid.js","utils/queryUtils.js","store/mapOptions/mapOptions.actions.js","components/Chart.js","sections/ChartSection.js","components/DropDown.js","store/csvData/csvData.actions.js","utils/Calculations.js","components/DataSelector.js","components/DatePicker.js","components/DateFilter.js","components/BasicTextFields.js","components/UrlSelector.js","components/NumericEditor.js","components/ColorEditor.js","components/ChartSettings.js","sections/SettingSection.js","App.js","serviceWorker.js","constants/stateMap.js","utils/Filters.js","store/csvData/csvDataTools.js","store/csvData/csvData.reducer.js","store/mapOptions/mapOptions.reducer.js","api/api.js","store/csvData/sagas.js","index.js"],"names":["Grid","useState","gridApi","setGridApi","setGridColumnApi","useSelector","data","filteredData","titles","className","style","height","width","marginRight","defaultColDef","resizable","onGridReady","params","api","columnApi","onRowDataChanged","sizeColumnsToFit","rowData","map","v","key","field","sortable","skipHeaderOnAutoSize","suppressSizeToFit","getQueryVariable","variable","vars","window","location","search","substring","split","i","length","pair","decodeURIComponent","val","includes","updateQuery","value","Array","isArray","join","queryParams","URLSearchParams","set","history","replaceState","toString","setTitle","text","type","payload","setColorAxisMin","min","setColorAxisMax","max","setColorAxisStops","stops","sort","a","b","setMapData","name","valArray","series","colorAxis","Math","require","Highcharts","highchartsMap","proj4","Chart","mapData","displayField","options","dispatch","useDispatch","useEffect","Actions","highcharts","constructorType","ChartSection","padding","border","useStyles","makeStyles","theme","button","display","formControl","minWidth","DropDown","values","onChange","label","classes","internalValue","setValue","open","setOpen","FormControl","InputLabel","id","Select","labelId","onClose","onOpen","event","target","MenuItem","loadData","url","updateDisplay","aggregationAction","groupData","stateKey","Calculations","arr","this","numberData","parseFloat","filter","isNaN","countOfNumbers","sum","undefined","_max","_min","_sum","reduce","aggerationOptions","Object","getOwnPropertyNames","prototype","k","s","startCase","DataSelector","urlState","urlDisplayField","urlAggregationAction","flexDirection","justifyContent","flex","df","container","flexWrap","textField","marginLeft","spacing","DatePickers","props","TextField","labelid","InputLabelProps","shrink","InputProps","inputProps","dateArr","d","Date","getTime","dateFormat","date","format","DateFilter","rawData","dateField","setDateField","minDate","setMinDate","maxDate","setMaxDate","startDate","setStartDate","endDate","setEndDate","dFilter","console","log","updateFilter","minVal","maxVal","filteringFuncitons","alignContent","alignSelf","minDateValue","calcMin","maxDateValue","calcMax","e","BasicTextFields","paddingBottom","UrlSelector","loadedURL","internalUrl","setInternalUrl","queryURL","onBlur","newUrl","KEY_BACKSPACE","KEY_DELETE","getCharCodeFromEvent","which","keyCode","onKeyDown","indexOf","isLeftOrRight","deleteOrBackspace","stopPropagation","charCode","finishedEditingPressed","charStr","String","fromCharCode","test","isCharNumeric","isKeyPressedNumeric","preventDefault","NumericEditor","forwardRef","ref","initialState","startValue","highlightAllOnFocus","keyPress","charPress","createInitialState","setHighlightAllOnFocus","refInput","useRef","cancelBeforeStart","addEventListener","removeEventListener","useImperativeHandle","afterGuiAttached","eInput","current","focus","select","setSelectionRange","getValue","isCancelBeforeStart","isCancelAfterEnd","ColorEditor","isPopup","color","onChangeComplete","hex","stopObjToArr","stop","ChartSettings","chartTitle","title","stopData","_id","mi","ma","t","st","Button","onClick","editable","modules","ClientSideRowModelModule","onCellValueChanged","prams","cloneStopData","rowIndex","singleClickEdit","frameworkComponents","numericEditor","colorEditor","deleteButton","immutableData","getRowNodeId","cellEditor","cellStyle","backgroundColor","textShadow","letterSpacing","headerName","cellRenderer","onCellClicked","rd","applyTransaction","remove","forEachNode","node","push","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","DataSourceAccordion","Accordion","AccordionSummary","aria-controls","Typography","AccordionDetails","ChartSettingsAccordion","FiltersAccordion","AggregationSettingsAccordion","SettingSection","loading","overflow","App","textAlign","Boolean","hostname","match","filterObject","start","end","item","isWithinInterval","makeFitler","fnMaker","obj","acc","normalizeState","state","cleanState","stateMap","toLowerCase","replace","filterData","filters","fd","every","fn","processToDisplay","groupedData","camelCase","calc","updateAggregationAction","convertCSVToJSON","str","delimiter","slice","rows","row","object","curr","inital_state","initial_state","chart","mapNavigation","enabled","nullColor","showInLegend","enableMouseTracking","getCSV","string","URL","_","protocol","isValidHttpUrl","axios","get","headers","Promise","reject","fetchUser","mySaga","action","put","call","apiData","find","message","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","aggerationOnly","newGroupData","dataLabels","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"qRAyCeA,G,cAjCF,WAAO,IAAD,EACeC,mBAAS,MADxB,mBACRC,EADQ,KACCC,EADD,OAE2BF,mBAAS,MAFpC,mBAEOG,GAFP,aAGmBC,aAAY,qBAAGC,QAAzCC,EAHO,EAGPA,aAAgBC,EAHT,EAGSA,OAcxB,OACI,yBAAKC,UAAU,kBAAkBC,MAAQ,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,YAAa,KAChF,kBAAC,cAAD,CACGC,cAAe,CAAEC,WAAW,GAC5BC,YAjBS,SAACC,GACnBd,EAAWc,EAAOC,KAClBd,EAAiBa,EAAOE,YAgBfC,iBAZO,WACZlB,GAEFA,EAAQmB,oBAUAC,QAASf,GACNC,EAAOe,KAAI,SAAAC,GAAC,OACX,kBAAC,eAAD,CAAcC,IAAKD,EAAGE,MAAOF,EAAGG,UAAU,EAAMC,sBAAsB,EAAMC,mBAAmB,W,8DC/BtGC,EAAmB,SAACC,GAG/B,IAFA,IACMC,EADQC,OAAOC,SAASC,OAAOC,UAAU,GAC5BC,MAAM,KAChBC,EAAI,EAAGA,EAAIN,EAAKO,OAAQD,IAAK,CACpC,IAAME,EAAOR,EAAKM,GAAGD,MAAM,KAC3B,GAAII,mBAAmBD,EAAK,MAAQT,EAAU,CAC5C,IAAIW,EAAMD,mBAAmBD,EAAK,IAIlC,OAHIE,EAAIC,SATA,SAUND,EAAMA,EAAIL,MAVJ,OAUiBd,KAAI,SAACC,GAAD,OAAOA,EAAEa,MAAM,SAErCK,KAKAE,EAAc,SAACnB,EAAKoB,GAC3BC,MAAMC,QAAQF,KAChBA,EAAQA,EAAMG,KAnBJ,QAuBZ,IAAMC,EAAc,IAAIC,gBAAgBjB,OAAOC,SAASC,QACxDc,EAAYE,IAAI1B,EAAKoB,GACrBZ,OAAOmB,QAAQC,aAAa,KAAM,KAAM,IAAMJ,EAAYK,aClB/CC,EAAW,SAACC,GAEvB,OADAZ,EAAY,IAAKY,GACV,CACLC,KARqB,YASrBC,QAAS,CACPF,UAIOG,EAAkB,SAACC,GAE9B,OADAhB,EAAY,KAAMgB,GACX,CACLH,KAhB8B,qBAiB9BC,QAAS,CACPE,SAIOC,EAAkB,SAACC,GAE9B,OADAlB,EAAY,KAAMkB,GACX,CACLL,KAxB8B,qBAyB9BC,QAAS,CACPI,SAIOC,EAAoB,SAACC,GAGhC,OAFAA,EAAQA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAYD,EAAE,IAAMC,EAAE,GAAM,GAAK,KACpDvB,EAAY,KAAMoB,GACX,CACLP,KAjCgC,uBAkChCC,QAAS,CACPM,MAAM,YAAKA,MAKJI,EAAa,WAA6B,IAA5B9D,EAA2B,uDAApB,GAAI+D,EAAgB,uDAAT,KACrCC,GAAYhE,GAAO,IAAIiB,KAAI,SAACC,GAAD,OAAOA,EAAE,MAC1C,MAAO,CACLiC,KA1CwB,eA2CxBC,QAAS,CACPa,OAAQ,CACNjE,KAAK,YAAIA,GACT+D,QAEFG,UAAW,CACTZ,IAAKa,KAAKb,IAAL,MAAAa,KAAI,YAAQH,IACjBR,IAAKW,KAAKX,IAAL,MAAAW,KAAI,YAAQH,Q,SChDzBI,EAAQ,IAARA,CAAwCC,KAExCC,IAAcD,KACQ,qBAAX1C,SACTA,OAAO4C,MAAQ5C,OAAO4C,OAASA,KAGjC,IAyBeC,EAzBD,WAAO,IAAD,EACgBzE,aAAY,qBAAGC,QAAzCyE,EADU,EACVA,QAASC,EADC,EACDA,aACXC,EAAW5E,aAAY,qBAAG4E,WAC1BC,EAAWC,cASjB,OARAC,qBAAU,WACe,IAAnBL,EAAQxC,OACV2C,EAASG,EAAmBN,EAASC,IAErCE,EAASG,OAEV,CAACN,EAASC,EAAcE,IAGzB,oCACGD,EACC,kBAAC,IAAD,CACEK,WAAYX,IACZM,QAASA,EACTM,gBAAiB,aAEjB,OCjBKC,EAfM,WACnB,OAAQ,yBACN9E,MAAO,CACLE,MAAO,MACP6E,QAAS,OACTC,OAAQ,sBAEV,yBAAKhF,MAAO,CAAEE,MAAO,MAAOD,OAAQ,UAClC,kBAAC,EAAD,S,6CCJAgF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,QAAS,SAGXC,YAAa,CAEXC,SAAU,IACVrF,MAAO,YAII,SAASsF,EAAT,GAAuD,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MAAOxD,EAAS,EAATA,MACpDyD,EAAUX,IADmD,EAEjC1F,mBAAS4C,GAFwB,mBAE5D0D,EAF4D,KAE7CC,EAF6C,OAG3CvG,oBAAS,GAHkC,mBAG5DwG,EAH4D,KAGtDC,EAHsD,KAKnEtB,qBAAU,WACJmB,IAAkB1D,GACpB2D,EAAS3D,KAEV,CAACA,EAAO0D,IAeX,OACE,yBAAK7F,MAAO,CAACE,MAAO,SAClB,kBAAC+F,EAAA,EAAD,CAAalG,UAAW6F,EAAQN,aAC9B,kBAACY,EAAA,EAAD,CAAYC,GAAG,qCAAqCR,GACpD,kBAACS,EAAA,EAAD,CACEC,QAAQ,oCACRF,GAAG,8BACHJ,KAAMA,EACNO,QAhBY,WAClBN,GAAQ,IAgBFO,OAbW,WACjBP,GAAQ,IAaF7D,MAAO0D,EACP7F,MAAO,CAACE,MAAO,QACfwF,SAzBa,SAACc,GACpBV,EAASU,EAAMC,OAAOtE,OACtBuD,EAASc,EAAMC,OAAOtE,SAwBhB,kBAACuE,EAAA,EAAD,CAAUvE,MAAM,IACd,qCAEDsD,EAAO5E,KAAI,SAACC,GAAD,OACV,kBAAC4F,EAAA,EAAD,CAAUvE,MAAOrB,EAAGC,IAAKD,GAAIA,SC1DlC,IAcM6F,EAAW,SAACC,GAAD,MAAU,CAChC7D,KAd4B,iBAe5BC,QAAS,CACP4D,SAISC,EAAgB,SAACvC,EAAcwC,GAG1C,OAFA5E,EAAY,KAAMoC,GAClBpC,EAAY,IAAK4E,GACV,CACL/D,KAjBuB,oBAkBvBC,QAAS,CACPsB,eACAwC,uBAeOC,EAAY,SAACC,GAExB,OADA9E,EAAY,IAAK8E,GACV,CACLjE,KAvC+B,sBAwC/BC,QAAS,CACPgE,c,kBClDeC,E,WACnB,WAAYC,EAAKnG,GAAM,IAAD,2BACpBoG,KAAKD,IAAMA,EACXC,KAAKpG,IAAMA,EACXoG,KAAKC,WAAaF,EACfrG,KAAI,SAAC2C,GAAD,OAAO6D,WAAW7D,EAAE,EAAKzC,SAC7BuG,QAAO,SAAC9D,GAAD,OAAQ+D,MAAM/D,M,sDAIxB,GAAI2D,KAAKK,iBACP,OAAOL,KAAKM,MAAQN,KAAKK,mB,8BAK3B,OAAOL,KAAKD,IAAIrF,S,uCAIhB,OAAOsF,KAAKC,WAAWvF,S,4BAIvB,YAAkB6F,IAAdP,KAAKQ,OAGTR,KAAKQ,KAAO5D,KAAKX,IAAL,MAAAW,KAAI,YAAQoD,KAAKC,cAFpBD,KAAKQ,O,4BAOd,YAAkBD,IAAdP,KAAKS,OAGTT,KAAKS,KAAO7D,KAAKb,IAAL,MAAAa,KAAI,YAAQoD,KAAKC,cAFpBD,KAAKS,O,4BAOd,YAAkBF,IAAdP,KAAKU,OAGTV,KAAKU,KAAOV,KAAKC,WAAWU,QAAO,SAACtE,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAF3C0D,KAAKU,S,cCjCZE,EAAoBC,OAAOC,oBAAoBhB,EAAaiB,WAC/DZ,QAAO,SAACa,GAAD,MAAa,gBAANA,KACdtH,KAAI,SAACuH,GAAD,OAAOC,oBAAUD,MA2ETE,EAzEM,WAAO,IAAD,EACqC3I,aAC5D,qBAAGC,QADGE,EADiB,EACjBA,OAAQkH,EADS,EACTA,SAAU1C,EADD,EACCA,aAAcwC,EADf,EACeA,kBAGlCtC,EAAWC,cAEjBC,qBAAU,WACR,IAAM6D,EAAWnH,EAAiB,KAC5BoH,EAAkBpH,EAAiB,MACnCqH,EAAuBrH,EAAiB,KAC1CmH,IAAavB,GACfxC,EAASG,EAAkBqC,KAG1BwB,GAAmBA,IAAoBlE,GACvCmE,GAAwBA,IAAyB3B,IAElDtC,EAASG,EAAsB6D,EAAiBC,MAEjD,CAAC3I,EAAQkH,EAAU1C,EAAcwC,EAAmBtC,IAYvD,OACE,yBACExE,MAAO,CACLqF,QAAS,OACTqD,cAAe,MACfC,eAAgB,gBAChBC,KAAM,KAED,OAAN9I,QAAM,IAANA,OAAA,EAAAA,EAAQ+B,QACP,yBAAK7B,MAAO,CAAEE,MAAO,QACnB,kBAACsF,EAAD,CACErD,MAAO6E,EACPvB,OAAQ3F,EACR4F,SAvBY,SAAC5E,GACrB0D,EAASG,EAAkB7D,KAuBnB6E,MAAM,iBAGR,KACHqB,EACC,oCACE,yBAAKhH,MAAO,CAAEE,MAAO,QACnB,kBAACsF,EAAD,CACErD,MAAOmC,EACPmB,OAAQ3F,EACR4F,SA/BiB,SAACmD,GAC5BrE,EAASG,EAAsBkE,EAAI/B,KA+BzBnB,MAAM,mBAGV,yBAAK3F,MAAO,CAAEE,MAAO,QACnB,kBAACsF,EAAD,CACErD,MAAO2E,EACPrB,OAAQsC,EACRrC,SApCsB,SAAClC,GACjCgB,EAASG,EAAsBL,EAAcd,KAoCnCmC,MAAM,kBAIV,O,qDC5EJV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2D,UAAW,CACTzD,QAAS,OACT0D,SAAU,QAEZC,UAAW,CACTC,WAAY9D,EAAM+D,QAAQ,GAC1B/I,YAAagF,EAAM+D,QAAQ,GAC3BhJ,MAAO,SAII,SAASiJ,EAAYC,GAClC,IAAMxD,EAAUX,IAChB,OACE,6BACE,kBAACoE,EAAA,EAAD,eACEC,QAAS,eAAgBF,EAAMzD,MAC/B5C,KAAK,OACLhD,UAAW6F,EAAQoD,UACnBO,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CAAEC,WAAW,eAAMN,KAC3BA,KCjBZ,IASMO,EAAU,SAAC/J,EAAMoB,GACrB,OAAOpB,EAAKiB,KAAI,SAAC+I,GAAD,OAAO,IAAIC,KAAKD,EAAE5I,OAASsG,QAAO,SAACxG,GAAD,OAAQyG,MAAMzG,EAAEgJ,eAY9DC,EAAa,SAACC,GAClB,OAAOC,YAAOD,EAAM,eAsGPE,GAnGI,WACjB,IAAM1F,EAAWC,cADM,EAEK9E,aAAY,qBAAGC,QAAnCE,EAFe,EAEfA,OAAQqK,EAFO,EAEPA,QAFO,EAGW5K,mBAAS,IAHpB,mBAGhB6K,EAHgB,KAGLC,EAHK,OAIO9K,mBAAS,IAJhB,mBAIhB+K,EAJgB,KAIPC,EAJO,OAKOhL,mBAAS,IALhB,mBAKhBiL,EALgB,KAKPC,EALO,OAMWlL,mBAAS,IANpB,mBAMhBmL,EANgB,KAMLC,EANK,OAOOpL,mBAAS,IAPhB,mBAOhBqL,EAPgB,KAOPC,EAPO,KAqBvB,GAZAnG,qBAAU,WAAM,IAAD,EACOtD,EAAiB,MAAO,GAArC0J,EADM,oBAEVA,IACDC,QAAQC,IAAIF,GACZT,EAAaS,EAAQ,IACrBH,EAAaG,EAAQ,IACrBD,EAAWC,EAAQ,OAGpB,CAAChL,MAGA,OAACA,QAAD,IAACA,OAAD,EAACA,EAAQ+B,QACX,OAAO,KAGT,IA+BMoJ,EAAe,SAACjK,EAAOkK,EAAQC,GACnC,IJ3D0BC,EI4D1B5G,GJ3DFtC,EAAY,IADgBkJ,EI4DK,CADrB,CAAC,cAAepK,EAAOkK,EAAQC,KJzDpC,CACLpI,KAxBuB,cAyBvBC,QAAS,CACPoI,0BI0DJ,OACE,yBACEpL,MAAO,CACLqF,QAAS,OACTqD,cAAe,MACf2C,aAAc,SACd1C,eAAgB,kBAElB,yBAAK3I,MAAO,CAAEE,MAAO,MAAOoL,UAAW,WACrC,kBAAC9F,EAAD,CACErD,MAAOiI,EACP3E,OAAQ3F,EACR4F,SAhDkB,SAAC5E,GACzB,IACE,IAAMyK,EAxCI,SAAC3L,EAAMoB,GACrB,IAAMkG,EAAMyC,EAAQ/J,EAAMoB,GAC1B,OAAO+I,EAAW7G,YAAIgE,IAsCGsE,CAAQrB,EAASrJ,GAChC2K,EArCI,SAAC7L,EAAMoB,GACrB,IAAMkG,EAAMyC,EAAQ/J,EAAMoB,GAC1B,OAAO+I,EAAW3G,YAAI8D,IAmCGwE,CAAQvB,EAASrJ,GACtCuJ,EAAavJ,GACbyJ,EAAWgB,GACXZ,EAAaY,GACbd,EAAWgB,GACXZ,EAAWY,GACXR,EAAanK,EAAGyK,EAAcE,GAC9B,MAAOE,GACPtB,EAAa,IACbE,EAAW,IACXI,EAAa,IACbF,EAAW,IACXI,EAAW,MAkCPlF,MAAM,gBAGTyE,EACC,yBAAKpK,MAAO,CAAEqF,QAAS,OAAQqD,cAAe,QAC5C,kBAAC,EAAD,CACE/C,MAAM,OACNzC,IAAKoH,EACLlH,IAAKwH,EACLzI,MAAOuI,EACPhF,SAxCgB,SAACiG,GACzB,IAAM3B,EAAO2B,EAAElF,OAAOtE,MACtBwI,EAAaX,GACbiB,EAAab,EAAWJ,EAAMY,MAuCxB,kBAAC,EAAD,CACEjF,MAAM,KACNzC,IAAKwH,EACLtH,IAAKoH,EACLrI,MAAOyI,EACPlF,SAzCc,SAACiG,GACvB,IAAM3B,EAAO2B,EAAElF,OAAOtE,MACtB0I,EAAWb,GACXiB,EAAab,EAAWM,EAAWV,OAyC7B,OC/HK,SAAS4B,GAAgBxC,GACtC,OACE,kBAACC,EAAA,EAAD,eAAWlD,GAAG,iBAAiBnG,MAAO,CAACE,MAAO,OAAQ2L,cAAe,SAAazC,ICCtF,IAmCe0C,GAnCK,WAClB,IAAMtH,EAAWC,cACXsH,EAAYpM,aAAY,gBAAGC,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,OAAd,EAAcA,EAAMgH,OAF1B,EAGcrH,mBAASwM,GAHvB,mBAGjBC,EAHiB,KAGJC,EAHI,KAKxBvH,qBAAU,WACR,IAAMwH,EAAW9K,EAAiB,OAC9B8K,GACF1H,EAASG,EAAiBuH,MAE3B,CAAC1H,IAEJE,qBAAU,WACRuH,EAAeF,KACd,CAACA,IASJ,OACE,yBAAK/L,MAAO,CAAEE,MAAO,SACnB,kBAAC0L,GAAD,CACEjG,MAAM,gBACNxD,MAAO6J,EACPtG,SAAU,SAACiG,GAAD,OAAOM,EAAeN,EAAElF,OAAOtE,QACzCgK,OAAQ,SAACR,GAbA,IAACS,KAaYT,EAAElF,OAAOtE,SAZpB4J,GAGfvH,EAASG,EAAiByH,S,kDCnBxBC,GAAgB,EAChBC,GAAa,GASbC,GAAuB,SAAC/F,GAE5B,MAA8B,qBAD9BA,EAAQA,GAASjF,OAAOiF,OACJgG,MAAwBhG,EAAMiG,QAAUjG,EAAMgG,OAsB9DE,GAAY,SAAClG,IA5BG,SAACA,GACrB,MAAO,CAAC,GAAI,IAAImG,QAAQnG,EAAMiG,UAAY,GA4BtCG,CAAcpG,IATM,SAACA,GACzB,MAAO,CAAC8F,GAAYD,IAAeM,QAAQnG,EAAMiG,UAAY,EAQjCI,CAAkBrG,GAC5CA,EAAMsG,kBANqB,SAACtG,GAC9B,IAAMuG,EAAWR,GAAqB/F,GACtC,OA7BgB,KA6BTuG,GA5BO,IA4BmBA,EAQ5BC,CAAuBxG,IArBF,SAACA,GAC3B,IAAMuG,EAAWR,GAAqB/F,GAChCyG,EAAUzG,EAAMzF,IAAMyF,EAAMzF,IAAMmM,OAAOC,aAAaJ,GAE5D,OARoB,SAACE,GACrB,QAAS,kBAAkBG,KAAKH,GAOzBI,CADQ7G,EAAMC,OAAOtE,MAAQ8K,GAkBGK,CAAoB9G,IACrDA,EAAM+G,gBAAgB/G,EAAM+G,kBA+FrBC,GA3FOC,sBAAW,SAACrE,EAAOsE,GACvC,IAyBMC,EAzBqB,WACzB,IAAIC,EACAC,GAAsB,EAiB1B,OAfIzE,EAAM0E,WAAazB,IAAiBjD,EAAM0E,WAAaxB,GAEzDsB,EAAa,GACJxE,EAAM2E,WAEfH,EAAaxE,EAAM2E,UACnBF,GAAsB,IAGtBD,EAAaxE,EAAMjH,MAzDV,MA0DLiH,EAAM0E,WACRD,GAAsB,IAInB,CACL1L,MAAOyL,EACPC,uBAIiBG,GA1B0B,EA4BrBzO,mBAASoO,EAAaxL,OA5BD,mBA4BxCA,EA5BwC,KA4BjC2D,EA5BiC,OA6BOvG,mBACpDoO,EAAaE,qBA9BgC,mBA6BxCA,EA7BwC,KA6BnBI,EA7BmB,KAgCzCC,EAAWC,iBAAO,MAClBC,EACJhF,EAAM2E,WAAa,cAAcpB,QAAQvD,EAAM2E,WAAa,EA+C9D,OA7CArJ,qBAAU,WAER,OADAnD,OAAO8M,iBAAiB,UAAW3B,IAC5B,WACLnL,OAAO+M,oBAAoB,UAAW5B,OAEvC,IAEH6B,8BAAoBb,GAAK,WACvB,MAAO,CACLc,iBADK,WAGH,IAAMC,EAASP,EAASQ,QAExB,GADAD,EAAOE,QACHd,EACFY,EAAOG,SAEPX,GAAuB,OAClB,CAKL,IAAMpM,EAAS4M,EAAOtM,MAAQsM,EAAOtM,MAAMN,OAAS,EAChDA,EAAS,GACX4M,EAAOI,kBAAkBhN,EAAQA,KAKvCiN,SArBK,WAsBH,OAAO3M,GAGT4M,oBAzBK,WA0BH,OAAOX,GAKTY,iBA/BK,WAgCH,OAAO7M,EAAQ,SAMnB,2BACEuL,IAAKQ,EACL/L,MAAOA,EACPuD,SAAU,SAACc,GAAD,OAAWV,EAASU,EAAMC,OAAOtE,QAC3CnC,MAAO,CAAEE,MAAO,Y,UCpGP+O,I,OA9BKxB,sBAAW,SAACrE,EAAOsE,GAAS,IAAD,EACnBnO,mBAAS6J,EAAMjH,OADI,mBACtCA,EADsC,KAC/B2D,EAD+B,KAEvCoI,EAAWC,iBAAO,MAcxB,OAXAI,8BAAoBb,GAAK,WACvB,MAAO,CACLoB,SADK,WAEH,OAAO3M,GAET+M,QAJK,WAKH,OAAO,OAMX,yBAAKxB,IAAKQ,EAAUlO,MAAO,CAAE+E,QAAS,SACpC,kBAAC,gBAAD,CACEoK,MAAOhN,EACPiN,iBAAkB,YAAY,IAAVC,EAAS,EAATA,IACdA,GACFvJ,EAASuJ,W,UCpBrB,SAASC,GAAT,GACE,MAAO,CAD8B,EAAfC,KAAe,EAATJ,OAI9B,IAkKeK,GAlKO,WAAO,IAAD,EACIjQ,mBAAS,MADb,mBACVE,GADU,aAEgBF,mBAAS,MAFzB,mBAEJG,GAFI,WAGpB8E,EAAWC,cACXsH,EAAYpM,aAAY,gBAAGC,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,OAAd,EAAcA,EAAMgH,OAC5C6I,EAAa9P,aAAY,qBAAG4E,QAAsBmL,MAAM5M,QACxDI,EAAMvD,aAAY,qBAAG4E,QAAsBT,UAAUZ,OACrDE,EAAMzD,aAAY,qBAAG4E,QAAsBT,UAAUV,OACrDuM,EAAWhQ,aAAY,qBAAG4E,QACtBT,UAAUR,MAAMzC,KAAI,WAAgBe,GAAhB,uBAAE2N,EAAF,KAAQJ,EAAR,WAAuB,CACjDI,OACAJ,QACAS,IAAKhO,EAAI2N,EAAOJ,SAIpBzK,qBAAU,WACR,IAAMmL,EAAKzO,EAAiB,MACxByO,GAAMA,IAAO3M,GAAO6I,GACtBvH,EAASG,EAAwBkL,MAElC,CAAC3M,EAAK6I,EAAWvH,IACpBE,qBAAU,WACR,IAAMoL,EAAK1O,EAAiB,MACxB0O,GAAMA,IAAO1M,GAAO2I,GACtBvH,EAASG,EAAwBmL,MAElC,CAAC1M,EAAK2I,EAAWvH,IACpBE,qBAAU,WACR,IAAMqL,EAAI3O,EAAiB,KACvB2O,GAAKA,IAAMN,GAAc1D,GAC3BvH,EAASG,EAAiBoL,MAE3B,CAACN,EAAY1D,EAAWvH,IAC3BE,qBAAU,WACR,IAAM0D,EAAIhH,EAAiB,MACrB4O,EAAKL,EAAS9O,IAAIyO,IACpBlH,GAAKA,EAAExF,aAAeoN,EAAGpN,YAAcmJ,GACzCvH,EAASG,EAA0ByD,MAEpC,CAACuH,EAAU5D,EAAWvH,IAgDzB,OACE,yBAAKxE,MAAO,CAAEqF,QAAS,OAAQqD,cAAe,SAAUxI,MAAO,SAC7D,kBAAC,GAAD,CACEyF,MAAM,QACNxD,MAAOsN,EACP/J,SAAU,SAACiG,GAAD,OAzBQ7K,EAyBc6K,EAAElF,OAAOtE,WAxB7CqC,EAASG,EAAiB7D,IADL,IAACA,KA2BpB,yBAAKd,MAAO,CAAEE,MAAO,OAAQmF,QAAS,OAAQqD,cAAe,QAC3D,kBAAC,GAAD,CACE/C,MAAM,iBACNxD,MAAOe,EACPwC,SAAU,SAACiG,GAAD,OA3BI7K,EA2BgB6K,EAAElF,OAAOtE,WA1B7CqC,EAASG,EAAwB7D,IADd,IAACA,KA6BhB,kBAAC,GAAD,CACE6E,MAAM,iBACNxD,MAAOiB,EACPsC,SAAU,SAACiG,GAAD,OA5BI7K,EA4BgB6K,EAAElF,OAAOtE,WA3B7CqC,EAASG,EAAwB7D,IADd,IAACA,KA8BhB,kBAACmP,GAAA,EAAD,CAAQjQ,MAAO,CAAEE,MAAO,OAASgQ,QAlDvB,WACd,IAAMtQ,EAAI,sBAAO+P,EAAS9O,IAAIyO,KAApB,CAAmC,CAAC,EAAG,UACjD9K,EAASG,EAA0B/E,MAgD/B,aAIF,yBAAKI,MAAO,CAAEE,MAAO,SACnB,yBAAKH,UAAU,kBAAkBC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,SAC5D,kBAAC,cAAD,CACEE,cAAe,CACbwI,KAAM,EACNrD,SAAU,IACV+B,QAAQ,EACR6I,UAAU,GAEZ7P,YA3EV,SAAqBC,GACnBd,EAAWc,EAAOC,KAClBd,EAAiBa,EAAOE,YA0EhB2P,QAAS,CAACC,MACVC,mBAxEiB,SAACC,GAC1B,IAAMC,EAAgBb,EAAS9O,KAAI,SAAC8K,GAAD,sBAAaA,MAChD6E,EAAcD,EAAME,UAApB,eAAqCF,EAAM3Q,MAC3C,IAAMA,EAAO4Q,EAAc3P,IAAIyO,IAC/B9K,EAASG,EAA0B/E,KAqE3B8Q,iBAAiB,EACjBC,oBAAqB,CACnBC,cAAepD,GACfqD,YAAa5B,GACb6B,aA9CS,WACnB,OACE,kBAACb,GAAA,EAAD,CAAQjQ,MAAO,CAAEE,MAAO,SAAxB,YA8CM6Q,eAAa,EACbC,aAAc,SAACpR,GAAD,OAAUA,EAAKgQ,KAC7BhP,QAAS+O,GACT,kBAAC,eAAD,CACE3O,MAAM,OACNC,UAAU,EACVkP,UAAU,EACVc,WAAW,kBACb,kBAAC,eAAD,CACErI,KAAM,EACN5H,MAAM,QACNmP,UAAU,EACVc,WAAW,cACXC,UAAW,SAACX,GACV,MAAO,CACLY,gBAAe,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAOpO,MACxBgN,MAAO,QACPiC,WACE,qEACFC,cAAe,UAGrB,kBAAC,eAAD,CACEC,WAAW,SACXC,aAAa,eACbC,cA7FM,SAAC5Q,GACjB,IAAI6Q,EAAK,GACT7Q,EAAQJ,IAAIkR,iBAAiB,CAAEC,OAAQ,CAAC/Q,EAAQhB,QAChDgB,EAAQJ,IAAIoR,aAAY,SAAAC,GAAI,OAAIJ,EAAGK,KAAKD,EAAKjS,SAC7C,IAAMA,EAAO6R,EAAG5Q,IAAIyO,IACpB9K,EAASG,EAA0B/E,KAyFzBuQ,UAAU,SC5JlBlL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4M,KAAM,CACJ7R,MAAO,QAET8R,QAAS,CACPC,SAAU9M,EAAM+M,WAAWC,QAAQ,IACnCC,WAAYjN,EAAM+M,WAAWG,uBAI3BC,GAAsB,WAC1B,IAAM1M,EAAUX,KAChB,OACE,kBAACsN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,gBAAc,kBAAkBtM,GAAG,kBACnD,kBAACuM,GAAA,EAAD,CAAY3S,UAAW6F,EAAQoM,SAA/B,gBAEF,kBAACW,GAAA,EAAD,KACE,kBAAC,GAAD,SAKFC,GAAyB,WAC7B,IAAMhN,EAAUX,KAChB,OACE,kBAACsN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,gBAAc,kBAAkBtM,GAAG,kBACnD,kBAACuM,GAAA,EAAD,CAAY3S,UAAW6F,EAAQoM,SAA/B,mBAEF,kBAACW,GAAA,EAAD,KACE,kBAAC,GAAD,SAKFE,GAAmB,WACvB,IAAMjN,EAAUX,KAChB,OACE,kBAACsN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,gBAAc,kBAAkBtM,GAAG,kBACnD,kBAACuM,GAAA,EAAD,CAAY3S,UAAW6F,EAAQoM,SAA/B,YAEF,kBAACW,GAAA,EAAD,KACE,kBAAC,GAAD,SAKFG,GAA+B,WACnC,IAAMlN,EAAUX,KAChB,OACE,kBAACsN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,gBAAc,kBAAkBtM,GAAG,kBACnD,kBAACuM,GAAA,EAAD,CAAY3S,UAAW6F,EAAQoM,SAA/B,yBAIF,kBAACW,GAAA,EAAD,KACE,kBAAC,EAAD,SA+BOI,GAzBQ,WAAO,IAAD,EACCpT,aAAY,qBAAGC,QAAnCoT,EADmB,EACnBA,QAASlT,EADU,EACVA,OAGjB,OADAiL,QAAQC,IAAIlL,EAAO+B,QAEjB,yBACE7B,MAAO,CACLE,MAAO,MACP6E,QAAS,OACTC,OAAQ,oBACRiO,SAAU,WAEZ,kBAAC,GAAD,MACCD,EAAU,UAAY,MACrBA,GAAWlT,EAAO+B,OAAS,kBAAC,GAAD,MAA6B,KACzD/B,EAAO+B,OACN,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEA,OCtEKqR,GAvBH,WACV,OACE,yBAAKlT,MAAO,CAAEqF,QAAS,OAAQqD,cAAe,WAC5C,yBAAK1I,MAAO,CAACmT,UAAW,WACxB,2DAEA,yBACEnT,MAAO,CACLqF,QAAS,OACTN,QAAS,OACT4D,eAAgB,gBAChB1I,OAAQ,UAEV,kBAAC,GAAD,MACA,kBAAC,EAAD,OAEF,yBAAKD,MAAO,CAAE4I,KAAM,EAAG7D,QAAS,SAC9B,kBAAC,EAAD,S,SCVYqO,QACW,cAA7B7R,OAAOC,SAAS6R,UAEe,UAA7B9R,OAAOC,SAAS6R,UAEhB9R,OAAOC,SAAS6R,SAASC,MACvB,2DClBQ,QACda,KACb,SAAW,KACX,YAAc,KACd,SAAW,KACX,QAAU,KACV,QAAU,KACV,OAAS,KACT,MAAQ,KACR,SAAW,KACX,QAAU,KACV,KAAO,KACP,OAAS,KACT,SAAW,KACX,UAAY,KACZ,MAAQ,KACR,SAAW,KACX,cAAgB,KAChB,SAAW,KACX,UAAY,KACZ,YAAc,KACd,SAAW,KACX,QAAU,KACV,SAAW,KACX,OAAS,KACT,aAAe,KACf,UAAY,KACZ,UAAY,KACZ,QAAU,KACV,cAAgB,KAChB,YAAc,KACd,KAAO,KACP,SAAW,KACX,OAAS,KACT,aAAe,KACf,YAAc,KACd,cAAgB,KAChB,YAAc,KACd,UAAY,KACZ,MAAQ,KACR,KAAO,KACP,QAAU,KACV,SAAW,KACX,WAAa,KACb,aAAe,KACf,UAAY,KACZ,QAAU,KACV,IAAM,KACN,KAAO,KACP,IAAM,KACN,MAAQ,KACR,KAAO,KACP,KAAO,KACP,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,KAAO,KACP,KAAO,KACP,KAAO,KACP,KAAO,KACP,KAAO,KACP,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,KAAO,KACP,KAAO,KACP,KAAO,KACP,IAAM,KACN,KAAO,KACP,KAAO,KACP,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,IAAM,KACN,KAAO,KACP,IAAM,MClIAC,GAAe,CACnB,YAAe,SAACvS,EAAOwS,EAAOC,GAG5B,OAFAD,EAAQ,IAAI3J,KAAK2J,GACjBC,EAAM,IAAI5J,KAAK4J,GACR,SAACC,GACR,IAAM1J,EAAO,IAAIH,KAAK6J,EAAK1S,IAC3B,OAAIuG,MAAMyC,EAAKF,YAGR6J,YAAiB3J,EAAM,CAAEwJ,QAAOC,WAQ9BG,GAAa,SAACjQ,GACzB,IAAMkQ,EAAUN,GAAa5P,GAC7B,GAAIkQ,EAAS,CAAC,IAAD,uBAFqBzK,EAErB,iCAFqBA,EAErB,kBACX,OAAOyK,EAAO,WAAP,EAAWzK,GAEpB,OAAO,MCnBIrC,GAAY,SAACC,EAAUpH,GAClC,IAAKoH,EACH,MAAO,GAET,IAAM8M,EAAMlU,EAAKkI,QAAO,SAACiM,EAAKL,GAC5B,IAAKA,EAAK1M,GACR,OAAO+M,EAET,IAAMhT,EAAMiT,GAAeN,EAAK1M,IAChC,OAAKjG,GAGAgT,EAAIhT,KACPgT,EAAIhT,GAAO,CAACA,EAAK,KAEnBgT,EAAIhT,GAAK,GAAG+Q,KAAK4B,GACVK,GANEA,IAOR,IACH,OAAO/L,OAAOvC,OAAOqO,IAGVE,GAAiB,SAACC,GAC7B,GAAqB,kBAAVA,EACT,OAAO,KAET,IAAMC,EAAaC,GAASF,EAAMG,cAAcC,QAAQ,YAAa,KACrE,OAAIH,EACK,MAAQA,EAEV,MAEII,GAAa,SAACnK,EAASmK,GAClC,GAA0B,IAAtBA,EAAWzS,OACb,OAAOsI,EAETY,QAAQC,IAAIsJ,GACZ,IAAMC,EAAUD,EAAWzT,KAAI,SAAC2T,GAAD,OAAQZ,GAAU,WAAV,cAAcY,OAAKlN,OAAO8L,SAEjE,OADArI,QAAQC,IAAIuJ,GACLpK,EAAQ7C,QAAO,SAACnF,GAAD,OAAWoS,EAAQE,OAAM,SAACC,GAAD,OAAQA,EAAGvS,UAG/CwS,GAAmB,SAC9BC,EACAtQ,EACAwC,GAEA,OAAKA,GAAsBxC,GAI3BwC,EAAoB+N,oBAAU/N,GACvB8N,EAAY/T,KAAI,YAAiB,IAAD,mBAAdE,EAAc,KAATmG,EAAS,KAC/B4N,EAAO,IAAI7N,EAAaC,EAAK5C,GAEnC,MAAO,CAACvD,EADW+T,EAAKhO,KACCgO,OAPlB,IAWEC,GAA0B,SAAC1Q,EAASyC,GAC/C,OAAKA,GAAsB1E,MAAMC,QAAQgC,IAIzCyC,EAAoB+N,oBAAU/N,GACvBzC,EAAQxD,KAAI,YAAsB,IAAD,mBAAnBE,EAAmB,KAAV+T,GAAU,WAEtC,MAAO,CAAC/T,EADW+T,EAAKhO,KACCgO,OANlB,IAUEE,GAAmB,WAAgC,IAA/BC,EAA8B,uDAAxB,GAAIC,EAAoB,uDAAR,IAC/CpV,EAASmV,EAAIE,MAAM,EAAGF,EAAItI,QAAQ,OAAOhL,MAAMuT,GAC/CE,EAAOH,EAAIE,MAAMF,EAAItI,QAAQ,MAAQ,GAAGhL,MAAM,MACpD,MAAO,CACL7B,EACAsV,EAAKvU,KAAI,SAACwU,GACR,IAAM5P,EAAS4P,EAAI1T,MAAMuT,GACzB,OAAOpV,EAAOgI,QAAO,SAACwN,EAAQC,EAAM3T,GAElC,OADA0T,EAAOC,GAAQ9P,EAAO7D,GACf0T,IACN,SCjFHE,GAAe,CACnB5O,IAAK,GACL9G,OAAQ,GACRqK,QAAS,GACTtK,aAAc,GACdmH,SAAU,GACVD,UAAW,GACXzC,aAAc,GACdwC,kBAAmB,GACnBsE,mBAAoB,GACpB/G,QAAS,GACT2O,SAAS,GCZLyC,GAAgB,CACpBC,MAAO,CACL7U,I,QAEF6O,MAAO,CACL5M,KAAM,IAER6S,cAAe,CACbC,SAAS,GAEX9R,UAAW,CACTZ,IAAK,EACLE,IAAK,EACLE,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,GAAK,QACN,CAAC,EAAG,aAGRO,OAAQ,CACN,CACEF,KAAM,aACNZ,KAAM,UACNoM,MAAO,SACP0G,UAAW,SACXC,cAAc,EACdC,qBAAqB,K,oDC1BdC,GAAS,SAACpP,GAErB,OAaF,SAAwBqP,GACtB,IAAIrP,EAEJ,IACEA,EAAM,IAAIsP,IAAID,GACd,MAAOE,GACP,OAAO,EAGT,MAAwB,UAAjBvP,EAAIwP,UAAyC,WAAjBxP,EAAIwP,SAvBtBC,CAAezP,GAIzB0P,KAAMC,IAAN,mDACwC3P,GAE7C,CACE4P,QAAS,CAAC,8BAA+B,IAAK,+BAA+B,kCANxEC,QAAQC,OAAO,gB,0BCGhBC,I,aA0BAC,IA1BV,SAAUD,GAAUE,GAApB,sFAEI,OAFJ,kBAEUC,aAAI,CAAE/T,KnBTY,iBmBO5B,OAK8B,OAFpB6D,EAAMiQ,EAAO7T,QAAQ4D,IAC3B1E,EAAY,MAAO0E,GAJvB,SAKoCmQ,aAAKf,GAAQpP,GALjD,OAM8B,OAN9B,SAKkBoQ,EALlB,EAKYpX,KALZ,UAMoCmX,aAAM/B,GAAkBgC,GAN5D,QASI,OATJ,4BAMWlX,EANX,KAMmBqK,EANnB,KAOUnD,EACNlH,EAAOmX,MAAK,SAAClH,GAAD,OAAOiE,IAAgB7J,EAAQ,IAAM,IAAI4F,QAAQ,GARjE,UASU+G,aAAI,CACR/T,KnBf2B,oBmBgB3BC,QAAS,CACP4D,MACA9G,OAAQA,EACRqK,QAASA,EACTtK,aAAcsK,EACdpD,UAAWA,GAAUC,EAAUmD,GAC/B9F,QAAS,GACT2C,cAlBR,gCAsBI,OAtBJ,oCAsBU8P,aAAI,CAAE/T,KnB1BiB,oBmB0BgBmU,QAAS,KAAEA,UAtB5D,uDA0BA,SAAUN,KAAV,kEACE,OADF,SACQO,aAAI,CAACC,anBjCiB,iBmBiCkBT,MADhD,wCAIeC,UC1BTS,GAAiBC,eAGjBC,GAAQC,aAAYC,aAAgB,CACxC7X,KJCa,WAAmC,IAAlCqU,EAAiC,uDAAzBuB,GAAcqB,EAAW,uCAC/C,OAAQA,EAAO9T,MACb,IhBlBwB,egBmBtB,OAAO,2BACFyS,IADL,IAEExC,SAAS,IAEb,IhBrB6B,oBgBsB3B,OAAO,2BACFwC,IADL,IAEExC,SAAS,GACN6D,EAAO7T,SAEd,IhB1B6B,oBgB2B7B,OAAO,2BACFwS,IADL,IAEExC,SAAS,IAEX,IhB3B+B,sBgB4B7B,OAAO,2BACFiB,GADL,IAEEjN,SAAU6P,EAAO7T,QAAQgE,SACzBD,UAAWA,GAAU8P,EAAO7T,QAAQgE,SAAUiN,EAAMpU,cACpDwE,QAAS,KAEb,IhBjCuB,oBgBmCrB,IAAMqT,EACJzD,EAAM3P,cACN2P,EAAMnN,mBACN+P,EAAO7T,QAAQsB,eAAiB2P,EAAM3P,aACxC,OAAO,2BACF2P,GADL,IAEE3P,aAAcuS,EAAO7T,QAAQsB,aAC7BwC,kBAAmB+P,EAAO7T,QAAQ8D,kBAClCzC,QAASqT,EACL3C,GACEd,EAAM5P,QACNwS,EAAO7T,QAAQ8D,mBAEjB6N,GACEV,EAAMlN,UACN8P,EAAO7T,QAAQsB,aACfuS,EAAO7T,QAAQ8D,qBAGzB,IhBlDuB,cgBmDrB,IAAMsE,EAAqByL,EAAO7T,QAAQoI,mBACpCvL,EAAeyU,GAAWL,EAAM9J,QAASiB,GACzCuM,EAAe5Q,GAAUkN,EAAMjN,SAAUnH,GAC/C,OAAO,2BACFoU,GADL,IAEE7I,qBACAvL,eACAkH,UAAW4Q,EACXtT,QAASsQ,GACPgD,EACA1D,EAAM3P,aACN2P,EAAMnN,qBAGZ,IhBvEyB,gBgBwEvB,OAAO,2BACFmN,GADL,IAEE5P,QAASwS,EAAO7T,QAAQqB,UAE5B,QACE,OAAO4P,IInEX1P,QHgBa,WAAoC,IAAnC0P,EAAkC,uDAA1BwB,GAAeoB,EAAW,uCAChD,OAAQA,EAAO9T,MACb,IrBlCqB,YqBmCnB,OAAO,2BACFkR,GADL,IAEEvE,MAAOmH,EAAO7T,UAElB,IrBrC8B,qBqB6C9B,IrB9C8B,qBqB+C5B,OAAO,2BACFiR,GADL,IAEEnQ,UAAU,2BACLmQ,EAAMnQ,WACN+S,EAAO7T,WAGhB,IrBpDgC,uBqBqD9B,OAAO,2BACFiR,GADL,IAEEnQ,UAAU,2BACLmQ,EAAMnQ,WADF,IAEPR,MAAOuT,EAAO7T,QAAQM,UAG5B,IrB3DwB,eqB4DtB,OAAO,2BACF2Q,GADL,IAEEnQ,UAAU,2BACLmQ,EAAMnQ,WACN+S,EAAO7T,QAAQc,WAEpBD,OAAQ,CAAC,eACFoQ,EAAMpQ,OAAO,IADZ,aAGJ+T,WAAY,CACVhC,SAAS,EACT3L,OAAQ,iBAEP4M,EAAO7T,QAAQa,WAK1B,QACE,OAAOoQ,MGlET4D,aAAgBR,KAEpBA,GAAeS,IAAIlB,IAEnBmB,IAASC,OAEL,kBAAC,IAAD,CAAeT,MAAOA,IACpB,kBAAC,GAAD,OAGJU,SAASC,eAAe,SRsGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3N,QAAQ2N,MAAMA,EAAMxB,c","file":"static/js/main.e7c2362b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { useSelector } from 'react-redux';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n\nconst Grid = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const { filteredData,   titles} = useSelector(({ data }) => data);\n    const onGridReady = (params) => {\n      setGridApi(params.api);\n      setGridColumnApi(params.columnApi);\n      \n    }\n\n    const updateRows =() => {\n      if (gridApi) {\n\n        gridApi.sizeColumnsToFit();\n      }\n    }\n\n    return (\n        <div className=\"ag-theme-alpine\" style={ { height: 400, width: '100%', marginRight: '' } }>\n            <AgGridReact\n               defaultColDef={{ resizable: true }}\n               onGridReady={onGridReady}\n               onRowDataChanged={updateRows}\n                rowData={filteredData}>\n                  {titles.map(v  => \n                    <AgGridColumn key={v} field={v} sortable={true} skipHeaderOnAutoSize={true} suppressSizeToFit={false}></AgGridColumn>\n                  ) }\n                \n            </AgGridReact>\n        </div>\n    );\n};\n\nexport default Grid;","const DELEM = '|#|';\n\nexport const getQueryVariable = (variable) => {\n  const query = window.location.search.substring(1);\n  const vars = query.split('&');\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    if (decodeURIComponent(pair[0]) === variable) {\n      let val = decodeURIComponent(pair[1]);\n      if (val.includes(DELEM)) {\n        val = val.split(DELEM).map((v) => v.split(','))\n      }\n      return val\n    }\n  }\n};\n\nexport const updateQuery = (key, value) => {\n  if (Array.isArray(value)) {\n    value = value.join(DELEM);\n  }\n\n\n  const queryParams = new URLSearchParams(window.location.search);\n  queryParams.set(key, value);\n  window.history.replaceState(null, null, '?' + queryParams.toString());\n}","import { updateQuery } from '../../utils/queryUtils';\n\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_COLOR_AXIS_MIN = 'SET_COLOR_AXIS_MIN';\nexport const SET_COLOR_AXIS_MAX = 'SET_COLOR_AXIS_MAX';\nexport const SET_COLOR_AXIS_STOPS = 'SET_COLOR_AXIS_STOPS';\nexport const SET_MAP_DATA = 'SET_MAP_DATA';\nexport const setTitle = (text) => {\n  updateQuery('t', text)\n  return {\n    type: SET_TITLE,\n    payload: {\n      text,\n    },\n  };\n};\nexport const setColorAxisMin = (min) => {\n  updateQuery('mi', min)\n  return {\n    type: SET_COLOR_AXIS_MIN,\n    payload: {\n      min,\n    },\n  };\n};\nexport const setColorAxisMax = (max) => {\n  updateQuery('ma', max)\n  return {\n    type: SET_COLOR_AXIS_MAX,\n    payload: {\n      max,\n    },\n  };\n};\nexport const setColorAxisStops = (stops) => {\n  stops = stops.sort((a, b) => (+a[0] > +b[0]) ? 1 : -1)\n  updateQuery('st', stops)\n  return {\n    type: SET_COLOR_AXIS_STOPS,\n    payload: {\n      stops: [...stops],\n    },\n  };\n};\n\nexport const setMapData = (data = [], name = null) => {\n  const valArray = (data|| []).map((v) => v[1]);\n  return {\n    type: SET_MAP_DATA,\n    payload: {\n      series: {\n        data:[...data],\n        name,\n      },\n      colorAxis: {\n        min: Math.min(...valArray),\n        max: Math.max(...valArray),\n      },\n    },\n  };\n};\n","import React, { useEffect } from 'react';\nimport Highcharts from 'highcharts/highmaps';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from 'highcharts/modules/map';\nimport * as Actions from '../store/mapOptions/mapOptions.actions';\nimport proj4 from 'proj4';\nimport { useSelector, useDispatch } from 'react-redux';\n\nrequire('highcharts/modules/exporting')(Highcharts);\n\nhighchartsMap(Highcharts);\nif (typeof window !== 'undefined') {\n  window.proj4 = window.proj4 || proj4;\n}\n\nconst Chart = () => {\n  const { mapData, displayField } = useSelector(({ data }) => data);\n  const options  = useSelector(({ options }) => options);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (mapData.length !== 0) {\n      dispatch(Actions.setMapData(mapData, displayField));\n    } else {\n      dispatch(Actions.setMapData())\n    }\n  }, [mapData, displayField, dispatch]);\n\n  return (\n    <>\n      {options ? (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n          constructorType={'mapChart'}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../components/Chart';\n\nconst ChartSection = () => {\n  return (<div\n    style={{\n      width: '50%',\n      padding: '10px',\n      border: '1px solid #c4c4c4',\n    }}>\n    <div style={{ width: '600', height: '400px' }}>\n      <Chart />\n    </div>\n  </div>);\n};\n\n\n\nexport default ChartSection;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    // marginTop: theme.spacing(2),\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: '100%',\n  },\n}));\n\nexport default function DropDown({ values, onChange, label, value }) {\n  const classes = useStyles();\n  const [internalValue, setValue] = useState(value);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (internalValue !== value) {\n      setValue(value)\n    }\n  }, [value, internalValue])\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    onChange(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div style={{width: '100%'}}>\n      <FormControl className={classes.formControl} >\n        <InputLabel id='demo-controlled-open-select-label'>{label}</InputLabel>\n        <Select\n          labelId='demo-controlled-open-select-label'\n          id='demo-controlled-open-select'\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={internalValue}\n          style={{width: '100%'}}\n          onChange={handleChange}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          {values.map((v) => (\n            <MenuItem value={v} key={v}>{v}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import { updateQuery } from '../../utils/queryUtils';\n\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const LOAD_DATA_SAGA = 'LOAD_DATA_SAGA';\nexport const LOAD_DATA_SUCCESS = 'LOAD_DATA_SUCCESS';\nexport const LOAD_DATA_FAILURE = 'LOAD_DATA_FAILURE';\n\nexport const APPLY_FILTERS_SAGA = 'APPLY_FILTERS_SAGA';\nexport const APPLY_FILTERS = 'APPLY_FILTERS';\nexport const SET_STATE_AND_GROUP = 'SET_STATE_AND_GROUP';\nexport const SET_DISPLAY = 'SET_DISPLAY_FIELD';\nexport const SET_AGGREGATION_TYPE = 'SET_AGGREGATION_TYPE';\nexport const SET_DISPLAY_FN = 'SET_DISPLAY_FN';\nexport const ADD_FILTER_FN = 'ADD_FILTER_FN';\nexport const ADD_FILTERS = 'ADD_FILTERS';\n\nexport const loadData = (url) => ({\n  type: LOAD_DATA_SAGA,\n  payload: {\n    url,\n  },\n});\n\nexport const updateDisplay = (displayField, aggregationAction) => {\n  updateQuery('df', displayField)\n  updateQuery('a', aggregationAction)\n  return {\n    type: SET_DISPLAY,\n    payload: {\n      displayField,\n      aggregationAction,\n    },\n  };\n};\n\nexport const updateFilters = (filteringFuncitons) => {\n  updateQuery('f', filteringFuncitons)\n  return {\n    type: ADD_FILTERS,\n    payload: {\n      filteringFuncitons\n    },\n  };\n};\n\nexport const groupData = (stateKey) => {\n  updateQuery('s', stateKey)\n  return {\n    type: SET_STATE_AND_GROUP,\n    payload: {\n      stateKey,\n    },\n  };\n};\n","export default class Calculations {\n  constructor(arr, key) {\n    this.arr = arr;\n    this.key = key;\n    this.numberData = arr\n      .map((a) => parseFloat(a[this.key]))\n      .filter((a) => !isNaN(a));\n  }\n\n  average() {\n    if (this.countOfNumbers()) {\n      return this.sum() / this.countOfNumbers();\n    }\n  }\n\n  count() {\n    return this.arr.length;\n  }\n\n  countOfNumbers() {\n    return this.numberData.length;\n  }\n\n  max() {\n    if (this._max !== undefined) {\n      return this._max;\n    }\n    this._max = Math.max(...this.numberData);\n    return this._max;\n  }\n\n  min() {\n    if (this._min !== undefined) {\n      return this._min;\n    }\n    this._min = Math.min(...this.numberData);\n    return this._min;\n  }\n\n  sum() {\n    if (this._sum !== undefined) {\n      return this._sum;\n    }\n    this._sum = this.numberData.reduce((a, b) => a + b, 0);\n    return this._sum;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DropDown from './DropDown';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport Calculations from '../utils/Calculations';\nimport { startCase } from 'lodash';\nimport { getQueryVariable } from '../utils/queryUtils';\n\nconst aggerationOptions = Object.getOwnPropertyNames(Calculations.prototype)\n  .filter((k) => k !== 'constructor')\n  .map((s) => startCase(s));\n\nconst DataSelector = () => {\n  const { titles, stateKey, displayField, aggregationAction } = useSelector(\n    ({ data }) => data,\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const urlState = getQueryVariable('s');\n    const urlDisplayField = getQueryVariable('df');\n    const urlAggregationAction = getQueryVariable('a');\n    if (urlState !== stateKey) {\n      dispatch(Actions.groupData(stateKey));\n    }\n    if (\n      (urlDisplayField && urlDisplayField !== displayField) ||\n      (urlAggregationAction && urlAggregationAction !== aggregationAction)\n    ) {\n      dispatch(Actions.updateDisplay(urlDisplayField, urlAggregationAction));\n    }\n  }, [titles, stateKey, displayField, aggregationAction, dispatch]);\n\n  const onStateChange = (v) => {\n    dispatch(Actions.groupData(v));\n  };\n  const onDisplayFieldChange = (df) => {\n    dispatch(Actions.updateDisplay(df, aggregationAction));\n  };\n  const onAggregationActionChange = (a) => {\n    dispatch(Actions.updateDisplay(displayField, a));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flex: 1,\n      }}>\n      {titles?.length ? (\n        <div style={{ width: '30%' }}>\n          <DropDown\n            value={stateKey}\n            values={titles}\n            onChange={onStateChange}\n            label='State Field'\n          />\n        </div>\n      ) : null}\n      {stateKey ? (\n        <>\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={displayField}\n              values={titles}\n              onChange={onDisplayFieldChange}\n              label='Display Field'\n            />\n          </div>\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={aggregationAction}\n              values={aggerationOptions}\n              onChange={onAggregationActionChange}\n              label='Aggregation'\n            />\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DataSelector;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function DatePickers(props) {\n  const classes = useStyles();\n  return (\n    <div >\n      <TextField\n        labelid={'date-picker-' +props.label }\n        type=\"date\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        InputProps={{ inputProps: { ...props } }}\n        {...props}\n      />\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport min from 'date-fns/min';\nimport max from 'date-fns/max';\nimport format from 'date-fns/format';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport DropDown from './DropDown';\nimport DatePicker from './DatePicker';\nimport { getQueryVariable } from '../utils/queryUtils';\n\nconst filterDates = (field, start, end, item) => {\n  const date = new Date(item[field]);\n  if (isNaN(date.getTime())) {\n    return false;\n  }\n\n  return isWithinInterval(date, { start, end });\n};\n\nconst dateArr = (data, field) => {\n  return data.map((d) => new Date(d[field])).filter((v) => !isNaN(v.getTime()));\n};\n\nconst calcMin = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(min(arr));\n};\nconst calcMax = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(max(arr));\n};\n\nconst dateFormat = (date) => {\n  return format(date, 'yyyy-MM-dd');\n};\n\nconst DateFilter = () => {\n  const dispatch = useDispatch();\n  const { titles, rawData } = useSelector(({ data }) => data);\n  const [dateField, setDateField] = useState('');\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(()=> {\n    const [dFilter]  = (getQueryVariable('f')|| []);\n    if(dFilter) {\n      console.log(dFilter)\n      setDateField(dFilter[1]);\n      setStartDate(dFilter[2]);\n      setEndDate(dFilter[3]); \n    }\n    \n  }, [titles])\n\n\n  if (!titles?.length) {\n    return null;\n  }\n\n  const onDateFieldChange = (v) => {\n    try {\n      const minDateValue = calcMin(rawData, v);\n      const maxDateValue = calcMax(rawData, v);\n      setDateField(v);\n      setMinDate(minDateValue);\n      setStartDate(minDateValue);\n      setMaxDate(maxDateValue);\n      setEndDate(maxDateValue);\n      updateFilter(v, minDateValue, maxDateValue);\n    } catch (e) {\n      setDateField('');\n      setMinDate('');\n      setStartDate('');\n      setMaxDate('');\n      setEndDate('');\n    }\n  };\n\n  const onStartDateChange = (e) => {\n    const date = e.target.value;\n    setStartDate(date);\n    updateFilter(dateField, date, endDate);\n  };\n\n  const onEndDateChange = (e) => {\n    const date = e.target.value;\n    setEndDate(date);\n    updateFilter(dateField, startDate, date);\n  };\n\n  const updateFilter = (field, minVal, maxVal) => {\n    const f = ['dateBetween', field, minVal, maxVal];\n    dispatch(Actions.updateFilters([f]));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <div style={{ width: '45%', alignSelf: 'center' }}>\n        <DropDown\n          value={dateField}\n          values={titles}\n          onChange={onDateFieldChange}\n          label='Date Field'\n        />\n      </div>\n      {dateField ? (\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          <DatePicker\n            label='From'\n            min={minDate}\n            max={endDate}\n            value={startDate}\n            onChange={onStartDateChange}\n          />\n          <DatePicker\n            label='To'\n            min={startDate}\n            max={maxDate}\n            value={endDate}\n            onChange={onEndDateChange}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DateFilter;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function BasicTextFields(props) {\n  return (\n    <TextField id=\"standard-basic\" style={{width: '100%', paddingBottom: '10px'}} {...props} />\n    \n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport BasicTextFields from './BasicTextFields';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport { getQueryVariable } from '../utils/queryUtils';\n\n//'http://d14wlfuexuxgcm.cloudfront.net/covid/rt.csv'\nconst UrlSelector = () => {\n  const dispatch = useDispatch();\n  const loadedURL = useSelector(({ data }) => data?.url);\n  const [internalUrl, setInternalUrl] = useState(loadedURL);\n\n  useEffect(() => {\n    const queryURL = getQueryVariable('url');\n    if (queryURL) {\n      dispatch(Actions.loadData(queryURL));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    setInternalUrl(loadedURL);\n  }, [loadedURL]);\n\n  const setURL = (newUrl) => {\n    if (newUrl === loadedURL) {\n      return;\n    }\n    dispatch(Actions.loadData(newUrl));\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <BasicTextFields\n        label='Url for a CSV'\n        value={internalUrl}\n        onChange={(e) => setInternalUrl(e.target.value)}\n        onBlur={(e) => setURL(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default UrlSelector;\n","import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_F2 = 113;\nconst KEY_ENTER = 13;\nconst KEY_TAB = 9;\n\nconst isLeftOrRight = (event) => {\n  return [37, 39].indexOf(event.keyCode) > -1;\n};\n\nconst getCharCodeFromEvent = (event) => {\n  event = event || window.event;\n  return typeof event.which === 'undefined' ? event.keyCode : event.which;\n};\n\nconst isCharNumeric = (charStr) => {\n  return !!/[0-9]*\\.?[0-9]+/.test(charStr);\n};\n\nconst isKeyPressedNumeric = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  const charStr = event.key ? event.key : String.fromCharCode(charCode);\n  const newVal = event.target.value + charStr;\n  return isCharNumeric(newVal);\n};\n\nconst deleteOrBackspace = (event) => {\n  return [KEY_DELETE, KEY_BACKSPACE].indexOf(event.keyCode) > -1;\n};\n\nconst finishedEditingPressed = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  return charCode === KEY_ENTER || charCode === KEY_TAB;\n};\nconst onKeyDown = (event) => {\n  if (isLeftOrRight(event) || deleteOrBackspace(event)) {\n    event.stopPropagation();\n    return;\n  }\n\n  if (!finishedEditingPressed(event) && !isKeyPressedNumeric(event)) {\n    if (event.preventDefault) event.preventDefault();\n  }\n};\n\nconst NumericEditor = forwardRef((props, ref) => {\n  const createInitialState = () => {\n    let startValue;\n    let highlightAllOnFocus = true;\n\n    if (props.keyPress === KEY_BACKSPACE || props.keyPress === KEY_DELETE) {\n      // if backspace or delete pressed, we clear the cell\n      startValue = '';\n    } else if (props.charPress) {\n      // if a letter was pressed, we start with the letter\n      startValue = props.charPress;\n      highlightAllOnFocus = false;\n    } else {\n      // otherwise we start with the current value\n      startValue = props.value;\n      if (props.keyPress === KEY_F2) {\n        highlightAllOnFocus = false;\n      }\n    }\n\n    return {\n      value: startValue,\n      highlightAllOnFocus,\n    };\n  };\n\n  const initialState = createInitialState();\n\n  const [value, setValue] = useState(initialState.value);\n  const [highlightAllOnFocus, setHighlightAllOnFocus] = useState(\n    initialState.highlightAllOnFocus,\n  );\n  const refInput = useRef(null);\n  const cancelBeforeStart =\n    props.charPress && '1234567890.'.indexOf(props.charPress) < 0;\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      afterGuiAttached() {\n        // get ref from React component\n        const eInput = refInput.current;\n        eInput.focus();\n        if (highlightAllOnFocus) {\n          eInput.select();\n\n          setHighlightAllOnFocus(false);\n        } else {\n          // when we started editing, we want the carot at the end, not the start.\n          // comes into play in two scenarios: a) when user hits F2 and b)\n          // when user hits a printable charac ter, then on IE (and only IE) the carot\n          // was placed after the first character, thus 'apply' would end up as 'pplea'\n          const length = eInput.value ? eInput.value.length : 0;\n          if (length > 0) {\n            eInput.setSelectionRange(length, length);\n          }\n        }\n      },\n\n      getValue() {\n        return value;\n      },\n\n      isCancelBeforeStart() {\n        return cancelBeforeStart;\n      },\n\n      // will reject the number if it greater than 1,000,000\n      // not very practical, but demonstrates the method.\n      isCancelAfterEnd() {\n        return value > 1000000;\n      },\n    };\n  });\n\n  return (\n    <input\n      ref={refInput}\n      value={value}\n      onChange={(event) => setValue(event.target.value)}\n      style={{ width: '95%' }}\n    />\n  );\n});\n\nexport default NumericEditor;\n","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { SketchPicker } from 'react-color'\n\nimport './ColorEditor.css';\nconst ColorEditor = forwardRef((props, ref) => {\n  const [value, setValue] = useState(props.value);\n  const refInput = useRef(null);\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      getValue() {\n        return value;\n      },\n      isPopup() {\n        return true;\n      },\n    };\n  });\n\n  return (\n    <div ref={refInput} style={{ padding: '10px' }}>\n      <SketchPicker\n        color={value}\n        onChangeComplete={({hex}) => {\n          if (hex) {\n            setValue(hex);\n          }\n        }}\n      />\n    </div>\n  );\n});\n\nexport default ColorEditor;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport BasicTextField from './BasicTextFields';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport NumericEditor from './NumericEditor';\nimport ColorEditor from './ColorEditor';\nimport * as Actions from '../store/mapOptions/mapOptions.actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { getQueryVariable } from '../utils/queryUtils';\n\nfunction stopObjToArr({ stop, color }) {\n  return [stop, color];\n}\n\nconst ChartSettings = () => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const dispatch = useDispatch();\n  const loadedURL = useSelector(({ data }) => data?.url);\n  const chartTitle = useSelector(({ options }) => options.title.text);\n  const min = useSelector(({ options }) => options.colorAxis.min);\n  const max = useSelector(({ options }) => options.colorAxis.max);\n  const stopData = useSelector(({ options }) =>\n    options.colorAxis.stops.map(([stop, color], i) => ({\n      stop,\n      color,\n      _id: i + stop + color,\n    })),\n  );\n\n  useEffect(() => {\n    const mi = getQueryVariable('mi');\n    if (mi && mi !== min && loadedURL) {\n      dispatch(Actions.setColorAxisMin(mi));\n    }\n  }, [min, loadedURL, dispatch]);\n  useEffect(() => {\n    const ma = getQueryVariable('ma');\n    if (ma && ma !== max && loadedURL) {\n      dispatch(Actions.setColorAxisMax(ma));\n    }\n  }, [max, loadedURL, dispatch]);\n  useEffect(() => {\n    const t = getQueryVariable('t');\n    if (t && t !== chartTitle && loadedURL) {\n      dispatch(Actions.setTitle(t));\n    }\n  }, [chartTitle, loadedURL, dispatch]);\n  useEffect(() => {\n    const s = getQueryVariable('st');\n    const st = stopData.map(stopObjToArr);\n    if (s && s.toString() !== st.toString() && loadedURL) {\n      dispatch(Actions.setColorAxisStops(s));\n    }\n  }, [stopData, loadedURL, dispatch]);\n\n\n\n  function onGridReady(params) {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  }\n\n  const onCellValueChanged = (prams) => {\n    const cloneStopData = stopData.map((e) => ({ ...e }));\n    cloneStopData[prams.rowIndex] = { ...prams.data };\n    const data = cloneStopData.map(stopObjToArr);\n    dispatch(Actions.setColorAxisStops(data));\n  };\n\n  const addStop = () => {\n    const data = [...stopData.map(stopObjToArr), [0, '#000']];\n    dispatch(Actions.setColorAxisStops(data));\n  };\n  const deleteRow = (rowData) => {\n    let rd = [];\n    rowData.api.applyTransaction({ remove: [rowData.data] })\n    rowData.api.forEachNode(node => rd.push(node.data));\n    const data = rd.map(stopObjToArr);\n    dispatch(Actions.setColorAxisStops(data));\n  };\n\n  const setTitleHandle = (v) => {\n    dispatch(Actions.setTitle(v));\n  };\n\n  const setMinHandle = (v) => {\n    dispatch(Actions.setColorAxisMin(v));\n  };\n\n  const setMaxHandle = (v) => {\n    dispatch(Actions.setColorAxisMax(v));\n  };\n\n  const DeleteButton = () => {\n    return (\n      <Button style={{ width: '100%' }} >\n        Delete\n      </Button>\n    );\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n      <BasicTextField\n        label='title'\n        value={chartTitle}\n        onChange={(e) => setTitleHandle(e.target.value)}\n      />\n      <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n        <BasicTextField\n          label='Color Axis Min'\n          value={min}\n          onChange={(e) => setMinHandle(e.target.value)}\n        />\n        <BasicTextField\n          label='Color Axis Max'\n          value={max}\n          onChange={(e) => setMaxHandle(e.target.value)}\n        />\n        <Button style={{ width: '33%' }} onClick={addStop}>\n          Add stop\n        </Button>\n      </div>\n      <div style={{ width: '100%' }}>\n        <div className='ag-theme-alpine' style={{ height: 300, width: '100%' }}>\n          <AgGridReact\n            defaultColDef={{\n              flex: 1,\n              minWidth: 100,\n              filter: true,\n              editable: true,\n            }}\n            onGridReady={onGridReady}\n            modules={[ClientSideRowModelModule]}\n            onCellValueChanged={onCellValueChanged}\n            singleClickEdit={true}\n            frameworkComponents={{\n              numericEditor: NumericEditor,\n              colorEditor: ColorEditor,\n              deleteButton: DeleteButton,\n            }}\n            immutableData\n            getRowNodeId={(data) => data._id}\n            rowData={stopData}>\n            <AgGridColumn\n              field='stop'\n              sortable={true}\n              editable={true}\n              cellEditor='numericEditor'></AgGridColumn>\n            <AgGridColumn\n              flex={2}\n              field='color'\n              editable={true}\n              cellEditor='colorEditor'\n              cellStyle={(prams) => {\n                return {\n                  backgroundColor: prams?.value,\n                  color: 'white',\n                  textShadow:\n                    '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\n                  letterSpacing: '2px',\n                };\n              }}></AgGridColumn>\n            <AgGridColumn\n              headerName='Delete'\n              cellRenderer='deleteButton'\n              onCellClicked={deleteRow}\n              editable={false}></AgGridColumn>\n          </AgGridReact>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartSettings;\n","import React from 'react';\nimport DataSelector from '../components/DataSelector';\nimport DateFilter from '../components/DateFilter';\nimport UrlSelector from '../components/UrlSelector';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ChartSettings from '../components/ChartSettings';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst DataSourceAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\n        <Typography className={classes.heading}>Data Source</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <UrlSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst ChartSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel4a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>Chart Settings</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <ChartSettings />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst FiltersAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel2a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>Filters</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <DateFilter />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst AggregationSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel3a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>\n          Aggregation Settings\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <DataSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nconst SettingSection = () => {\n  const { loading, titles } = useSelector(({ data }) => data);\n\n  console.log(titles.length)\n  return (\n    <div\n      style={{\n        width: '50%',\n        padding: '10px',\n        border: '1px solid #c4c4c4',\n        overflow: 'scroll',\n      }}>\n      <DataSourceAccordion />\n      {loading ? 'loading' : null}\n      {!loading && titles.length ? <ChartSettingsAccordion /> : null}\n      {titles.length ? (\n        <>\n          <FiltersAccordion />\n          <AggregationSettingsAccordion />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SettingSection;\n","import React from 'react';\nimport Grid from './components/Grid';\nimport ChartSection from './sections/ChartSection';\nimport SettingSection from './sections/SettingSection';\n\nconst App = () => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div style={{textAlign: 'center'}}> \n      <h1>US State Data Mapping Tool</h1>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          padding: '10px',\n          justifyContent: 'space-between',\n          height: '422px'\n        }}>\n        <SettingSection />\n        <ChartSection />\n      </div>\n      <div style={{ flex: 1, padding: '10px' }}>\n        <Grid />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default{\n'al':'al',\n'ak':'ak',\n'az':'az',\n'ar':'ar',\n'ca':'ca',\n'co':'co',\n'ct':'ct',\n'de':'de',\n'fl':'fl',\n'ga':'ga',\n'hi':'hi',\n'id':'id',\n'il':'il',\n'in':'in',\n'ia':'ia',\n'ks':'ks',\n'ky':'ky',\n'la':'la',\n'me':'me',\n'md':'md',\n'ma':'ma',\n'mi':'mi',\n'mn':'mn',\n'ms':'ms',\n'mo':'mo',\n'mt':'mt',\n'ne':'ne',\n'nv':'nv',\n'nh':'nh',\n'nj':'nj',\n'nm':'nm',\n'ny':'ny',\n'nc':'nc',\n'nd':'nd',\n'oh':'oh',\n'ok':'ok',\n'or':'or',\n'pa':'pa',\n'ri':'ri',\n'sc':'sc',\n'sd':'sd',\n'tn':'tn',\n'tx':'tx',\n'ut':'ut',\n'vt':'vt',\n'va':'va',\n'wa':'wa',\n'wv':'wv',\n'wi':'wi',\n'wy':'wy',\n'alabama':'al',\n'alaska':'ak',\n'arizona':'az',\n'arkansas':'ar',\n'california':'ca',\n'colorado':'co',\n'connecticut':'ct',\n'delaware':'de',\n'florida':'fl',\n'georgia':'ga',\n'hawaii':'hi',\n'idaho':'id',\n'illinois':'il',\n'indiana':'in',\n'iowa':'ia',\n'kansas':'ks',\n'kentucky':'ky',\n'louisiana':'la',\n'maine':'me',\n'maryland':'md',\n'massachusetts':'ma',\n'michigan':'mi',\n'minnesota':'mn',\n'mississippi':'ms',\n'missouri':'mo',\n'montana':'mt',\n'nebraska':'ne',\n'nevada':'nv',\n'newhampshire':'nh',\n'newjersey':'nj',\n'newmexico':'nm',\n'newyork':'ny',\n'northcarolina':'nc',\n'northdakota':'nd',\n'ohio':'oh',\n'oklahoma':'ok',\n'oregon':'or',\n'pennsylvania':'pa',\n'rhodeisland':'ri',\n'southcarolina':'sc',\n'southdakota':'sd',\n'tennessee':'tn',\n'texas':'tx',\n'utah':'ut',\n'vermont':'vt',\n'virginia':'va',\n'washington':'wa',\n'westvirginia':'wv',\n'wisconsin':'wi',\n'wyoming':'wy',\n'ala':'al',\n'ariz':'az',\n'ark':'ar',\n'calif':'ca',\n'colo':'co',\n'conn':'ct',\n'del':'de',\n'fla':'fl',\n'ill':'il',\n'ind':'in',\n'kans':'ks',\n'mass':'ma',\n'mich':'mi',\n'minn':'mn',\n'miss':'ms',\n'mont':'mt',\n'neb':'ne',\n'nebr':'ne',\n'nev':'nv',\n'nmex':'nm',\n'ndak':'nd',\n'okla':'ok',\n'ore':'or',\n'oreg':'or',\n'sdak':'sd',\n'tenn':'tn',\n'tex':'tx',\n'wash':'wa',\n'wva':'wv',\n'wis':'wi',\n'wisc':'wi',\n'wyo':'wy',\n};\n","import isWithinInterval from 'date-fns/isWithinInterval';\n\nconst filterObject = {\n  'dateBetween': (field, start, end) => {\n    start = new Date(start);\n    end = new Date(end);\n    return (item) => {\n    const date = new Date(item[field]);\n    if (isNaN(date.getTime())) {\n      return false;\n    }\n    return isWithinInterval(date, { start, end });\n  }}\n\n}\n\n\n// const defaultFilter = () => () => true;\n\nexport const makeFitler = (name, ...props) => {\n  const fnMaker = filterObject[name];\n  if (fnMaker) {\n    return fnMaker(...props);\n  }\n  return null\n\n}","import stateMap from '../../constants/stateMap';\nimport Calculations from '../../utils/Calculations';\nimport { camelCase } from 'lodash';\nimport { makeFitler } from '../../utils/Filters';\n\nexport const groupData = (stateKey, data) => {\n  if (!stateKey) {\n    return [];\n  }\n  const obj = data.reduce((acc, item) => {\n    if (!item[stateKey]) {\n      return acc;\n    }\n    const key = normalizeState(item[stateKey]);\n    if (!key) {\n      return acc;\n    }\n    if (!acc[key]) {\n      acc[key] = [key, []];\n    }\n    acc[key][1].push(item);\n    return acc;\n  }, {});\n  return Object.values(obj);\n};\n\nexport const normalizeState = (state) => {\n  if (typeof state !== 'string') {\n    return null;\n  }\n  const cleanState = stateMap[state.toLowerCase().replace(/[^a-z]/gim, '')];\n  if (cleanState) {\n    return 'us-' + cleanState;\n  }\n  return null;\n};\nexport const filterData = (rawData, filterData) => {\n  if (filterData.length === 0) {\n    return rawData;\n  }\n  console.log(filterData)\n  const filters = filterData.map((fd) => makeFitler(...fd)).filter(Boolean)\n  console.log(filters)\n  return rawData.filter((value) => filters.every((fn) => fn(value)));\n};\n\nexport const processToDisplay = (\n  groupedData,\n  displayField,\n  aggregationAction,\n) => {\n  if (!aggregationAction || !displayField) {\n    return [];\n  }\n\n  aggregationAction = camelCase(aggregationAction);\n  return groupedData.map(([key, arr]) => {\n    const calc = new Calculations(arr, displayField);\n    const displayVal = calc[aggregationAction]();\n    return [key, displayVal, calc];\n  });\n};\n\nexport const updateAggregationAction = (mapData, aggregationAction) => {\n  if (!aggregationAction || !Array.isArray(mapData)) {\n    return [];\n  }\n\n  aggregationAction = camelCase(aggregationAction);\n  return mapData.map(([key, df, calc]) => {\n    const displayVal = calc[aggregationAction]();\n    return [key, displayVal, calc];\n  });\n};\n\nexport const convertCSVToJSON = (str = '', delimiter = ',') => {\n  const titles = str.slice(0, str.indexOf('\\n')).split(delimiter);\n  const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n  return [\n    titles,\n    rows.map((row) => {\n      const values = row.split(delimiter);\n      return titles.reduce((object, curr, i) => {\n        object[curr] = values[i];\n        return object;\n      }, {});\n    }),\n  ];\n};\n","import * as Actions from './csvData.actions';\nimport { filterData, groupData, processToDisplay, updateAggregationAction } from './csvDataTools';\n\n\nconst inital_state = {\n  url: '',\n  titles: [], // list of keys that can be selected\n  rawData: [], // the parsed CSV file\n  filteredData: [], // any filters run on the data (using filter funciton) also showen in table//\n  stateKey: '',\n  groupData: [],\n  displayField: '',\n  aggregationAction: '',\n  filteringFuncitons: [],\n  mapData: [], //data grouped and agrated \n  loading: false,\n};\n\nexport default (state = inital_state, action) => {\n  switch (action.type) {\n    case Actions.REQUEST_DATA:\n      return {\n        ...inital_state,\n        loading: true,\n      };\n    case Actions.LOAD_DATA_SUCCESS:\n      return {\n        ...inital_state,\n        loading: false,\n        ...action.payload\n      };\n    case Actions.LOAD_DATA_FAILURE: \n    return {\n      ...inital_state,\n      loading: false\n    };\n    case Actions.SET_STATE_AND_GROUP:\n      return {\n        ...state,\n        stateKey: action.payload.stateKey,\n        groupData: groupData(action.payload.stateKey, state.filteredData),\n        mapData: [],\n      };\n    case Actions.SET_DISPLAY:\n      //updateAaggregationAction\n      const aggerationOnly =\n        state.displayField &&\n        state.aggregationAction &&\n        action.payload.displayField === state.displayField;\n      return {\n        ...state,\n        displayField: action.payload.displayField,\n        aggregationAction: action.payload.aggregationAction,\n        mapData: aggerationOnly\n          ? updateAggregationAction(\n              state.mapData,\n              action.payload.aggregationAction,\n            )\n          : processToDisplay(\n              state.groupData,\n              action.payload.displayField,\n              action.payload.aggregationAction,\n            ),\n      };\n    case Actions.ADD_FILTERS:\n      const filteringFuncitons = action.payload.filteringFuncitons;\n      const filteredData = filterData(state.rawData, filteringFuncitons);\n      const newGroupData = groupData(state.stateKey, filteredData);\n      return {\n        ...state,\n        filteringFuncitons,\n        filteredData,\n        groupData: newGroupData,\n        mapData: processToDisplay(\n          newGroupData,\n          state.displayField,\n          state.aggregationAction,\n        ),\n      };\n    case Actions.APPLY_FILTERS:\n      return {\n        ...state,\n        mapData: action.payload.mapData,\n      };\n    default:\n      return state;\n  }\n};\n\n\n","import * as Actions from './mapOptions.actions';\n\nimport mapData from '@highcharts/map-collection/countries/us/us-all.geo.json';\nconst initial_state = {\n  chart: {\n    map: mapData,\n  },\n  title: {\n    text: '',\n  },\n  mapNavigation: {\n    enabled: true,\n  },\n  colorAxis: {\n    min: 0,\n    max: 1,\n    stops: [\n      [0, '#00FF00'],\n      [0.5, '#FFF'],\n      [1, '#C40401'],\n    ],\n  },\n  series: [\n    {\n      name: 'Separators',\n      type: 'mapline',\n      color: 'silver',\n      nullColor: 'silver',\n      showInLegend: false,\n      enableMouseTracking: false,\n    },\n  ],\n};\n\nexport default (state = initial_state, action) => {\n  switch (action.type) {\n    case Actions.SET_TITLE:\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case Actions.SET_COLOR_AXIS_MAX:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_COLOR_AXIS_MIN:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_COLOR_AXIS_STOPS:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          stops: action.payload.stops,\n        },\n      };\n    case Actions.SET_MAP_DATA:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload.colorAxis,\n        },\n        series: [\n          { ...state.series[0] },\n          {\n            dataLabels: {\n              enabled: true,\n              format: '{point.name}',\n            },\n            ...action.payload.series,\n          },\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\n\nexport const getCSV = (url) => {\n  const validURL = isValidHttpUrl(url);\n  if (!validURL) {\n    return Promise.reject('invalid url');\n  }\n  return axios.get(\n     `https://map-dashboard-cors.herokuapp.com/${url}`,\n    //  `http://localhost:8080/${url}`,\n    {\n      headers: {'Access-Control-Allow-Origin': '*', \"Access-Control-Allow-Headers\":\"Access-Control-Allow-Headers\"}\n    },\n  );\n};\n\n\nfunction isValidHttpUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;  \n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}","import { getCSV } from '../../api/api';\nimport { call, put, takeLatest,all } from 'redux-saga/effects';\nimport * as Actions from './csvData.actions';\nimport { groupData, normalizeState, convertCSVToJSON } from './csvDataTools';\nimport { updateQuery } from '../../utils/queryUtils';\n\n\n\n\nfunction* fetchUser(action) {\n  try {\n    yield put({ type: Actions.REQUEST_DATA });\n    const url = action.payload.url;\n    updateQuery('url', url)\n    const { data: apiData } = yield call(getCSV, url);\n    const [titles, rawData] = yield call (convertCSVToJSON, apiData);\n    const stateKey =\n    titles.find((t) => normalizeState((rawData[0] || {})[t])) || '';\n    yield put({\n      type: Actions.LOAD_DATA_SUCCESS,\n      payload: {\n        url,\n        titles: titles,\n        rawData: rawData,\n        filteredData: rawData,\n        groupData: groupData(stateKey, rawData),\n        mapData: [],\n        stateKey,\n      },\n    });\n  } catch (e) {\n    yield put({ type: Actions.LOAD_DATA_FAILURE, message: e.message });\n  }\n}\n\nfunction* mySaga() {\n  yield all([takeLatest(Actions.LOAD_DATA_SAGA, fetchUser)]);\n}\n\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport csvDataReducer from './store/csvData/csvData.reducer';\nimport mapOptions from './store/mapOptions/mapOptions.reducer';\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from './store/csvData/sagas';\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(combineReducers({\n  data: csvDataReducer,\n  options: mapOptions,\n}), applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}