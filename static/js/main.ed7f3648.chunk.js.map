{"version":3,"sources":["components/Grid.js","utils/queryUtils.js","store/mapOptions/mapOptions.actions.js","components/Chart.js","sections/ChartSection.js","components/common/DropDown.js","store/csvData/csvData.actions.js","utils/Calculations.js","components/DataSelector.js","components/common/DatePicker.js","components/fitlers/DateFilter.js","components/common/BasicTextFields.js","components/fitlers/SingleValue.js","components/fitlers/FilterItem.js","components/fitlers/FilterList.js","components/UrlSelector.js","components/cellEditors/NumericEditor.js","components/cellEditors/ColorEditor.js","components/chartSettings/useChartSettings.js","components/chartSettings/ChartSettings.js","sections/SettingSection.js","App.js","serviceWorker.js","constants/stateMap.js","utils/Filters.js","store/csvData/csvDataTools.js","store/csvData/csvData.reducer.js","store/mapOptions/mapOptions.reducer.js","api/api.js","store/csvData/sagas.js","index.js"],"names":["Grid","useState","gridApi","setGridApi","useSelector","data","filteredData","titles","className","style","height","width","marginRight","defaultColDef","resizable","onGridReady","params","api","onRowDataChanged","sizeColumnsToFit","rowData","map","v","key","field","sortable","skipHeaderOnAutoSize","suppressSizeToFit","getQueryVariable","variable","vars","window","location","search","substring","split","i","length","pair","decodeURIComponent","val","includes","updateQuery","value","Array","isArray","join","queryParams","URLSearchParams","set","history","replaceState","toString","setTitle","text","type","payload","setColorAxisMin","min","setColorAxisMax","max","setColorAxisStops","stops","sort","a","b","setMapData","name","valArray","series","colorAxis","Math","require","Highcharts","highchartsMap","proj4","Chart","mapData","displayField","options","dispatch","useDispatch","useEffect","Actions","highcharts","constructorType","ChartSection","padding","border","useStyles","makeStyles","theme","button","display","formControl","minWidth","DropDown","values","onChange","label","classes","internalValue","setValue","open","setOpen","FormControl","InputLabel","id","Select","labelId","onClose","onOpen","event","target","MenuItem","startCase","loadData","url","updateDisplay","aggregationAction","updateFilters","filteringFuncitons","groupData","stateKey","Calculations","arr","this","numberData","parseFloat","filter","isNaN","countOfNumbers","sum","undefined","_max","_min","_sum","reduce","aggerationOptions","Object","getOwnPropertyNames","prototype","k","s","DataSelector","urlState","urlDisplayField","urlAggregationAction","flexDirection","justifyContent","flex","df","container","flexWrap","textField","marginLeft","spacing","DatePickers","props","TextField","labelid","InputLabelProps","shrink","InputProps","inputProps","dateArr","d","Date","getTime","dateFormat","date","format","DateFilter","dataField","filterValues","startDate","endDate","onDataFieldChange","onFilterValueChange","rawData","minDate","setMinDate","maxDate","setMaxDate","updateFilter","useCallback","minVal","maxVal","minDateValue","calcMin","maxDateValue","calcMax","e","defaultProps","BasicTextFields","paddingBottom","SingleValue","internalUrl","setInternalUrl","console","log","onBlur","newValue","filterOptions","FilterItem","filterSettings","onFilterChange","onDelete","filterType","setFilterType","setDataField","setFilterValues","iFilterType","iDataFilter","iFieldValues","alignContent","flexGrow","margin","displayfilterOptions","Button","onClick","marginBottom","FilterList","internalFilters","setInternalFilters","dispach","urlFilters","alignSelf","c","index","f","cf","filterChangeHandler","splice","UrlSelector","loadedURL","queryURL","newUrl","KEY_BACKSPACE","KEY_DELETE","getCharCodeFromEvent","which","keyCode","onKeyDown","indexOf","isLeftOrRight","deleteOrBackspace","stopPropagation","charCode","finishedEditingPressed","charStr","String","fromCharCode","test","isCharNumeric","isKeyPressedNumeric","preventDefault","NumericEditor","forwardRef","ref","initialState","startValue","highlightAllOnFocus","keyPress","charPress","createInitialState","setHighlightAllOnFocus","refInput","useRef","cancelBeforeStart","addEventListener","removeEventListener","useImperativeHandle","afterGuiAttached","eInput","current","focus","select","setSelectionRange","getValue","isCancelBeforeStart","isCancelAfterEnd","ColorEditor","isPopup","color","onChangeComplete","hex","stopObjToArr","stop","getTableData","rd","forEachNode","node","push","ChartSettings","chartTitle","title","stopData","_id","applyTransaction","remove","useChartSettings","onCellValueChanged","addStop","deleteRow","setTitleHandle","setMinHandle","setMaxHandle","mi","ma","t","st","editable","singleClickEdit","frameworkComponents","numericEditor","colorEditor","deleteButton","immutableData","getRowNodeId","cellEditor","cellStyle","prams","backgroundColor","textShadow","letterSpacing","headerName","cellRenderer","onCellClicked","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","DataSourceAccordion","Accordion","AccordionSummary","aria-controls","Typography","AccordionDetails","ChartSettingsAccordion","FiltersAccordion","defaultExpanded","AggregationSettingsAccordion","SettingSection","loading","overflow","App","textAlign","Boolean","hostname","match","determinType","memoize","numberValue","dateValue","valueOf","baseCompare","numCompare","dateCompare","defaultCompare","item","userValue","iv","parseData","filterObject","dateBetween","isWithinInterval","start","end","equals","isSameDay","greater","isAfter","less","isBefore","makeFitler","fnMaker","obj","acc","normalizeState","state","cleanState","stateMap","toLowerCase","replace","filterData","filters","fd","every","fn","processToDisplay","groupedData","camelCase","calc","updateAggregationAction","convertCSVToJSON","str","delimiter","slice","rows","row","object","curr","inital_state","initial_state","chart","mapNavigation","enabled","nullColor","showInLegend","enableMouseTracking","getCSV","string","URL","_","protocol","isValidHttpUrl","axios","get","headers","Promise","reject","fetchUser","mySaga","action","put","call","apiData","find","message","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","aggerationOnly","newGroupData","dataLabels","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ed7f3648.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { useSelector } from 'react-redux';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n\nconst Grid = () => {\n    const [gridApi, setGridApi] = useState(null);\n    // const [gridColumnApi, setGridColumnApi] = useState(null);\n    const { filteredData,   titles} = useSelector(({ data }) => data);\n    const onGridReady = (params) => {\n      setGridApi(params.api);\n      // setGridColumnApi(params.columnApi);\n      \n    }\n\n    const updateRows =() => {\n      if (gridApi) {\n        gridApi.sizeColumnsToFit();\n      }\n    }\n\n    return (\n        <div className=\"ag-theme-alpine\" style={ { height: 400, width: '100%', marginRight: '' } }>\n            <AgGridReact\n               defaultColDef={{ resizable: true }}\n               onGridReady={onGridReady}\n               onRowDataChanged={updateRows}\n                rowData={filteredData}>\n                  {titles.map(v  => \n                    <AgGridColumn key={v} field={v} sortable={true} skipHeaderOnAutoSize={true} suppressSizeToFit={false}></AgGridColumn>\n                  ) }\n                \n            </AgGridReact>\n        </div>\n    );\n};\n\nexport default Grid;","const DELEM = '|#|';\n\nexport const getQueryVariable = (variable) => {\n  const query = window.location.search.substring(1);\n  const vars = query.split('&');\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    if (decodeURIComponent(pair[0]) === variable) {\n      let val = decodeURIComponent(pair[1]);\n      if (val.includes(DELEM) || val.includes(',')) {\n        val = val.split(DELEM).map((v) => v.split(','))\n      }\n      return val\n    }\n  }\n};\n\nexport const updateQuery = (key, value) => {\n  if (Array.isArray(value)) {\n    value = value.join(DELEM);\n  }\n\n\n  const queryParams = new URLSearchParams(window.location.search);\n  queryParams.set(key, value);\n  window.history.replaceState(null, null, '?' + queryParams.toString());\n}","import { updateQuery } from '../../utils/queryUtils';\n\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_COLOR_AXIS_MIN = 'SET_COLOR_AXIS_MIN';\nexport const SET_COLOR_AXIS_MAX = 'SET_COLOR_AXIS_MAX';\nexport const SET_COLOR_AXIS_STOPS = 'SET_COLOR_AXIS_STOPS';\nexport const SET_MAP_DATA = 'SET_MAP_DATA';\nexport const setTitle = (text) => {\n  updateQuery('t', text)\n  return {\n    type: SET_TITLE,\n    payload: {\n      text,\n    },\n  };\n};\nexport const setColorAxisMin = (min) => {\n  updateQuery('mi', min)\n  return {\n    type: SET_COLOR_AXIS_MIN,\n    payload: {\n      min,\n    },\n  };\n};\nexport const setColorAxisMax = (max) => {\n  updateQuery('ma', max)\n  return {\n    type: SET_COLOR_AXIS_MAX,\n    payload: {\n      max,\n    },\n  };\n};\nexport const setColorAxisStops = (stops) => {\n  stops = stops.sort((a, b) => (+a[0] > +b[0]) ? 1 : -1)\n  updateQuery('st', stops)\n  return {\n    type: SET_COLOR_AXIS_STOPS,\n    payload: {\n      stops: [...stops],\n    },\n  };\n};\n\nexport const setMapData = (data = [], name = null) => {\n  const valArray = (data|| []).map((v) => v[1]);\n  return {\n    type: SET_MAP_DATA,\n    payload: {\n      series: {\n        data:[...data],\n        name,\n      },\n      colorAxis: {\n        min: Math.min(...valArray),\n        max: Math.max(...valArray),\n      },\n    },\n  };\n};\n","import React, { useEffect } from 'react';\nimport Highcharts from 'highcharts/highmaps';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from 'highcharts/modules/map';\nimport * as Actions from '../store/mapOptions/mapOptions.actions';\nimport proj4 from 'proj4';\nimport { useSelector, useDispatch } from 'react-redux';\n\nrequire('highcharts/modules/exporting')(Highcharts);\n\nhighchartsMap(Highcharts);\nif (typeof window !== 'undefined') {\n  window.proj4 = window.proj4 || proj4;\n}\n\nconst Chart = () => {\n  const { mapData, displayField } = useSelector(({ data }) => data);\n  const options  = useSelector(({ options }) => options);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (mapData.length !== 0) {\n      dispatch(Actions.setMapData(mapData, displayField));\n    } else {\n      dispatch(Actions.setMapData())\n    }\n  }, [mapData, displayField, dispatch]);\n\n  return (\n    <>\n      {options ? (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n          constructorType={'mapChart'}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../components/Chart';\n\nconst ChartSection = () => {\n  return (<div\n    style={{\n      width: '50%',\n      padding: '10px',\n      border: '1px solid #c4c4c4',\n    }}>\n    <div style={{ width: '600', height: '400px' }}>\n      <Chart />\n    </div>\n  </div>);\n};\n\n\n\nexport default ChartSection;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { startCase } from 'lodash'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    // marginTop: theme.spacing(2),\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: '100%',\n  },\n}));\n\nexport default function DropDown({ values, onChange, label, value }) {\n  const classes = useStyles();\n  const [internalValue, setValue] = useState(value);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (internalValue !== value) {\n      setValue(value)\n    }\n  }, [value, internalValue])\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    onChange(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n//style={{width: '100%'}}\n  return (\n    <>\n      <FormControl className={classes.formControl} >\n        <InputLabel id='demo-controlled-open-select-label'>{label}</InputLabel>\n        <Select\n          labelId='demo-controlled-open-select-label'\n          id='demo-controlled-open-select'\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={internalValue}\n          style={{width: '100%'}}\n          onChange={handleChange}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          {values.map((v) => (\n            <MenuItem value={v} key={v}>{startCase(v)}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import { updateQuery } from '../../utils/queryUtils';\n\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const LOAD_DATA_SAGA = 'LOAD_DATA_SAGA';\nexport const LOAD_DATA_SUCCESS = 'LOAD_DATA_SUCCESS';\nexport const LOAD_DATA_FAILURE = 'LOAD_DATA_FAILURE';\n\nexport const APPLY_FILTERS_SAGA = 'APPLY_FILTERS_SAGA';\nexport const APPLY_FILTERS = 'APPLY_FILTERS';\nexport const SET_STATE_AND_GROUP = 'SET_STATE_AND_GROUP';\nexport const SET_DISPLAY = 'SET_DISPLAY_FIELD';\nexport const SET_AGGREGATION_TYPE = 'SET_AGGREGATION_TYPE';\nexport const SET_DISPLAY_FN = 'SET_DISPLAY_FN';\nexport const ADD_FILTER_FN = 'ADD_FILTER_FN';\nexport const ADD_FILTERS = 'ADD_FILTERS';\n\nexport const loadData = (url) => ({\n  type: LOAD_DATA_SAGA,\n  payload: {\n    url,\n  },\n});\n\nexport const updateDisplay = (displayField, aggregationAction) => {\n  updateQuery('df', displayField)\n  updateQuery('a', aggregationAction)\n  return {\n    type: SET_DISPLAY,\n    payload: {\n      displayField,\n      aggregationAction,\n    },\n  };\n};\n\nexport const updateFilters = (filteringFuncitons) => {\n  updateQuery('f', filteringFuncitons)\n  return {\n    type: ADD_FILTERS,\n    payload: {\n      filteringFuncitons\n    },\n  };\n};\n\nexport const groupData = (stateKey) => {\n  updateQuery('s', stateKey)\n  return {\n    type: SET_STATE_AND_GROUP,\n    payload: {\n      stateKey,\n    },\n  };\n};\n","export default class Calculations {\n  constructor(arr, key) {\n    this.arr = arr;\n    this.key = key;\n    this.numberData = arr\n      .map((a) => parseFloat(a[this.key]))\n      .filter((a) => !isNaN(a));\n  }\n\n  average() {\n    if (this.countOfNumbers()) {\n      return this.sum() / this.countOfNumbers();\n    }\n  }\n\n  count() {\n    return this.arr.length;\n  }\n\n  countOfNumbers() {\n    return this.numberData.length;\n  }\n\n  max() {\n    if (this._max !== undefined) {\n      return this._max;\n    }\n    this._max = Math.max(...this.numberData);\n    return this._max;\n  }\n\n  min() {\n    if (this._min !== undefined) {\n      return this._min;\n    }\n    this._min = Math.min(...this.numberData);\n    return this._min;\n  }\n\n  sum() {\n    if (this._sum !== undefined) {\n      return this._sum;\n    }\n    this._sum = this.numberData.reduce((a, b) => a + b, 0);\n    return this._sum;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DropDown from './common/DropDown';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport Calculations from '../utils/Calculations';\nimport { startCase } from 'lodash';\nimport { getQueryVariable } from '../utils/queryUtils';\n\nconst aggerationOptions = Object.getOwnPropertyNames(Calculations.prototype)\n  .filter((k) => k !== 'constructor')\n  .map((s) => startCase(s));\n\nconst DataSelector = () => {\n  const { titles, stateKey, displayField, aggregationAction } = useSelector(\n    ({ data }) => data,\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const urlState = getQueryVariable('s');\n    const urlDisplayField = getQueryVariable('df');\n    const urlAggregationAction = getQueryVariable('a');\n    if (urlState !== stateKey) {\n      dispatch(Actions.groupData(stateKey));\n    }\n    if (\n      (urlDisplayField && urlDisplayField !== displayField) ||\n      (urlAggregationAction && urlAggregationAction !== aggregationAction)\n    ) {\n      dispatch(Actions.updateDisplay(urlDisplayField, urlAggregationAction));\n    }\n  }, [titles, stateKey, displayField, aggregationAction, dispatch]);\n\n  const onStateChange = (v) => {\n    dispatch(Actions.groupData(v));\n  };\n  const onDisplayFieldChange = (df) => {\n    dispatch(Actions.updateDisplay(df, aggregationAction));\n  };\n  const onAggregationActionChange = (a) => {\n    dispatch(Actions.updateDisplay(displayField, a));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flex: 1,\n      }}>\n      {titles?.length ? (\n        <div style={{ width: '30%' }}>\n          <DropDown\n            value={stateKey}\n            values={titles}\n            onChange={onStateChange}\n            label='State Field'\n          />\n        </div>\n      ) : null}\n      {stateKey ? (\n        <>\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={displayField}\n              values={titles}\n              onChange={onDisplayFieldChange}\n              label='Display Field'\n            />\n          </div>\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={aggregationAction}\n              values={aggerationOptions}\n              onChange={onAggregationActionChange}\n              label='Aggregation'\n            />\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DataSelector;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function DatePickers(props) {\n  const classes = useStyles();\n  return (\n    < >\n      <TextField\n        labelid={'date-picker-' +props.label }\n        type=\"date\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        InputProps={{ inputProps: { ...props } }}\n        {...props}\n      />\n    </>\n  );\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport min from 'date-fns/min';\nimport max from 'date-fns/max';\nimport format from 'date-fns/format';\nimport { useSelector } from 'react-redux';\nimport DatePicker from '../common/DatePicker';\n\n\nconst dateArr = (data, field) => {\n  return data.map((d) => new Date(d[field])).filter((v) => !isNaN(v.getTime()));\n};\n\nconst calcMin = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(min(arr));\n};\nconst calcMax = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(max(arr));\n};\n\nconst dateFormat = (date) => {\n  return format(date, 'yyyy-MM-dd');\n};\n\nconst DateFilter = ({ dataField, filterValues:[startDate = '', endDate = ''], onDataFieldChange, onFilterValueChange }) => {\n  const { rawData } = useSelector(({ data }) => data);\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n\n  const updateFilter = useCallback(( minVal, maxVal) => {\n    const f = [minVal, maxVal];\n    onFilterValueChange(f)\n  }, [onFilterValueChange]);\n\n  useEffect(() => {\n    try {\n      const minDateValue = calcMin(rawData, dataField);\n      const maxDateValue = calcMax(rawData, dataField);\n      setMinDate(minDateValue);\n      setMaxDate(maxDateValue);\n      if (!startDate || !endDate) {\n\n        updateFilter(minDateValue, maxDateValue);\n      }\n    } catch (e) {\n      setMinDate('');\n      setMaxDate('');\n    }\n  }, [dataField, setMinDate, setMaxDate, onDataFieldChange, rawData, updateFilter, startDate,  endDate]);\n\n  if (!dataField) {\n    return null;\n  }\n\n  const onStartDateChange = (e) => {\n    const date = e.target.value;\n    updateFilter(date, endDate);\n  };\n\n  const onEndDateChange = (e) => {\n    const date = e.target.value;\n    updateFilter( startDate, date);\n  };\n\n  return (\n    <>\n      <DatePicker\n        label='From'\n        min={minDate}\n        max={endDate}\n        value={startDate}\n        onChange={onStartDateChange}\n      />\n      <DatePicker\n        label='To'\n        min={startDate}\n        max={maxDate}\n        value={endDate}\n        onChange={onEndDateChange}\n      />\n    </>\n  );\n};\n\nDateFilter.defaultProps = {\n  filterValues: []\n};\n\nexport default DateFilter;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function BasicTextFields(props) {\n\n  return (\n    <TextField style={{width: '100%', paddingBottom: '10px'}} {...props} />\n    \n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport BasicTextFields from '../common/BasicTextFields';\n\nconst SingleValue = ({ filterValues: [value = ''], onFilterValueChange }) => {\n  const [internalUrl, setInternalUrl] = useState(value);\n  useEffect(() => {\n    console.log(value)\n    setInternalUrl(value);\n  }, [value]);\n\n  const setValue = (newValue) => {\n    if (newValue === value) {\n      return;\n    }\n    onFilterValueChange([newValue]);\n  };\n\n  return (\n    <BasicTextFields\n      label='value'\n      value={internalUrl}\n      onChange={(e) => setInternalUrl(e.target.value)}\n      onBlur={(e) => setValue(e.target.value)}\n    />\n  );\n};\n\nexport default SingleValue;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport DropDown from '../common/DropDown';\nimport DateFilter from './DateFilter';\nimport SingleValue from './SingleValue';\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\nimport { Button } from '@material-ui/core';\n\nconst filterOptions = ['dateBetween', 'equals', 'greater', 'less'];\n\nconst FilterItem = ({ filterSettings, onFilterChange, onDelete }) => {\n  const { titles } = useSelector(({ data }) => data);\n  const [filterType, setFilterType] = useState('');\n  const [dataField, setDataField] = useState('');\n  const [filterValues, setFilterValues] = useState('');\n\n  useEffect(() => {\n    const [\n      iFilterType = '',\n      iDataFilter = '',\n      ...iFieldValues\n    ] = filterSettings;\n    setFilterType(iFilterType);\n    setDataField(iDataFilter);\n    setFilterValues(iFieldValues);\n  }, [filterSettings]);\n\n  const filterTypeChangeHandler = (v) => {\n    setFilterType(v);\n  };\n\n  const dataFieldChangeHandler = (v) => {\n    setDataField(v);\n  };\n\n  const onFilterValueChange = (v) => {\n    if (v.toString() !== filterValues.toString()) {\n      setFilterValues(v);\n      onFilterChange([filterType, dataField, ...v]);\n    }\n  };\n\n  const displayfilterOptions = () => {\n    if (!dataField) {\n      return null;\n    }\n    switch (filterType) {\n      case 'dateBetween':\n        return (\n          <DateFilter\n            dataField={dataField}\n            filterValues={filterValues}\n            onDataFieldChange={setDataField}\n            onFilterValueChange={onFilterValueChange}\n          />\n        );\n      case 'equals':\n      case 'greater':\n      case 'less':\n        return (\n        <div style={{margin: '0px 8px 0 15px ', flex: 1,\n        }}>\n          <SingleValue\n            filterValues={filterValues}\n            onFilterValueChange={onFilterValueChange}\n          />\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'flex-start',\n        flex: 1,\n        paddingBottom: 10,\n      }}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flex: 1,\n          marginRight:8\n        }}>\n        <div>\n          <DropDown\n            value={filterType}\n            values={filterOptions}\n            onChange={filterTypeChangeHandler}\n            label='Type'\n          />\n        </div>\n        <div>\n          <DropDown\n            value={dataField}\n            values={titles}\n            onChange={dataFieldChangeHandler}\n            label='Field'\n          />\n        </div>\n      </div>\n        <div style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flex: 2,\n          flexGrow: 2,\n        }}>{displayfilterOptions()}</div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'flex-end',\n        }}>\n        <Button onClick={() => onDelete()} style={{ marginBottom: '-8px' }}>\n          <DeleteOutlineRoundedIcon style={{ padding: 0 }} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterItem;\n","import { Button } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQueryVariable } from '../../utils/queryUtils';\nimport FilterItem from './FilterItem';\nimport * as Actions from '../../store/csvData/csvData.actions';\n\n\nconst FilterList = () => {\n  const { titles, filteringFuncitons } = useSelector(({ data }) => data);\n  const [internalFilters, setInternalFilters] = useState(filteringFuncitons) \n  console.log(internalFilters)\n  const dispach = useDispatch();\n\n  useEffect(() => {\n    setInternalFilters(filteringFuncitons)\n  }, [filteringFuncitons])\n\n  useEffect(()=> {\n    const urlFilters  = (getQueryVariable('f')|| []);\n    if (urlFilters.length > 0 && urlFilters.toString() !== filteringFuncitons.toString()) {\n      dispach(Actions.updateFilters(urlFilters));\n    }\n    setInternalFilters(urlFilters)\n  }, [titles, dispach, filteringFuncitons])\n\n\n  const addFitler = () => {\n    setInternalFilters((c) => [...c, []]);\n  }\n\n  const filterChangeHandler = (index, f) => {\n    const cf = [...internalFilters]\n    cf[index] = f;\n    dispach(Actions.updateFilters(cf));\n  }\n\n  const onDelete = (index) => {\n    const cf = [...internalFilters]\n    cf.splice(index, 1)\n    dispach(Actions.updateFilters(cf));\n  }\n\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\n      <div style={{ alignSelf:'flex-end', flex: 1 }}>\n        <Button onClick={addFitler}>add filter</Button>\n      </div>\n      {\n        internalFilters.map((filter, index) => {\n          return <FilterItem key={index} filterSettings={filter} onFilterChange={(f) => filterChangeHandler(index, f)} onDelete={() => onDelete(index)} />\n        })\n      }\n\n    </div>\n  );\n};\n\n\n\nexport default FilterList;\n","import React, { useEffect, useState } from 'react';\nimport BasicTextFields from './common/BasicTextFields';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport { getQueryVariable } from '../utils/queryUtils';\n\n//'http://d14wlfuexuxgcm.cloudfront.net/covid/rt.csv'\nconst UrlSelector = () => {\n  const dispatch = useDispatch();\n  const loadedURL = useSelector(({ data }) => data?.url);\n  const [internalUrl, setInternalUrl] = useState(loadedURL);\n  useEffect(() => {\n    setInternalUrl(loadedURL);\n  }, [loadedURL]);\n  \n  useEffect(() => {\n    const queryURL = getQueryVariable('url');\n    if (queryURL) {\n      dispatch(Actions.loadData(queryURL));\n    }\n  }, [dispatch]);\n\n\n\n  const setURL = (newUrl) => {\n    if (newUrl === loadedURL) {\n      return;\n    }\n    dispatch(Actions.loadData(newUrl));\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <BasicTextFields\n        label='Url for a CSV'\n        value={internalUrl}\n        onChange={(e) => setInternalUrl(e.target.value)}\n        onBlur={(e) => setURL(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default UrlSelector;\n","import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_F2 = 113;\nconst KEY_ENTER = 13;\nconst KEY_TAB = 9;\n\nconst isLeftOrRight = (event) => {\n  return [37, 39].indexOf(event.keyCode) > -1;\n};\n\nconst getCharCodeFromEvent = (event) => {\n  event = event || window.event;\n  return typeof event.which === 'undefined' ? event.keyCode : event.which;\n};\n\nconst isCharNumeric = (charStr) => {\n  return !!/[0-9]*\\.?[0-9]+/.test(charStr);\n};\n\nconst isKeyPressedNumeric = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  const charStr = event.key ? event.key : String.fromCharCode(charCode);\n  const newVal = event.target.value + charStr;\n  return isCharNumeric(newVal);\n};\n\nconst deleteOrBackspace = (event) => {\n  return [KEY_DELETE, KEY_BACKSPACE].indexOf(event.keyCode) > -1;\n};\n\nconst finishedEditingPressed = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  return charCode === KEY_ENTER || charCode === KEY_TAB;\n};\nconst onKeyDown = (event) => {\n  if (isLeftOrRight(event) || deleteOrBackspace(event)) {\n    event.stopPropagation();\n    return;\n  }\n\n  if (!finishedEditingPressed(event) && !isKeyPressedNumeric(event)) {\n    if (event.preventDefault) event.preventDefault();\n  }\n};\n\nconst NumericEditor = forwardRef((props, ref) => {\n  const createInitialState = () => {\n    let startValue;\n    let highlightAllOnFocus = true;\n\n    if (props.keyPress === KEY_BACKSPACE || props.keyPress === KEY_DELETE) {\n      // if backspace or delete pressed, we clear the cell\n      startValue = '';\n    } else if (props.charPress) {\n      // if a letter was pressed, we start with the letter\n      startValue = props.charPress;\n      highlightAllOnFocus = false;\n    } else {\n      // otherwise we start with the current value\n      startValue = props.value;\n      if (props.keyPress === KEY_F2) {\n        highlightAllOnFocus = false;\n      }\n    }\n\n    return {\n      value: startValue,\n      highlightAllOnFocus,\n    };\n  };\n\n  const initialState = createInitialState();\n\n  const [value, setValue] = useState(initialState.value);\n  const [highlightAllOnFocus, setHighlightAllOnFocus] = useState(\n    initialState.highlightAllOnFocus,\n  );\n  const refInput = useRef(null);\n  const cancelBeforeStart =\n    props.charPress && '1234567890.'.indexOf(props.charPress) < 0;\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      afterGuiAttached() {\n        // get ref from React component\n        const eInput = refInput.current;\n        eInput.focus();\n        if (highlightAllOnFocus) {\n          eInput.select();\n\n          setHighlightAllOnFocus(false);\n        } else {\n          // when we started editing, we want the carot at the end, not the start.\n          // comes into play in two scenarios: a) when user hits F2 and b)\n          // when user hits a printable charac ter, then on IE (and only IE) the carot\n          // was placed after the first character, thus 'apply' would end up as 'pplea'\n          const length = eInput.value ? eInput.value.length : 0;\n          if (length > 0) {\n            eInput.setSelectionRange(length, length);\n          }\n        }\n      },\n\n      getValue() {\n        return value;\n      },\n\n      isCancelBeforeStart() {\n        return cancelBeforeStart;\n      },\n\n      // will reject the number if it greater than 1,000,000\n      // not very practical, but demonstrates the method.\n      isCancelAfterEnd() {\n        return value > 1000000;\n      },\n    };\n  });\n\n  return (\n    <input\n      ref={refInput}\n      value={value}\n      onChange={(event) => setValue(event.target.value)}\n      style={{ width: '95%' }}\n    />\n  );\n});\n\nexport default NumericEditor;\n","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { SketchPicker } from 'react-color'\n\nconst ColorEditor = forwardRef((props, ref) => {\n  const [value, setValue] = useState(props.value);\n  const refInput = useRef(null);\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      getValue() {\n        return value;\n      },\n      isPopup() {\n        return true;\n      },\n    };\n  });\n\n  return (\n    <div ref={refInput} style={{ padding: '10px' }}>\n      <SketchPicker\n        color={value}\n        onChangeComplete={({hex}) => {\n          if (hex) {\n            setValue(hex);\n          }\n        }}\n      />\n    </div>\n  );\n});\n\nexport default ColorEditor;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as Actions from '../../store/mapOptions/mapOptions.actions';\n\n\nexport function stopObjToArr({ stop, color }) {\n  return [stop, color];\n}\n\nconst getTableData = (rowData) => {\n  let rd = [];\n  rowData.api.forEachNode(node => rd.push(node.data));\n  return rd.map(stopObjToArr);\n}\n\n\nexport default () => {\n\n  const dispatch = useDispatch();\n  const stopData = useSelector(({ options }) =>\n    options.colorAxis.stops.map(([stop, color], i) => ({\n      stop,\n      color,\n      _id: i + stop + color,\n    })),\n  );\n\n  const onCellValueChanged = (rowData) => {\n    const data = getTableData(rowData);\n    dispatch(Actions.setColorAxisStops(data));\n  };\n\n  const addStop = () => {\n    const data = [...stopData.map(stopObjToArr), [0, '#000']];\n    dispatch(Actions.setColorAxisStops(data));\n  };\n  const deleteRow = (rowData) => {\n    rowData.api.applyTransaction({ remove: [rowData.data] })\n    const data = getTableData(rowData);\n    dispatch(Actions.setColorAxisStops(data));\n  };\n\n  const setTitleHandle = (v) => {\n    dispatch(Actions.setTitle(v));\n  };\n\n  const setMinHandle = (v) => {\n    dispatch(Actions.setColorAxisMin(v));\n  };\n\n  const setMaxHandle = (v) => {\n    dispatch(Actions.setColorAxisMax(v));\n  };\n\n  return [onCellValueChanged, addStop, deleteRow, setTitleHandle, setMinHandle, setMaxHandle];\n\n}","import React, { useEffect } from 'react';\nimport BasicTextField from '../common/BasicTextFields';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport NumericEditor from '../cellEditors/NumericEditor';\nimport ColorEditor from '../cellEditors/ColorEditor';\nimport * as Actions from '../../store/mapOptions/mapOptions.actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { getQueryVariable } from '../../utils/queryUtils';\nimport useChartSettings, {stopObjToArr} from './useChartSettings';\n\n\nconst ChartSettings = () => {\n  // const [gridApi, setGridApi] = useState(null);\n  // const [gridColumnApi, setGridColumnApi] = useState(null);\n  const dispatch = useDispatch();\n  const loadedURL = useSelector(({ data }) => data?.url);\n  const chartTitle = useSelector(({ options }) => options.title.text);\n  const min = useSelector(({ options }) => options.colorAxis.min);\n  const max = useSelector(({ options }) => options.colorAxis.max);\n  const stopData = useSelector(({ options }) =>\n    options.colorAxis.stops.map(([stop, color], i) => ({\n      stop,\n      color,\n      _id: i + stop + color,\n    })),\n  );\n\n  const [onCellValueChanged, addStop, deleteRow, setTitleHandle, setMinHandle, setMaxHandle] = useChartSettings();\n\n\n  useEffect(() => {\n    const mi = getQueryVariable('mi');\n    if (mi && mi !== min && loadedURL) {\n      dispatch(Actions.setColorAxisMin(mi));\n    }\n  }, [min, loadedURL, dispatch]);\n  useEffect(() => {\n    const ma = getQueryVariable('ma');\n    if (ma && ma !== max && loadedURL) {\n      dispatch(Actions.setColorAxisMax(ma));\n    }\n  }, [max, loadedURL, dispatch]);\n  useEffect(() => {\n    const t = getQueryVariable('t');\n    if (t && t !== chartTitle && loadedURL) {\n      dispatch(Actions.setTitle(t));\n    }\n  }, [chartTitle, loadedURL, dispatch]);\n  useEffect(() => {\n    const s = getQueryVariable('st');\n    const st = stopData.map(stopObjToArr);\n    if (s && s.toString() !== st.toString() && loadedURL) {\n      dispatch(Actions.setColorAxisStops(s));\n    }\n  }, [stopData, loadedURL, dispatch]);\n\n\n\n  function onGridReady(params) {\n    // setGridApi(params.api);\n    // setGridColumnApi(params.columnApi);\n  }\n\n\n  const DeleteButton = () => {\n    return (\n      <Button style={{ width: '100%' }} >\n        Delete\n      </Button>\n    );\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n      <BasicTextField\n        label='title'\n        value={chartTitle}\n        onChange={(e) => setTitleHandle(e.target.value)}\n      />\n      <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n        <BasicTextField\n          label='Color Axis Min'\n          value={min}\n          onChange={(e) => setMinHandle(e.target.value)}\n        />\n        <BasicTextField\n          label='Color Axis Max'\n          value={max}\n          onChange={(e) => setMaxHandle(e.target.value)}\n        />\n        <Button style={{ width: '33%' }} onClick={addStop}>\n          Add stop\n        </Button>\n      </div>\n      <div style={{ width: '100%' }}>\n        <div className='ag-theme-alpine' style={{ height: 300, width: '100%' }}>\n          <AgGridReact\n            defaultColDef={{\n              flex: 1,\n              minWidth: 100,\n              filter: true,\n              editable: true,\n            }}\n            onGridReady={onGridReady}\n            onCellValueChanged={onCellValueChanged}\n            singleClickEdit={true}\n            frameworkComponents={{\n              numericEditor: NumericEditor,\n              colorEditor: ColorEditor,\n              deleteButton: DeleteButton,\n            }}\n            immutableData\n            getRowNodeId={(data) => data._id}\n            rowData={stopData}>\n            <AgGridColumn\n              field='stop'\n              sortable={true}\n              editable={true}\n              cellEditor='numericEditor'></AgGridColumn>\n            <AgGridColumn\n              flex={2}\n              field='color'\n              editable={true}\n              cellEditor='colorEditor'\n              cellStyle={(prams) => {\n                return {\n                  backgroundColor: prams?.value,\n                  color: 'white',\n                  textShadow:\n                    '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\n                  letterSpacing: '2px',\n                };\n              }}></AgGridColumn>\n            <AgGridColumn\n              headerName='Delete'\n              cellRenderer='deleteButton'\n              onCellClicked={deleteRow}\n              editable={false}></AgGridColumn>\n          </AgGridReact>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartSettings;\n","import React from 'react';\nimport DataSelector from '../components/DataSelector';\nimport FilterList from '../components/fitlers/FilterList';\nimport UrlSelector from '../components/UrlSelector';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ChartSettings from '../components/chartSettings/ChartSettings';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst DataSourceAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\n        <Typography className={classes.heading}>Data Source</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <UrlSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst ChartSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel4a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>Chart Settings</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <ChartSettings />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst FiltersAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion defaultExpanded={true}>\n      <AccordionSummary aria-controls='panel2a-content' id='panel3a-header' >\n        <Typography className={classes.heading}>Filters</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <FilterList />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst AggregationSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion defaultExpanded={true}>\n      <AccordionSummary aria-controls='panel3a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>\n          Aggregation Settings\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <DataSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nconst SettingSection = () => {\n  const { loading, titles } = useSelector(({ data }) => data);\n\n  return (\n    <div\n      style={{\n        width: '50%',\n        padding: '10px',\n        border: '1px solid #c4c4c4',\n        overflow: 'scroll',\n      }}>\n      <DataSourceAccordion />\n      {loading ? 'loading...' : null}\n      {!loading && titles.length ? <ChartSettingsAccordion /> : null}\n      {titles.length ? (\n        <>\n          <FiltersAccordion />\n          <AggregationSettingsAccordion />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SettingSection;\n","import React from 'react';\nimport Grid from './components/Grid';\nimport ChartSection from './sections/ChartSection';\nimport SettingSection from './sections/SettingSection';\n\nconst App = () => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div style={{textAlign: 'center'}}> \n      <h1>US State Data Mapping Tool</h1>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          padding: '10px',\n          justifyContent: 'space-between',\n          height: '422px'\n        }}>\n        <SettingSection />\n        <ChartSection />\n      </div>\n      <div style={{ flex: 1, padding: '10px' }}>\n        <Grid />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default{\n'al':'al',\n'ak':'ak',\n'az':'az',\n'ar':'ar',\n'ca':'ca',\n'co':'co',\n'ct':'ct',\n'de':'de',\n'fl':'fl',\n'ga':'ga',\n'hi':'hi',\n'id':'id',\n'il':'il',\n'in':'in',\n'ia':'ia',\n'ks':'ks',\n'ky':'ky',\n'la':'la',\n'me':'me',\n'md':'md',\n'ma':'ma',\n'mi':'mi',\n'mn':'mn',\n'ms':'ms',\n'mo':'mo',\n'mt':'mt',\n'ne':'ne',\n'nv':'nv',\n'nh':'nh',\n'nj':'nj',\n'nm':'nm',\n'ny':'ny',\n'nc':'nc',\n'nd':'nd',\n'oh':'oh',\n'ok':'ok',\n'or':'or',\n'pa':'pa',\n'ri':'ri',\n'sc':'sc',\n'sd':'sd',\n'tn':'tn',\n'tx':'tx',\n'ut':'ut',\n'vt':'vt',\n'va':'va',\n'wa':'wa',\n'wv':'wv',\n'wi':'wi',\n'wy':'wy',\n'alabama':'al',\n'alaska':'ak',\n'arizona':'az',\n'arkansas':'ar',\n'california':'ca',\n'colorado':'co',\n'connecticut':'ct',\n'delaware':'de',\n'florida':'fl',\n'georgia':'ga',\n'hawaii':'hi',\n'idaho':'id',\n'illinois':'il',\n'indiana':'in',\n'iowa':'ia',\n'kansas':'ks',\n'kentucky':'ky',\n'louisiana':'la',\n'maine':'me',\n'maryland':'md',\n'massachusetts':'ma',\n'michigan':'mi',\n'minnesota':'mn',\n'mississippi':'ms',\n'missouri':'mo',\n'montana':'mt',\n'nebraska':'ne',\n'nevada':'nv',\n'newhampshire':'nh',\n'newjersey':'nj',\n'newmexico':'nm',\n'newyork':'ny',\n'northcarolina':'nc',\n'northdakota':'nd',\n'ohio':'oh',\n'oklahoma':'ok',\n'oregon':'or',\n'pennsylvania':'pa',\n'rhodeisland':'ri',\n'southcarolina':'sc',\n'southdakota':'sd',\n'tennessee':'tn',\n'texas':'tx',\n'utah':'ut',\n'vermont':'vt',\n'virginia':'va',\n'washington':'wa',\n'westvirginia':'wv',\n'wisconsin':'wi',\n'wyoming':'wy',\n'ala':'al',\n'ariz':'az',\n'ark':'ar',\n'calif':'ca',\n'colo':'co',\n'conn':'ct',\n'del':'de',\n'fla':'fl',\n'ill':'il',\n'ind':'in',\n'kans':'ks',\n'mass':'ma',\n'mich':'mi',\n'minn':'mn',\n'miss':'ms',\n'mont':'mt',\n'neb':'ne',\n'nebr':'ne',\n'nev':'nv',\n'nmex':'nm',\n'ndak':'nd',\n'okla':'ok',\n'ore':'or',\n'oreg':'or',\n'sdak':'sd',\n'tenn':'tn',\n'tex':'tx',\n'wash':'wa',\n'wva':'wv',\n'wis':'wi',\n'wisc':'wi',\n'wyo':'wy',\n};\n","import { isSameDay, isWithinInterval, isBefore, isAfter } from 'date-fns';\nimport { memoize } from 'lodash';\n\nconst determinType = memoize((value) => {\n  let type = 'string';\n  const numberValue = parseFloat(value);\n  const dateValue = new Date(value);\n\n  if (numberValue.toString() === value.toString()) {\n    type = 'number';\n    value = numberValue;\n  } else if (!isNaN(dateValue.valueOf())) {\n    type = 'date';\n    value = dateValue;\n  } \n  return [type, value];\n});\n\nconst parseData = (type, value) => {\n  switch (type) {\n    case 'string':\n      return '' + value;\n    case 'date':\n      return new Date(value);\n    case 'number':\n      return parseFloat(value);\n    default:\n      return value;\n  }\n};\n\nconst baseCompare = (value, field, numCompare, dateCompare, defaultCompare) => (item) => {\n  if (!value) {\n    return () => true;\n  }\n  const [type, userValue] = determinType(value);\n  const iv = parseData(type, item[field])\n  switch (type) {\n    case 'number':\n      return numCompare(iv, userValue);\n    case 'date':\n      return dateCompare(iv, userValue);\n    default:\n      return defaultCompare(iv, userValue);\n  }\n}\n\n\nconst filterObject = {\n  dateBetween(field, startDate, endDate) {\n    startDate = new Date(startDate);\n    endDate = new Date(endDate);\n    return (item) => {\n      const date = new Date(item[field]);\n      if (isNaN(date.getTime())) {\n        return false;\n      }\n      return isWithinInterval(date, { start: startDate, end: endDate });\n    };\n  },\n  equals(field, value) {\n    const numCompare = memoize((iv, v) => iv === v);\n    const dateCompare = memoize((iv, v ) => isSameDay(new Date(iv), v));\n    const defaultCompare = memoize((iv, v) => iv === v);\n    return baseCompare(value, field, numCompare, dateCompare, defaultCompare);\n  },\n  greater(field, value) {\n    const numCompare = memoize((iv, v) => iv >= v);\n    const dateCompare = memoize((iv, v) => isAfter(new Date(iv), v));\n    const defaultCompare = memoize((iv, v) => iv >= v);\n    return baseCompare(value, field, numCompare, dateCompare, defaultCompare);\n  },\n  less(field, value) {\n    const numCompare = memoize((iv,v) => iv <= v);\n    const dateCompare = memoize((iv,v) => isBefore(new Date(iv), v));\n    const defaultCompare = memoize((iv, v) => iv <= v);\n    return baseCompare(value, field, numCompare, dateCompare, defaultCompare);\n  },\n};\n\nexport const makeFitler = (name, ...props) => {\n  const fnMaker = filterObject[name];\n  if (fnMaker) {\n    return fnMaker(...props);\n  }\n  return null;\n};\n\n","import stateMap from '../../constants/stateMap';\nimport Calculations from '../../utils/Calculations';\nimport { camelCase } from 'lodash';\nimport { makeFitler } from '../../utils/Filters';\n\nexport const groupData = (stateKey, data) => {\n  if (!stateKey) {\n    return [];\n  }\n  const obj = data.reduce((acc, item) => {\n    if (!item[stateKey]) {\n      return acc;\n    }\n    const key = normalizeState(item[stateKey]);\n    if (!key) {\n      return acc;\n    }\n    if (!acc[key]) {\n      acc[key] = [key, []];\n    }\n    acc[key][1].push(item);\n    return acc;\n  }, {});\n  return Object.values(obj);\n};\n\nexport const normalizeState = (state) => {\n  if (typeof state !== 'string') {\n    return null;\n  }\n  const cleanState = stateMap[state.toLowerCase().replace(/[^a-z]/gim, '')];\n  if (cleanState) {\n    return 'us-' + cleanState;\n  }\n  return null;\n};\nexport const filterData = (rawData, filterData) => {\n  if (filterData.length === 0) {\n    return rawData;\n  }\n  const filters = filterData.map((fd) => makeFitler(...fd)).filter(Boolean)\n  return rawData.filter((value) => {\n    const result =  filters.every((fn) => fn(value));\n    return result;\n  });\n};\n\nexport const processToDisplay = (\n  groupedData,\n  displayField,\n  aggregationAction,\n) => {\n  if (!aggregationAction || !displayField) {\n    return [];\n  }\n\n  aggregationAction = camelCase(aggregationAction);\n  return groupedData.map(([key, arr]) => {\n    const calc = new Calculations(arr, displayField);\n    const displayVal = calc[aggregationAction]();\n    return [key, displayVal, calc];\n  });\n};\n\nexport const updateAggregationAction = (mapData, aggregationAction) => {\n  if (!aggregationAction || !Array.isArray(mapData)) {\n    return [];\n  }\n\n  aggregationAction = camelCase(aggregationAction);\n  return mapData.map(([key, df, calc]) => {\n    const displayVal = calc[aggregationAction]();\n    return [key, displayVal, calc];\n  });\n};\n\nexport const convertCSVToJSON = (str = '', delimiter = ',') => {\n  const titles = str.slice(0, str.indexOf('\\n')).split(delimiter);\n  const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n  return [\n    titles,\n    rows.map((row) => {\n      const values = row.split(delimiter);\n      return titles.reduce((object, curr, i) => {\n        object[curr] = values[i];\n        return object;\n      }, {});\n    }),\n  ];\n};\n","import * as Actions from './csvData.actions';\nimport { filterData, groupData, processToDisplay, updateAggregationAction } from './csvDataTools';\n\n\nconst inital_state = {\n  url: '',\n  titles: [], // list of keys that can be selected\n  rawData: [], // the parsed CSV file\n  filteredData: [], // any filters run on the data (using filter funciton) also showen in table//\n  stateKey: '',\n  groupData: [],\n  displayField: '',\n  aggregationAction: '',\n  filteringFuncitons: [],\n  mapData: [], //data grouped and agrated \n  loading: false,\n};\n\nexport default (state = inital_state, action) => {\n  switch (action.type) {\n    case Actions.REQUEST_DATA:\n      return {\n        ...inital_state,\n        loading: true,\n      };\n    case Actions.LOAD_DATA_SUCCESS:\n      return {\n        ...inital_state,\n        loading: false,\n        ...action.payload\n      };\n    case Actions.LOAD_DATA_FAILURE: \n    return {\n      ...inital_state,\n      loading: false\n    };\n    case Actions.SET_STATE_AND_GROUP:\n      return {\n        ...state,\n        stateKey: action.payload.stateKey,\n        groupData: groupData(action.payload.stateKey, state.filteredData),\n        mapData: [],\n      };\n    case Actions.SET_DISPLAY:\n      //updateAaggregationAction\n      const aggerationOnly =\n        state.displayField &&\n        state.aggregationAction &&\n        action.payload.displayField === state.displayField;\n      return {\n        ...state,\n        displayField: action.payload.displayField,\n        aggregationAction: action.payload.aggregationAction,\n        mapData: aggerationOnly\n          ? updateAggregationAction(\n              state.mapData,\n              action.payload.aggregationAction,\n            )\n          : processToDisplay(\n              state.groupData,\n              action.payload.displayField,\n              action.payload.aggregationAction,\n            ),\n      };\n    case Actions.ADD_FILTERS:\n      const filteringFuncitons = action.payload.filteringFuncitons;\n      const filteredData = filterData(state.rawData, filteringFuncitons);\n      const newGroupData = groupData(state.stateKey, filteredData);\n      return {\n        ...state,\n        filteringFuncitons,\n        filteredData,\n        groupData: newGroupData,\n        mapData: processToDisplay(\n          newGroupData,\n          state.displayField,\n          state.aggregationAction,\n        ),\n      };\n    case Actions.APPLY_FILTERS:\n      return {\n        ...state,\n        mapData: action.payload.mapData,\n      };\n    default:\n      return state;\n  }\n};\n\n\n","import * as Actions from './mapOptions.actions';\n\nimport mapData from '@highcharts/map-collection/countries/us/us-all.geo.json';\nconst initial_state = {\n  chart: {\n    map: mapData,\n  },\n  title: {\n    text: '',\n  },\n  mapNavigation: {\n    enabled: true,\n  },\n  colorAxis: {\n    min: 0,\n    max: 1,\n    stops: [\n      [0, '#00FF00'],\n      [0.5, '#FFF'],\n      [1, '#C40401'],\n    ],\n  },\n  series: [\n    {\n      name: 'Separators',\n      type: 'mapline',\n      color: 'silver',\n      nullColor: 'silver',\n      showInLegend: false,\n      enableMouseTracking: false,\n    },\n  ],\n};\n\nexport default (state = initial_state, action) => {\n  switch (action.type) {\n    case Actions.SET_TITLE:\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case Actions.SET_COLOR_AXIS_MAX:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_COLOR_AXIS_MIN:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_COLOR_AXIS_STOPS:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          stops: action.payload.stops,\n        },\n      };\n    case Actions.SET_MAP_DATA:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload.colorAxis,\n        },\n        series: [\n          { ...state.series[0] },\n          {\n            dataLabels: {\n              enabled: true,\n              format: '{point.name}',\n            },\n            ...action.payload.series,\n          },\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\n\nexport const getCSV = (url) => {\n  const validURL = isValidHttpUrl(url);\n  if (!validURL) {\n    return Promise.reject('invalid url');\n  }\n  return axios.get(\n     `https://map-dashboard-cors.herokuapp.com/${url}`,\n    //  `http://localhost:8080/${url}`,\n    {\n      headers: {'Access-Control-Allow-Origin': '*', \"Access-Control-Allow-Headers\":\"Access-Control-Allow-Headers\"}\n    },\n  );\n};\n\n\nfunction isValidHttpUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;  \n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}","import { getCSV } from '../../api/api';\nimport { call, put, takeLatest,all } from 'redux-saga/effects';\nimport * as Actions from './csvData.actions';\nimport { groupData, normalizeState, convertCSVToJSON } from './csvDataTools';\nimport { updateQuery } from '../../utils/queryUtils';\n\n\n\n\nfunction* fetchUser(action) {\n  try {\n    yield put({ type: Actions.REQUEST_DATA });\n    const url = action.payload.url;\n    updateQuery('url', url)\n    const { data: apiData } = yield call(getCSV, url);\n    const [titles, rawData] = yield call (convertCSVToJSON, apiData);\n    const stateKey =\n    titles.find((t) => normalizeState((rawData[0] || {})[t])) || '';\n    yield put({\n      type: Actions.LOAD_DATA_SUCCESS,\n      payload: {\n        url,\n        titles: titles,\n        rawData: rawData,\n        filteredData: rawData,\n        groupData: groupData(stateKey, rawData),\n        mapData: [],\n        stateKey,\n      },\n    });\n  } catch (e) {\n    yield put({ type: Actions.LOAD_DATA_FAILURE, message: e.message });\n  }\n}\n\nfunction* mySaga() {\n  yield all([takeLatest(Actions.LOAD_DATA_SAGA, fetchUser)]);\n}\n\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport csvDataReducer from './store/csvData/csvData.reducer';\nimport mapOptions from './store/mapOptions/mapOptions.reducer';\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from './store/csvData/sagas';\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(combineReducers({\n  data: csvDataReducer,\n  options: mapOptions,\n}), applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}