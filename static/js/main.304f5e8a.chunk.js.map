{"version":3,"sources":["components/Grid.js","store/mapOptions/mapOptions.actions.js","components/Chart.js","sections/ChartSection.js","components/DropDown.js","store/csvData/csvData.actions.js","utils/Calculations.js","components/DataSelector.js","components/DatePicker.js","components/DateFilter.js","components/BasicTextFields.js","components/UrlSelector.js","components/NumericEditor.js","components/ColorEditor.js","components/ChartSettings.js","sections/SettingSection.js","App.js","serviceWorker.js","constants/stateMap.js","store/csvData/csvDataTools.js","store/csvData/csvData.reducer.js","store/mapOptions/mapOptions.reducer.js","api/api.js","store/csvData/sagas.js","index.js"],"names":["Grid","useState","gridApi","setGridApi","setGridColumnApi","useSelector","data","filteredData","titles","className","style","height","width","marginRight","defaultColDef","resizable","onGridReady","params","api","columnApi","onRowDataChanged","sizeColumnsToFit","rowData","map","v","key","field","sortable","filter","skipHeaderOnAutoSize","suppressSizeToFit","setColorAxisStops","stops","type","payload","sort","a","b","setMapData","name","valArray","series","colorAxis","min","Math","max","highchartsMap","Highcharts","window","proj4","Chart","mapData","displayField","options","dispatch","useDispatch","useEffect","length","Actions","highcharts","constructorType","ChartSection","padding","border","useStyles","makeStyles","theme","button","display","formControl","minWidth","DropDown","values","onChange","label","value","classes","React","internalValue","setValue","open","setOpen","FormControl","InputLabel","id","Select","labelId","onClose","onOpen","event","target","MenuItem","loadData","url","updateDisplay","aggregationAction","Calculations","arr","this","numberData","parseFloat","isNaN","countOfNumbers","sum","undefined","_max","_min","_sum","reduce","aggerationOptions","Object","getOwnPropertyNames","prototype","k","s","startCase","DataSelector","stateKey","flexDirection","justifyContent","flex","df","container","flexWrap","textField","marginLeft","spacing","DatePickers","props","TextField","labelid","InputLabelProps","shrink","InputProps","inputProps","filterDates","start","end","item","date","Date","getTime","isWithinInterval","dateArr","d","dateFormat","format","DateFilter","rawData","dateField","setDateField","minDate","setMinDate","maxDate","setMaxDate","startDate","setStartDate","endDate","setEndDate","updateFilter","minVal","maxVal","fn","bind","alignContent","alignSelf","minDateValue","calcMin","maxDateValue","calcMax","e","BasicTextFields","paddingBottom","getQueryVariable","variable","vars","location","search","substring","split","i","pair","decodeURIComponent","UrlSelector","setUrl","setURL","useCallback","newUrl","queryParams","URLSearchParams","set","history","replaceState","toString","updateQuery","queryURL","defaultValue","onBlur","KEY_BACKSPACE","KEY_DELETE","getCharCodeFromEvent","which","keyCode","onKeyDown","indexOf","isLeftOrRight","deleteOrBackspace","stopPropagation","charCode","finishedEditingPressed","charStr","String","fromCharCode","test","isCharNumeric","isKeyPressedNumeric","preventDefault","NumericEditor","forwardRef","ref","initialState","startValue","highlightAllOnFocus","keyPress","charPress","createInitialState","setHighlightAllOnFocus","refInput","useRef","cancelBeforeStart","addEventListener","removeEventListener","useImperativeHandle","afterGuiAttached","eInput","current","focus","select","setSelectionRange","getValue","isCancelBeforeStart","isCancelAfterEnd","ColorEditor","isPopup","color","onChangeComplete","hex","ChartSettings","title","text","stopData","stop","_id","Button","onClick","editable","modules","ClientSideRowModelModule","onCellValueChanged","prams","cloneStopData","rowIndex","singleClickEdit","frameworkComponents","numericEditor","colorEditor","deleteButton","r","deleteRow","immutableData","getRowNodeId","cellEditor","cellStyle","backgroundColor","textShadow","letterSpacing","headerName","cellRenderer","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","DataSourceAccordion","Accordion","AccordionSummary","aria-controls","Typography","AccordionDetails","ChartSettingsAccordion","FiltersAccordion","AggregationSettingsAccordion","SettingSection","loading","console","log","overflow","App","textAlign","Boolean","hostname","match","groupData","obj","acc","normalizeState","push","state","cleanState","stateMap","toLowerCase","replace","filterData","filters","processToDisplay","groupedData","camelCase","calc","updateAggregationAction","Array","isArray","convertCSVToJSON","str","delimiter","slice","rows","row","object","curr","inital_state","filteringFuncitons","initial_state","chart","mapNavigation","enabled","nullColor","showInLegend","enableMouseTracking","getCSV","string","URL","_","protocol","isValidHttpUrl","axios","get","headers","Promise","reject","fetchUser","mySaga","action","put","call","apiData","find","t","message","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","aggerationOnly","existingFilters","newGroupData","dataLabels","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.304f5e8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { useSelector } from 'react-redux';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n\nconst Grid = () => {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const { filteredData,   titles} = useSelector(({ data }) => data);\n    const onGridReady = (params) => {\n      setGridApi(params.api);\n      setGridColumnApi(params.columnApi);\n      \n    }\n\n    const updateRows =() => {\n      if (gridApi) {\n\n        gridApi.sizeColumnsToFit();\n      }\n    }\n\n    return (\n        <div className=\"ag-theme-alpine\" style={ { height: 400, width: '100%', marginRight: '' } }>\n            <AgGridReact\n               defaultColDef={{ resizable: true }}\n               onGridReady={onGridReady}\n               onRowDataChanged={updateRows}\n                rowData={filteredData}>\n                  {titles.map(v  => \n                    <AgGridColumn key={v} field={v} sortable={true} filter={true} skipHeaderOnAutoSize={true} suppressSizeToFit={false}></AgGridColumn>\n                  ) }\n                \n            </AgGridReact>\n        </div>\n    );\n};\n\nexport default Grid;","export const SET_TITLE = 'SET_TITLE';\nexport const SET_COLOR_AXIS_MIN = 'SET_COLOR_AXIS_MIN';\nexport const SET_COLOR_AXIS_MAX = 'SET_COLOR_AXIS_MAX';\nexport const SET_COLOR_AXIS_STOPS = 'SET_COLOR_AXIS_MAX';\nexport const SET_MAP_DATA = 'SET_MAP_DATA';\nexport const setTitle = (text) => {\n  return {\n    type: SET_TITLE,\n    payload: {\n      text,\n    },\n  };\n};\nexport const setColorAxisMin = (min) => {\n  return {\n    type: SET_COLOR_AXIS_MIN,\n    payload: {\n      min,\n    },\n  };\n};\nexport const setColorAxisMax = (max) => {\n  return {\n    type: SET_COLOR_AXIS_MAX,\n    payload: {\n      max,\n    },\n  };\n};\nexport const setColorAxisStops = (stops) => {\n  stops = stops.sort((a, b) => (a[0] > b[0]) ? 1 : -1)\n  return {\n    type: SET_COLOR_AXIS_STOPS,\n    payload: {\n      stops,\n    },\n  };\n};\n\nexport const setMapData = (data = [], name = null) => {\n  const valArray = (data|| []).map((v) => v[1]);\n  return {\n    type: SET_MAP_DATA,\n    payload: {\n      series: {\n        data:[...data],\n        name,\n      },\n      colorAxis: {\n        min: Math.min(...valArray),\n        max: Math.max(...valArray),\n      },\n    },\n  };\n};\n","import React, { useEffect } from 'react';\nimport Highcharts from 'highcharts/highmaps';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from 'highcharts/modules/map';\nimport * as Actions from '../store/mapOptions/mapOptions.actions';\nimport proj4 from 'proj4';\nimport { useSelector, useDispatch } from 'react-redux';\n\nhighchartsMap(Highcharts);\nif (typeof window !== 'undefined') {\n  window.proj4 = window.proj4 || proj4;\n}\n\nconst Chart = () => {\n  const { mapData, displayField } = useSelector(({ data }) => data);\n  const options  = useSelector(({ options }) => options);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (mapData.length !== 0) {\n      dispatch(Actions.setMapData(mapData, displayField));\n    } else {\n      dispatch(Actions.setMapData())\n    }\n  }, [mapData, displayField, dispatch]);\n\n  return (\n    <>\n      {options ? (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n          constructorType={'mapChart'}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../components/Chart';\n\nconst ChartSection = () => {\n  return (<div\n    style={{\n      width: '50%',\n      padding: '10px',\n      border: '1px solid #c4c4c4',\n    }}>\n    <div style={{ width: '600', height: '400px' }}>\n      <Chart />\n    </div>\n  </div>);\n};\n\n\n\nexport default ChartSection;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    // marginTop: theme.spacing(2),\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: '100%',\n  },\n}));\n\nexport default function DropDown({ values, onChange, label, value }) {\n  const classes = useStyles();\n  const [internalValue, setValue] = React.useState(value);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    onChange(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div style={{width: '100%'}}>\n      <FormControl className={classes.formControl} >\n        <InputLabel id='demo-controlled-open-select-label'>{label}</InputLabel>\n        <Select\n          labelId='demo-controlled-open-select-label'\n          id='demo-controlled-open-select'\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={internalValue}\n          style={{width: '100%'}}\n          onChange={handleChange}>\n          <MenuItem value=''>\n            <em>None</em>\n          </MenuItem>\n          {values.map((v) => (\n            <MenuItem value={v} key={v}>{v}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","export const REQUEST_DATA = 'REQUEST_DATA';\nexport const LOAD_DATA_SAGA = 'LOAD_DATA_SAGA';\nexport const LOAD_DATA_SUCCESS = 'LOAD_DATA_SUCCESS';\nexport const LOAD_DATA_FAILURE = 'LOAD_DATA_FAILURE';\nexport const APPLY_FILTERS = 'APPLY_FILTERS';\nexport const SET_STATE_AND_GROUP = 'SET_STATE_AND_GROUP';\nexport const SET_DISPLAY = 'SET_DISPLAY_FIELD';\nexport const SET_AGGREGATION_TYPE = 'SET_AGGREGATION_TYPE';\nexport const SET_DISPLAY_FN = 'SET_DISPLAY_FN';\nexport const ADD_FILTER_FN = 'ADD_FILTER_FN';\n\nexport const loadData = (url) => ({\n  type: LOAD_DATA_SAGA,\n  payload: {\n    url,\n  },\n});\n\nexport const updateDisplay = (displayField, aggregationAction) => {\n  return {\n    type: SET_DISPLAY,\n    payload: {\n      displayField,\n      aggregationAction,\n    },\n  };\n};\n\nexport const addFilter = (filterFn, filterName) => {\n  return {\n    type: ADD_FILTER_FN,\n    payload: {\n      fn: filterFn,\n      name: filterName,\n    },\n  };\n};\n\nexport const groupData = (stateKey) => {\n  return {\n    type: SET_STATE_AND_GROUP,\n    payload: {\n      stateKey,\n    },\n  };\n};\n","export default class Calculations {\n  constructor(arr, key) {\n    this.arr = arr;\n    this.key = key;\n    this.numberData = arr\n      .map((a) => parseFloat(a[this.key]))\n      .filter((a) => !isNaN(a));\n  }\n\n  average() {\n    if (this.countOfNumbers()) {\n      return this.sum() / this.countOfNumbers();\n    }\n  }\n\n  count() {\n    return this.arr.length;\n  }\n\n  countOfNumbers() {\n    return this.numberData.length;\n  }\n\n  max() {\n    if (this._max !== undefined) {\n      return this._max;\n    }\n    this._max = Math.max(...this.numberData);\n    return this._max;\n  }\n\n  min() {\n    if (this._min !== undefined) {\n      return this._min;\n    }\n    this._min = Math.min(...this.numberData);\n    return this._min;\n  }\n\n  sum() {\n    if (this._sum !== undefined) {\n      return this._sum;\n    }\n    this._sum = this.numberData.reduce((a, b) => a + b, 0);\n    return this._sum;\n  }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DropDown from './DropDown';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport Calculations from '../utils/Calculations';\nimport {startCase} from 'lodash'\n\nconst aggerationOptions = Object.getOwnPropertyNames(Calculations.prototype)\n  .filter((k) => k !== 'constructor')\n  .map((s) => startCase(s));\n\nconst DataSelector = () => {\n  const { titles, stateKey, displayField, aggregationAction } = useSelector(({ data }) => data);\n  const dispatch = useDispatch();\n\n  const onStateChange = (v) => {\n    dispatch(Actions.groupData(v));\n  };\n  const onDisplayFieldChange = (df) => {\n    dispatch(Actions.updateDisplay(df, aggregationAction));\n  };\n  const onAggregationActionChange = (a) => {\n    dispatch(Actions.updateDisplay(displayField, a));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flex: 1,\n      }}>\n      {titles?.length ? (\n        <div style={{ width: '30%' }}>\n          <DropDown\n            value={stateKey}\n            values={titles}\n            onChange={onStateChange}\n            label='State Field'\n          />\n        </div>\n      ) : null}\n      {stateKey ? (\n        <>\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={displayField}\n              values={titles}\n              onChange={onDisplayFieldChange}\n              label='Display Field'\n            />\n          </div>\n          <div style={{ width: '30%' }}>\n            <DropDown\n              value={aggregationAction}\n              values={aggerationOptions}\n              onChange={onAggregationActionChange}\n              label='Aggregation'\n            />\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DataSelector;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function DatePickers(props) {\n  const classes = useStyles();\n  return (\n    <div >\n      <TextField\n        labelid={'date-picker-' +props.label }\n        type=\"date\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        InputProps={{ inputProps: { ...props } }}\n        {...props}\n      />\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport min from 'date-fns/min';\nimport max from 'date-fns/max';\nimport format from 'date-fns/format';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Actions from '../store/csvData/csvData.actions';\nimport DropDown from './DropDown';\nimport DatePicker from './DatePicker';\n\nconst filterDates = (field, start, end, item) => {\n  const date = new Date(item[field]);\n  if (isNaN(date.getTime())) {\n    return false;\n  }\n\n  return isWithinInterval(date, { start, end });\n};\n\nconst dateArr = (data, field) => {\n  return data.map((d) => new Date(d[field])).filter((v) => !isNaN(v.getTime()));\n};\n\nconst calcMin = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(min(arr));\n};\nconst calcMax = (data, field) => {\n  const arr = dateArr(data, field);\n  return dateFormat(max(arr));\n};\n\nconst dateFormat = (date) => {\n  return format(date, 'yyyy-MM-dd');\n};\n\nconst DateFilter = () => {\n  const dispatch = useDispatch();\n  const { titles, rawData } = useSelector(({ data }) => data);\n  const [dateField, setDateField] = useState('');\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  if (!titles?.length) {\n    return null;\n  }\n\n  const onDateFieldChange = (v) => {\n    try {\n      const minDateValue = calcMin(rawData, v);\n      const maxDateValue = calcMax(rawData, v);\n      setDateField(v);\n      setMinDate(minDateValue);\n      setStartDate(minDateValue);\n      setMaxDate(maxDateValue);\n      setEndDate(maxDateValue);\n      updateFilter(v, minDateValue, maxDateValue);\n    } catch (e) {\n      setDateField('');\n      setMinDate('');\n      setStartDate('');\n      setMaxDate('');\n      setEndDate('');\n    }\n  };\n\n  const onStartDateChange = (e) => {\n    const date = e.target.value;\n    setStartDate(date);\n    updateFilter(dateField, date, endDate);\n  };\n\n  const onEndDateChange = (e) => {\n    const date = e.target.value;\n    setEndDate(date);\n    updateFilter(dateField, startDate, date);\n  };\n\n  const updateFilter = (field, minVal, maxVal) => {\n    const fn = filterDates.bind(\n      null,\n      field,\n      new Date(minVal),\n      new Date(maxVal),\n    );\n    dispatch(Actions.addFilter(fn, 'date'));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <div style={{ width: '45%', alignSelf: 'center' }}>\n        <DropDown\n          value={dateField}\n          values={titles}\n          onChange={onDateFieldChange}\n          label='Date Field'\n        />\n      </div>\n      {dateField ? (\n        <div style={{display:'flex', flexDirection: 'row'}}>\n          <DatePicker\n            label='From'\n            min={minDate}\n            max={endDate}\n            value={startDate}\n            onChange={onStartDateChange}\n          />\n          <DatePicker\n            label='To'\n            min={startDate}\n            max={maxDate}\n            value={endDate}\n            onChange={onEndDateChange}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DateFilter;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function BasicTextFields(props) {\n  return (\n    <TextField id=\"standard-basic\" style={{width: '100%', paddingBottom: '10px'}} {...props} />\n    \n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport BasicTextFields from './BasicTextFields';\nimport { useDispatch } from 'react-redux';\nimport * as Actions from '../store/csvData/csvData.actions';\n\nconst getQueryVariable = (variable) => {\n  var query = window.location.search.substring(1);\n  var vars = query.split('&');\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split('=');\n    if (decodeURIComponent(pair[0]) === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n};\n\nconst updateQuery = (key, name) => {\n  const queryParams = new URLSearchParams(window.location.search);\n  queryParams.set(key, name);\n  window.history.replaceState(null, null, '?' + queryParams.toString());\n}\n\n\n//'http://d14wlfuexuxgcm.cloudfront.net/covid/rt.csv'\nconst UrlSelector = () => {\n  const dispatch = useDispatch();\n  const [url, setUrl] = useState(getQueryVariable('url') || '');\n  const setURL = useCallback(\n    (newUrl) => {\n      if (url === newUrl){\n        return;\n      }\n      setUrl(newUrl);\n      dispatch(Actions.loadData(newUrl));\n      updateQuery('url', newUrl);\n    },\n    [setUrl, dispatch, url],\n  );\n\n  useEffect(() => {\n    const queryURL = getQueryVariable('url');\n    if (queryURL) {\n      dispatch(Actions.loadData(queryURL));\n    }\n  }, [dispatch]);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <BasicTextFields\n        label='Url for a CSV'\n        defaultValue={url}\n        onBlur={(e) => setURL(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default UrlSelector;\n","import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_F2 = 113;\nconst KEY_ENTER = 13;\nconst KEY_TAB = 9;\n\nconst isLeftOrRight = (event) => {\n  return [37, 39].indexOf(event.keyCode) > -1;\n};\n\nconst getCharCodeFromEvent = (event) => {\n  event = event || window.event;\n  return typeof event.which === 'undefined' ? event.keyCode : event.which;\n};\n\nconst isCharNumeric = (charStr) => {\n  return !!/[0-9]*\\.?[0-9]+/.test(charStr);\n};\n\nconst isKeyPressedNumeric = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  const charStr = event.key ? event.key : String.fromCharCode(charCode);\n  const newVal = event.target.value + charStr;\n  return isCharNumeric(newVal);\n};\n\nconst deleteOrBackspace = (event) => {\n  return [KEY_DELETE, KEY_BACKSPACE].indexOf(event.keyCode) > -1;\n};\n\nconst finishedEditingPressed = (event) => {\n  const charCode = getCharCodeFromEvent(event);\n  return charCode === KEY_ENTER || charCode === KEY_TAB;\n};\nconst onKeyDown = (event) => {\n  if (isLeftOrRight(event) || deleteOrBackspace(event)) {\n    event.stopPropagation();\n    return;\n  }\n\n  if (!finishedEditingPressed(event) && !isKeyPressedNumeric(event)) {\n    if (event.preventDefault) event.preventDefault();\n  }\n};\n\nconst NumericEditor = forwardRef((props, ref) => {\n  const createInitialState = () => {\n    let startValue;\n    let highlightAllOnFocus = true;\n\n    if (props.keyPress === KEY_BACKSPACE || props.keyPress === KEY_DELETE) {\n      // if backspace or delete pressed, we clear the cell\n      startValue = '';\n    } else if (props.charPress) {\n      // if a letter was pressed, we start with the letter\n      startValue = props.charPress;\n      highlightAllOnFocus = false;\n    } else {\n      // otherwise we start with the current value\n      startValue = props.value;\n      if (props.keyPress === KEY_F2) {\n        highlightAllOnFocus = false;\n      }\n    }\n\n    return {\n      value: startValue,\n      highlightAllOnFocus,\n    };\n  };\n\n  const initialState = createInitialState();\n\n  const [value, setValue] = useState(initialState.value);\n  const [highlightAllOnFocus, setHighlightAllOnFocus] = useState(\n    initialState.highlightAllOnFocus,\n  );\n  const refInput = useRef(null);\n  const cancelBeforeStart =\n    props.charPress && '1234567890.'.indexOf(props.charPress) < 0;\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      afterGuiAttached() {\n        // get ref from React component\n        const eInput = refInput.current;\n        eInput.focus();\n        if (highlightAllOnFocus) {\n          eInput.select();\n\n          setHighlightAllOnFocus(false);\n        } else {\n          // when we started editing, we want the carot at the end, not the start.\n          // comes into play in two scenarios: a) when user hits F2 and b)\n          // when user hits a printable charac ter, then on IE (and only IE) the carot\n          // was placed after the first character, thus 'apply' would end up as 'pplea'\n          const length = eInput.value ? eInput.value.length : 0;\n          if (length > 0) {\n            eInput.setSelectionRange(length, length);\n          }\n        }\n      },\n\n      getValue() {\n        return value;\n      },\n\n      isCancelBeforeStart() {\n        return cancelBeforeStart;\n      },\n\n      // will reject the number if it greater than 1,000,000\n      // not very practical, but demonstrates the method.\n      isCancelAfterEnd() {\n        return value > 1000000;\n      },\n    };\n  });\n\n  return (\n    <input\n      ref={refInput}\n      value={value}\n      onChange={(event) => setValue(event.target.value)}\n      style={{ width: '95%' }}\n    />\n  );\n});\n\nexport default NumericEditor;\n","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { SketchPicker } from 'react-color'\n\nimport './ColorEditor.css';\nconst ColorEditor = forwardRef((props, ref) => {\n  const [value, setValue] = useState(props.value);\n  const refInput = useRef(null);\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      getValue() {\n        return value;\n      },\n      isPopup() {\n        return true;\n      },\n    };\n  });\n\n  return (\n    <div ref={refInput} style={{ padding: '10px' }}>\n      <SketchPicker\n        color={value}\n        onChangeComplete={({hex}) => {\n          if (hex) {\n            setValue(hex);\n          }\n        }}\n      />\n    </div>\n  );\n});\n\nexport default ColorEditor;\n","import React, { useState } from 'react';\nimport BasicTextField from './BasicTextFields';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport NumericEditor from './NumericEditor';\nimport ColorEditor from './ColorEditor';\nimport * as Actions from '../store/mapOptions/mapOptions.actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from \"@material-ui/core/Button\";\n\n\n\n\nconst ChartSettings = () => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const dispatch = useDispatch();\n  const title = useSelector(({ options }) => options.title.text);\n  const min = useSelector(({ options }) => options.colorAxis.min);\n  const max = useSelector(({ options }) => options.colorAxis.max);\n  const stopData = useSelector(({ options }) =>\n    options.colorAxis.stops.map(([stop, color], i) => ({\n      stop,\n      color,\n      _id: i+stop+color\n    })),\n  );\n\n  function onGridReady(params) {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  }\n\n  const onCellValueChanged = (prams) => {\n    const cloneStopData = stopData.map((e) => ({...e}));\n    cloneStopData[prams.rowIndex] = {...prams.data};\n    const data = cloneStopData.map(({ stop, color }) => [\n      stop,\n      color,\n    ]);\n    dispatch(Actions.setColorAxisStops(data))\n  };\n\n  const addStop = () => {\n    const data = [...stopData.map(({ stop, color }) => [\n      stop,\n      color,\n    ]), [0, '#000']];\n    dispatch(Actions.setColorAxisStops(data))\n  };\n  const deleteRow = (rowData) => {\n    const data = stopData.filter((r)=> r !== rowData.data).map(({ stop, color }) => [\n      stop,\n      color,\n    ])\n    dispatch(Actions.setColorAxisStops(data))\n  };\n\n  const setTitleHandle = (v) => {\n    dispatch(Actions.setTitle(v));\n  };\n\n  const setMinHandle = (v) => {\n    dispatch(Actions.setColorAxisMin(v));\n  };\n  const setMaxHandle = (v) => {\n    dispatch(Actions.setColorAxisMax(v));\n  };\n\n\n  const DeleteButton = (data) => {\n    return <Button  style={{width:'100%'}} onClick={()=> deleteRow(data)}>Delete</Button>\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n      <BasicTextField\n        label='title'\n        value={title}\n        onChange={(e) => setTitleHandle(e.target.value)}\n      />\n      <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n        <BasicTextField\n          label='Color Axis Min'\n          value={min}\n          onChange={(e) => setMinHandle(e.target.value)}\n        />\n        <BasicTextField\n          label='Color Axis Max'\n          value={max}\n          onChange={(e) => setMaxHandle(e.target.value)}\n        />\n         <Button  style={{width:'33%'}} onClick={addStop}>Add stop</Button>\n      </div>\n      <div style={{ width: '100%' }}>\n        <div className='ag-theme-alpine' style={{ height: 300, width: '100%' }}>\n          <AgGridReact\n            defaultColDef={{\n              flex: 1,\n              minWidth: 100,\n              filter: true,\n              editable: true,\n            }}\n            onGridReady={onGridReady}\n            modules={[ClientSideRowModelModule]}\n            onCellValueChanged={onCellValueChanged}\n            singleClickEdit={true}\n            frameworkComponents={{\n              numericEditor: NumericEditor,\n              colorEditor: ColorEditor,\n              deleteButton: DeleteButton\n            }}\n            immutableData\n            getRowNodeId={(data) => data._id}\n            rowData={stopData}>\n            <AgGridColumn\n              field='stop'\n              sortable={true}\n              editable={true}\n\n              cellEditor='numericEditor'></AgGridColumn>\n            <AgGridColumn\n              flex={2}\n              field='color'\n              editable={true}\n              cellEditor='colorEditor'\n              \n              cellStyle={(prams) => {\n                return {\n                  backgroundColor: prams?.value,\n                  color: 'white',\n                  textShadow:\n                    '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\n                  letterSpacing: '2px',\n                };\n              }}\n              ></AgGridColumn>\n            <AgGridColumn\n              headerName=\"Delete\"\n              cellRenderer='deleteButton'\n              editable={false}\n              ></AgGridColumn>\n          </AgGridReact>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartSettings;\n","import React from 'react';\nimport DataSelector from '../components/DataSelector';\nimport DateFilter from '../components/DateFilter';\nimport UrlSelector from '../components/UrlSelector';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ChartSettings from '../components/ChartSettings';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst DataSourceAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\n        <Typography className={classes.heading}>Data Source</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <UrlSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst ChartSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel4a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>Chart Settings</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <ChartSettings />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst FiltersAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel2a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>Filters</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <DateFilter />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\nconst AggregationSettingsAccordion = () => {\n  const classes = useStyles();\n  return (\n    <Accordion>\n      <AccordionSummary aria-controls='panel3a-content' id='panel3a-header'>\n        <Typography className={classes.heading}>\n          Aggregation Settings\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <DataSelector />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nconst SettingSection = () => {\n  const { loading, titles } = useSelector(({ data }) => data);\n\n  console.log(titles.length)\n  return (\n    <div\n      style={{\n        width: '50%',\n        padding: '10px',\n        border: '1px solid #c4c4c4',\n        overflow: 'scroll',\n      }}>\n      <DataSourceAccordion />\n      {loading ? 'loading' : null}\n      {!loading && titles.length ? <ChartSettingsAccordion /> : null}\n      {titles.length ? (\n        <>\n          <FiltersAccordion />\n          <AggregationSettingsAccordion />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SettingSection;\n","import React from 'react';\nimport Grid from './components/Grid';\nimport ChartSection from './sections/ChartSection';\nimport SettingSection from './sections/SettingSection';\n\nconst App = () => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div style={{textAlign: 'center'}}> \n      <h1>US State Data Mapping Tool</h1>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          padding: '10px',\n          justifyContent: 'space-between',\n          height: '422px'\n        }}>\n        <SettingSection />\n        <ChartSection />\n      </div>\n      <div style={{ flex: 1, padding: '10px' }}>\n        <Grid />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default{\n'al':'al',\n'ak':'ak',\n'az':'az',\n'ar':'ar',\n'ca':'ca',\n'co':'co',\n'ct':'ct',\n'de':'de',\n'fl':'fl',\n'ga':'ga',\n'hi':'hi',\n'id':'id',\n'il':'il',\n'in':'in',\n'ia':'ia',\n'ks':'ks',\n'ky':'ky',\n'la':'la',\n'me':'me',\n'md':'md',\n'ma':'ma',\n'mi':'mi',\n'mn':'mn',\n'ms':'ms',\n'mo':'mo',\n'mt':'mt',\n'ne':'ne',\n'nv':'nv',\n'nh':'nh',\n'nj':'nj',\n'nm':'nm',\n'ny':'ny',\n'nc':'nc',\n'nd':'nd',\n'oh':'oh',\n'ok':'ok',\n'or':'or',\n'pa':'pa',\n'ri':'ri',\n'sc':'sc',\n'sd':'sd',\n'tn':'tn',\n'tx':'tx',\n'ut':'ut',\n'vt':'vt',\n'va':'va',\n'wa':'wa',\n'wv':'wv',\n'wi':'wi',\n'wy':'wy',\n'alabama':'al',\n'alaska':'ak',\n'arizona':'az',\n'arkansas':'ar',\n'california':'ca',\n'colorado':'co',\n'connecticut':'ct',\n'delaware':'de',\n'florida':'fl',\n'georgia':'ga',\n'hawaii':'hi',\n'idaho':'id',\n'illinois':'il',\n'indiana':'in',\n'iowa':'ia',\n'kansas':'ks',\n'kentucky':'ky',\n'louisiana':'la',\n'maine':'me',\n'maryland':'md',\n'massachusetts':'ma',\n'michigan':'mi',\n'minnesota':'mn',\n'mississippi':'ms',\n'missouri':'mo',\n'montana':'mt',\n'nebraska':'ne',\n'nevada':'nv',\n'newhampshire':'nh',\n'newjersey':'nj',\n'newmexico':'nm',\n'newyork':'ny',\n'northcarolina':'nc',\n'northdakota':'nd',\n'ohio':'oh',\n'oklahoma':'ok',\n'oregon':'or',\n'pennsylvania':'pa',\n'rhodeisland':'ri',\n'southcarolina':'sc',\n'southdakota':'sd',\n'tennessee':'tn',\n'texas':'tx',\n'utah':'ut',\n'vermont':'vt',\n'virginia':'va',\n'washington':'wa',\n'westvirginia':'wv',\n'wisconsin':'wi',\n'wyoming':'wy',\n'ala':'al',\n'ariz':'az',\n'ark':'ar',\n'calif':'ca',\n'colo':'co',\n'conn':'ct',\n'del':'de',\n'fla':'fl',\n'ill':'il',\n'ind':'in',\n'kans':'ks',\n'mass':'ma',\n'mich':'mi',\n'minn':'mn',\n'miss':'ms',\n'mont':'mt',\n'neb':'ne',\n'nebr':'ne',\n'nev':'nv',\n'nmex':'nm',\n'ndak':'nd',\n'okla':'ok',\n'ore':'or',\n'oreg':'or',\n'sdak':'sd',\n'tenn':'tn',\n'tex':'tx',\n'wash':'wa',\n'wva':'wv',\n'wis':'wi',\n'wisc':'wi',\n'wyo':'wy',\n};\n","import stateMap from '../../constants/stateMap';\nimport Calculations from '../../utils/Calculations';\nimport { camelCase } from 'lodash';\n\nexport const groupData = (stateKey, data) => {\n  if (!stateKey) {\n    return [];\n  }\n  const obj = data.reduce((acc, item) => {\n    if (!item[stateKey]) {\n      return acc;\n    }\n    const key = normalizeState(item[stateKey]);\n    if (!key) {\n      return acc;\n    }\n    if (!acc[key]) {\n      acc[key] = [key, []];\n    }\n    acc[key][1].push(item);\n    return acc;\n  }, {});\n  return Object.values(obj);\n};\n\nexport const normalizeState = (state) => {\n  if (typeof state !== 'string') {\n    return null;\n  }\n  const cleanState = stateMap[state.toLowerCase().replace(/[^a-z]/gim, '')];\n  if (cleanState) {\n    return 'us-' + cleanState;\n  }\n  return null;\n};\nexport const filterData = (rawData, filters) => {\n  if (filters.length === 0) {\n    return rawData;\n  }\n  return rawData.filter((value) => {\n    const results = filters.map(({ fn }) => fn(value)).filter(Boolean);\n    return results.length === filters.length;\n  });\n};\n\nexport const processToDisplay = (\n  groupedData,\n  displayField,\n  aggregationAction,\n) => {\n  if (!aggregationAction || !displayField) {\n    return [];\n  }\n\n  aggregationAction = camelCase(aggregationAction);\n  return groupedData.map(([key, arr]) => {\n    const calc = new Calculations(arr, displayField);\n    const displayVal = calc[aggregationAction]();\n    return [key, displayVal, calc];\n  });\n};\n\nexport const updateAggregationAction = (mapData, aggregationAction) => {\n  if (!aggregationAction || !Array.isArray(mapData)) {\n    return [];\n  }\n\n  aggregationAction = camelCase(aggregationAction);\n  return mapData.map(([key, df, calc]) => {\n    const displayVal = calc[aggregationAction]();\n    return [key, displayVal, calc];\n  });\n};\n\nexport const convertCSVToJSON = (str = '', delimiter = ',') => {\n  const titles = str.slice(0, str.indexOf('\\n')).split(delimiter);\n  const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n  return [\n    titles,\n    rows.map((row) => {\n      const values = row.split(delimiter);\n      return titles.reduce((object, curr, i) => {\n        object[curr] = values[i];\n        return object;\n      }, {});\n    }),\n  ];\n};\n","import * as Actions from './csvData.actions';\nimport { filterData, groupData, processToDisplay, updateAggregationAction } from './csvDataTools';\n\n\nconst inital_state = {\n  url: '',\n  titles: [], // list of keys that can be selected\n  rawData: [], // the parsed CSV file\n  filteredData: [], // any filters run on the data (using filter funciton) also showen in table//\n  stateKey: '',\n  groupData: [],\n  displayField: '',\n  aggregationAction: '',\n  filteringFuncitons: [],\n  mapData: [], //data grouped and agrated\n  loading: false,\n};\n\nexport default (state = inital_state, action) => {\n  switch (action.type) {\n    case Actions.REQUEST_DATA:\n      return {\n        ...inital_state,\n        loading: true,\n      };\n    case Actions.LOAD_DATA_SUCCESS:\n      return {\n        ...inital_state,\n        loading: false,\n        ...action.payload\n      };\n    case Actions.LOAD_DATA_FAILURE: \n    return {\n      ...inital_state,\n      loading: false\n    };\n    case Actions.SET_STATE_AND_GROUP:\n      return {\n        ...state,\n        stateKey: action.payload.stateKey,\n        groupData: groupData(action.payload.stateKey, state.filteredData),\n        mapData: [],\n      };\n    case Actions.SET_DISPLAY:\n      //updateAaggregationAction\n      const aggerationOnly =\n        state.displayField &&\n        state.aggregationAction &&\n        action.payload.displayField === state.displayField;\n      return {\n        ...state,\n        displayField: action.payload.displayField,\n        aggregationAction: action.payload.aggregationAction,\n        mapData: aggerationOnly\n          ? updateAggregationAction(\n              state.mapData,\n              action.payload.aggregationAction,\n            )\n          : processToDisplay(\n              state.groupData,\n              action.payload.displayField,\n              action.payload.aggregationAction,\n            ),\n      };\n    case Actions.ADD_FILTER_FN:\n      const existingFilters = state.filteringFuncitons.filter(\n        ({ name }) => name !== action.payload.name,\n      );\n      const filteringFuncitons = [...existingFilters, action.payload];\n      const filteredData = filterData(state.rawData, filteringFuncitons);\n      const newGroupData = groupData(state.stateKey, filteredData);\n      return {\n        ...state,\n        filteringFuncitons,\n        filteredData,\n        groupData: newGroupData,\n        mapData: processToDisplay(\n          newGroupData,\n          state.displayField,\n          state.aggregationAction,\n        ),\n      };\n    case Actions.APPLY_FILTERS:\n      return {\n        ...state,\n        mapData: action.payload.mapData,\n      };\n    default:\n      return state;\n  }\n};\n\n\n","import * as Actions from './mapOptions.actions';\n\nimport mapData from '@highcharts/map-collection/countries/us/us-all.geo.json';\nconst initial_state = {\n  chart: {\n    map: mapData,\n  },\n  title: {\n    text: '',\n  },\n  mapNavigation: {\n    enabled: true,\n  },\n  colorAxis: {\n    min: 0,\n    max: 1,\n    stops: [\n      [0, '#00FF00'],\n      [0.5, '#FFF'],\n      [1, '#C40401'],\n    ],\n  },\n  series: [\n    {\n      name: 'Separators',\n      type: 'mapline',\n      color: 'silver',\n      nullColor: 'silver',\n      showInLegend: false,\n      enableMouseTracking: false,\n    },\n  ],\n};\n\nexport default (state = initial_state, action) => {\n  switch (action.type) {\n    case Actions.SET_TITLE:\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case Actions.SET_COLOR_AXIS_MAX:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_COLOR_AXIS_MIN:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_COLOR_AXIS_STOPS:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload,\n        },\n      };\n    case Actions.SET_MAP_DATA:\n      return {\n        ...state,\n        colorAxis: {\n          ...state.colorAxis,\n          ...action.payload.colorAxis,\n        },\n        series: [\n          { ...state.series[0] },\n          {\n            dataLabels: {\n              enabled: true,\n              format: '{point.name}',\n            },\n            ...action.payload.series,\n          },\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\n\nexport const getCSV = (url) => {\n  const validURL = isValidHttpUrl(url);\n  if (!validURL) {\n    return Promise.reject('invalid url');\n  }\n  return axios.get(\n     `https://map-dashboard-cors.herokuapp.com/${url}`,\n    //  `http://localhost:8080/${url}`,\n    {\n      headers: {'Access-Control-Allow-Origin': '*', \"Access-Control-Allow-Headers\":\"Access-Control-Allow-Headers\"}\n    },\n  );\n};\n\n\nfunction isValidHttpUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;  \n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}","import { getCSV } from '../../api/api';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport * as Actions from './csvData.actions';\nimport { groupData, normalizeState, convertCSVToJSON } from './csvDataTools';\n\n\n\n\nfunction* fetchUser(action) {\n  try {\n    yield put({ type: Actions.REQUEST_DATA });\n    const url = action.payload.url;\n    const { data: apiData } = yield call(getCSV, url);\n    const [titles, rawData] = yield call (convertCSVToJSON, apiData);\n    const stateKey =\n    titles.find((t) => normalizeState((rawData[0] || {})[t])) || '';\n    console.log('loaded')\n    yield put({\n      type: Actions.LOAD_DATA_SUCCESS,\n      payload: {\n        url,\n        titles: titles,\n        rawData: rawData,\n        filteredData: rawData,\n        groupData: groupData(stateKey, rawData),\n        mapData: [],\n        stateKey,\n      },\n    });\n  } catch (e) {\n    console.log (e)\n    yield put({ type: Actions.LOAD_DATA_FAILURE, message: e.message });\n  }\n}\n\nfunction* mySaga() {\n  yield takeLatest(Actions.LOAD_DATA_SAGA, fetchUser);\n}\n\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport csvDataReducer from './store/csvData/csvData.reducer';\nimport mapOptions from './store/mapOptions/mapOptions.reducer';\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from './store/csvData/sagas';\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(combineReducers({\n  data: csvDataReducer,\n  options: mapOptions,\n}), applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}